
/**
 * CampaignManagementServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.microsoft.adcenter.v8;

        

        /*
        *  CampaignManagementServiceStub java implementation
        */

        
        public class CampaignManagementServiceStub extends org.apache.axis2.client.Stub
        implements CampaignManagementService{
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("CampaignManagementService" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[88];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[2]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[3]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[4]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[5]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[6]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[7]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[8]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[9]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[10]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[11]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[12]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[13]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[14]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[15]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[16]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[17]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[18]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[19]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[20]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[21]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[22]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[23]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[24]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[25]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[26]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[27]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[28]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[29]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[30]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[31]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[32]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[33]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[34]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[35]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[36]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[37]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[38]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[39]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[40]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[41]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[42]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[43]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[44]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[45]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[46]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[47]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[48]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[49]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[50]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[51]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[52]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[53]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[54]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[55]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[56]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[57]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[58]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[59]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[60]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[61]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[62]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[63]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[64]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[65]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[66]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[67]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[68]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[69]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[70]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[71]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[72]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[73]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[74]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[75]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[76]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[77]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[78]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[79]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[80]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[81]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[82]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[83]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[84]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[85]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[86]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICampaignManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[87]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTarget"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTarget"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteKeywords"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateGoals"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "UpdateGoals"),"com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTarget"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTarget"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByAdGroupIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNormalizedStrings"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteSitePlacements"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToAdGroup"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SubmitAdGroupForApproval"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetByAdGroupId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseSitePlacements"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByCampaignIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddBusinesses"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddBusinesses"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByEditorialStatus"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordEditorialReasonsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromAdGroup"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DownloadCampaignHierarchy"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeKeywords"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdExtensionsFromCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateDeviceOSTargets"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByEditorialStatus"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddGoals"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","AnalyticsApiFaultDetail"), "AddGoals"),"com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDownloadStatus"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetTargetToCampaign"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateTargetsInLibrary"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteBusinesses"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAnalyticsType"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByAdGroupIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByAccountId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddAds"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetCampaignAdExtensions"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAccountMigrationStatuses"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetDeviceOSTargetsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetGoals"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetGoals"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByAdGroupId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeSitesToAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeSitesByCampaignIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTarget"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTarget"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTarget"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddTargetsToLibrary"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAnalyticsType"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdExtensionsByCampaignIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetFromCampaign"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByAdGroupIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateAds"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignAdExtensions"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetAdExtensionsToCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteGoals"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteGoals"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteGoals"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseKeywords"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseKeywords"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetNegativeKeywordsByCampaignIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "UpdateKeywords"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddKeywords"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddKeywords"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","EditorialApiFaultDetail"), "AddKeywords"),"com.microsoft.adcenter.v8.EditorialApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsInfoFromLibrary"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "SetNegativeKeywordsToCampaigns"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdsByAdGroupId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetTargetsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "DeleteTargetsFromLibrary"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetCampaignsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeSitePlacements"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetKeywordsByIds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "ResumeAds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "ResumeAds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddAdExtensions"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateSitePlacements"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetPlacementDetailsForUrls"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "PauseAds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAds"),"com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "PauseAds"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetSitePlacementsByAdGroupId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateBusinesses"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "AddSitePlacements"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetAdGroupsByCampaignId"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "GetBusinessesInfo"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8","ApiFaultDetail"), "UpdateAdGroups"),"com.microsoft.adcenter.v8.ApiFaultDetailE");
           


    }

    /**
      *Constructor that takes in a configContext
      */

    public CampaignManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public CampaignManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
        _service.applyPolicy();
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public CampaignManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"https://adcenterapi.microsoft.com/Api/Advertiser/V8/CampaignManagement/CampaignManagementService.svc" );
                
    }

    /**
     * Default Constructor
     */
    public CampaignManagementServiceStub() throws org.apache.axis2.AxisFault {
        
                    this("https://adcenterapi.microsoft.com/Api/Advertiser/V8/CampaignManagement/CampaignManagementService.svc" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public CampaignManagementServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteAds
                     * @param deleteAdsRequest226
                    
                     * @param applicationToken227
                    
                     * @param customerAccountId228
                    
                     * @param customerId229
                    
                     * @param developerToken230
                    
                     * @param password231
                    
                     * @param userName232
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteAdsResponse deleteAds(

                            com.microsoft.adcenter.v8.DeleteAdsRequest deleteAdsRequest226,com.microsoft.adcenter.v8.ApplicationToken applicationToken227,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId228,com.microsoft.adcenter.v8.CustomerId customerId229,com.microsoft.adcenter.v8.DeveloperToken developerToken230,com.microsoft.adcenter.v8.Password password231,com.microsoft.adcenter.v8.UserName userName232)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("DeleteAds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdsRequest226,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken227!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken227 = toOM(applicationToken227, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementapplicationToken227,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId228!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId228 = toOM(customerAccountId228, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementcustomerAccountId228,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId229!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId229 = toOM(customerId229, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementcustomerId229,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken230!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken230 = toOM(developerToken230, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementdeveloperToken230,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password231!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword231 = toOM(password231, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementpassword231,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName232!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName232 = toOM(userName232, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementuserName232,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteAdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteAdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteAds
                    * @param deleteAdsRequest226
                
                    * @param applicationToken227
                
                    * @param customerAccountId228
                
                    * @param customerId229
                
                    * @param developerToken230
                
                    * @param password231
                
                    * @param userName232
                
                */
                public  void startdeleteAds(

                 com.microsoft.adcenter.v8.DeleteAdsRequest deleteAdsRequest226,com.microsoft.adcenter.v8.ApplicationToken applicationToken227,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId228,
                    com.microsoft.adcenter.v8.CustomerId customerId229,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken230,
                    com.microsoft.adcenter.v8.Password password231,
                    com.microsoft.adcenter.v8.UserName userName232,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("DeleteAds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdsRequest226,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken227!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken227 = toOM(applicationToken227, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementapplicationToken227,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId228!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId228 = toOM(customerAccountId228, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementcustomerAccountId228,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId229!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId229 = toOM(customerId229, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementcustomerId229,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken230!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken230 = toOM(developerToken230, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementdeveloperToken230,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password231!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword231 = toOM(password231, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementpassword231,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName232!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName232 = toOM(userName232, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAds")));
                                                    addHeader(omElementuserName232,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteAdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteAds(
                                        (com.microsoft.adcenter.v8.DeleteAdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteAds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAds((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAds((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteAds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAds(f);
                                            }
									    } else {
										    callback.receiveErrordeleteAds(f);
									    }
									} else {
									    callback.receiveErrordeleteAds(f);
									}
								} else {
								    callback.receiveErrordeleteAds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteAds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteTarget
                     * @param deleteTargetRequest234
                    
                     * @param applicationToken235
                    
                     * @param customerAccountId236
                    
                     * @param customerId237
                    
                     * @param developerToken238
                    
                     * @param password239
                    
                     * @param userName240
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteTargetResponse deleteTarget(

                            com.microsoft.adcenter.v8.DeleteTargetRequest deleteTargetRequest234,com.microsoft.adcenter.v8.ApplicationToken applicationToken235,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId236,com.microsoft.adcenter.v8.CustomerId customerId237,com.microsoft.adcenter.v8.DeveloperToken developerToken238,com.microsoft.adcenter.v8.Password password239,com.microsoft.adcenter.v8.UserName userName240)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("DeleteTarget");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetRequest234,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTarget"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken235!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken235 = toOM(applicationToken235, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementapplicationToken235,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId236!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId236 = toOM(customerAccountId236, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementcustomerAccountId236,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId237!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId237 = toOM(customerId237, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementcustomerId237,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken238!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken238 = toOM(developerToken238, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementdeveloperToken238,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password239!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword239 = toOM(password239, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementpassword239,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName240!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName240 = toOM(userName240, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementuserName240,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteTargetResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteTargetResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteTarget
                    * @param deleteTargetRequest234
                
                    * @param applicationToken235
                
                    * @param customerAccountId236
                
                    * @param customerId237
                
                    * @param developerToken238
                
                    * @param password239
                
                    * @param userName240
                
                */
                public  void startdeleteTarget(

                 com.microsoft.adcenter.v8.DeleteTargetRequest deleteTargetRequest234,com.microsoft.adcenter.v8.ApplicationToken applicationToken235,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId236,
                    com.microsoft.adcenter.v8.CustomerId customerId237,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken238,
                    com.microsoft.adcenter.v8.Password password239,
                    com.microsoft.adcenter.v8.UserName userName240,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
             _operationClient.getOptions().setAction("DeleteTarget");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetRequest234,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTarget"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken235!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken235 = toOM(applicationToken235, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementapplicationToken235,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId236!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId236 = toOM(customerAccountId236, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementcustomerAccountId236,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId237!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId237 = toOM(customerId237, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementcustomerId237,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken238!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken238 = toOM(developerToken238, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementdeveloperToken238,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password239!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword239 = toOM(password239, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementpassword239,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName240!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName240 = toOM(userName240, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTarget")));
                                                    addHeader(omElementuserName240,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteTargetResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteTarget(
                                        (com.microsoft.adcenter.v8.DeleteTargetResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteTarget(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTarget"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTarget((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTarget((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTarget_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteTarget(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTarget(f);
                                            }
									    } else {
										    callback.receiveErrordeleteTarget(f);
									    }
									} else {
									    callback.receiveErrordeleteTarget(f);
									}
								} else {
								    callback.receiveErrordeleteTarget(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteTarget(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addCampaigns
                     * @param addCampaignsRequest242
                    
                     * @param applicationToken243
                    
                     * @param customerAccountId244
                    
                     * @param customerId245
                    
                     * @param developerToken246
                    
                     * @param password247
                    
                     * @param userName248
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddCampaignsResponse addCampaigns(

                            com.microsoft.adcenter.v8.AddCampaignsRequest addCampaignsRequest242,com.microsoft.adcenter.v8.ApplicationToken applicationToken243,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId244,com.microsoft.adcenter.v8.CustomerId customerId245,com.microsoft.adcenter.v8.DeveloperToken developerToken246,com.microsoft.adcenter.v8.Password password247,com.microsoft.adcenter.v8.UserName userName248)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("AddCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addCampaignsRequest242,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken243!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken243 = toOM(applicationToken243, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementapplicationToken243,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId244!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId244 = toOM(customerAccountId244, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementcustomerAccountId244,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId245!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId245 = toOM(customerId245, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementcustomerId245,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken246!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken246 = toOM(developerToken246, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementdeveloperToken246,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password247!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword247 = toOM(password247, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementpassword247,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName248!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName248 = toOM(userName248, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementuserName248,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddCampaigns
                    * @param addCampaignsRequest242
                
                    * @param applicationToken243
                
                    * @param customerAccountId244
                
                    * @param customerId245
                
                    * @param developerToken246
                
                    * @param password247
                
                    * @param userName248
                
                */
                public  void startaddCampaigns(

                 com.microsoft.adcenter.v8.AddCampaignsRequest addCampaignsRequest242,com.microsoft.adcenter.v8.ApplicationToken applicationToken243,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId244,
                    com.microsoft.adcenter.v8.CustomerId customerId245,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken246,
                    com.microsoft.adcenter.v8.Password password247,
                    com.microsoft.adcenter.v8.UserName userName248,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
             _operationClient.getOptions().setAction("AddCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addCampaignsRequest242,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken243!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken243 = toOM(applicationToken243, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementapplicationToken243,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId244!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId244 = toOM(customerAccountId244, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementcustomerAccountId244,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId245!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId245 = toOM(customerId245, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementcustomerId245,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken246!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken246 = toOM(developerToken246, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementdeveloperToken246,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password247!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword247 = toOM(password247, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementpassword247,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName248!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName248 = toOM(userName248, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addCampaigns")));
                                                    addHeader(omElementuserName248,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddCampaigns(
                                        (com.microsoft.adcenter.v8.AddCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_AddCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddCampaigns(f);
                                            }
									    } else {
										    callback.receiveErroraddCampaigns(f);
									    }
									} else {
									    callback.receiveErroraddCampaigns(f);
									}
								} else {
								    callback.receiveErroraddCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteKeywords
                     * @param deleteKeywordsRequest250
                    
                     * @param applicationToken251
                    
                     * @param customerAccountId252
                    
                     * @param customerId253
                    
                     * @param developerToken254
                    
                     * @param password255
                    
                     * @param userName256
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteKeywordsResponse deleteKeywords(

                            com.microsoft.adcenter.v8.DeleteKeywordsRequest deleteKeywordsRequest250,com.microsoft.adcenter.v8.ApplicationToken applicationToken251,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId252,com.microsoft.adcenter.v8.CustomerId customerId253,com.microsoft.adcenter.v8.DeveloperToken developerToken254,com.microsoft.adcenter.v8.Password password255,com.microsoft.adcenter.v8.UserName userName256)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
              _operationClient.getOptions().setAction("DeleteKeywords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteKeywordsRequest250,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteKeywords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken251!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken251 = toOM(applicationToken251, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementapplicationToken251,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId252!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId252 = toOM(customerAccountId252, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementcustomerAccountId252,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId253!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId253 = toOM(customerId253, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementcustomerId253,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken254!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken254 = toOM(developerToken254, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementdeveloperToken254,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password255!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword255 = toOM(password255, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementpassword255,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName256!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName256 = toOM(userName256, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementuserName256,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteKeywordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteKeywordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteKeywords
                    * @param deleteKeywordsRequest250
                
                    * @param applicationToken251
                
                    * @param customerAccountId252
                
                    * @param customerId253
                
                    * @param developerToken254
                
                    * @param password255
                
                    * @param userName256
                
                */
                public  void startdeleteKeywords(

                 com.microsoft.adcenter.v8.DeleteKeywordsRequest deleteKeywordsRequest250,com.microsoft.adcenter.v8.ApplicationToken applicationToken251,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId252,
                    com.microsoft.adcenter.v8.CustomerId customerId253,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken254,
                    com.microsoft.adcenter.v8.Password password255,
                    com.microsoft.adcenter.v8.UserName userName256,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
             _operationClient.getOptions().setAction("DeleteKeywords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteKeywordsRequest250,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteKeywords"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken251!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken251 = toOM(applicationToken251, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementapplicationToken251,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId252!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId252 = toOM(customerAccountId252, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementcustomerAccountId252,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId253!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId253 = toOM(customerId253, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementcustomerId253,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken254!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken254 = toOM(developerToken254, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementdeveloperToken254,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password255!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword255 = toOM(password255, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementpassword255,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName256!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName256 = toOM(userName256, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteKeywords")));
                                                    addHeader(omElementuserName256,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteKeywordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteKeywords(
                                        (com.microsoft.adcenter.v8.DeleteKeywordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteKeywords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteKeywords"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteKeywords_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteKeywords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteKeywords(f);
                                            }
									    } else {
										    callback.receiveErrordeleteKeywords(f);
									    }
									} else {
									    callback.receiveErrordeleteKeywords(f);
									}
								} else {
								    callback.receiveErrordeleteKeywords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteKeywords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[3].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[3].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateGoals
                     * @param updateGoalsRequest258
                    
                     * @param applicationToken259
                    
                     * @param customerAccountId260
                    
                     * @param customerId261
                    
                     * @param developerToken262
                    
                     * @param password263
                    
                     * @param userName264
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateGoalsResponse updateGoals(

                            com.microsoft.adcenter.v8.UpdateGoalsRequest updateGoalsRequest258,com.microsoft.adcenter.v8.ApplicationToken applicationToken259,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId260,com.microsoft.adcenter.v8.CustomerId customerId261,com.microsoft.adcenter.v8.DeveloperToken developerToken262,com.microsoft.adcenter.v8.Password password263,com.microsoft.adcenter.v8.UserName userName264)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
              _operationClient.getOptions().setAction("UpdateGoals");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateGoalsRequest258,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateGoals"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken259!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken259 = toOM(applicationToken259, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementapplicationToken259,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId260!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId260 = toOM(customerAccountId260, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementcustomerAccountId260,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId261!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId261 = toOM(customerId261, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementcustomerId261,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken262!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken262 = toOM(developerToken262, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementdeveloperToken262,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password263!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword263 = toOM(password263, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementpassword263,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName264!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName264 = toOM(userName264, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementuserName264,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateGoalsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateGoalsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateGoals
                    * @param updateGoalsRequest258
                
                    * @param applicationToken259
                
                    * @param customerAccountId260
                
                    * @param customerId261
                
                    * @param developerToken262
                
                    * @param password263
                
                    * @param userName264
                
                */
                public  void startupdateGoals(

                 com.microsoft.adcenter.v8.UpdateGoalsRequest updateGoalsRequest258,com.microsoft.adcenter.v8.ApplicationToken applicationToken259,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId260,
                    com.microsoft.adcenter.v8.CustomerId customerId261,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken262,
                    com.microsoft.adcenter.v8.Password password263,
                    com.microsoft.adcenter.v8.UserName userName264,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
             _operationClient.getOptions().setAction("UpdateGoals");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateGoalsRequest258,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateGoals"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken259!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken259 = toOM(applicationToken259, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementapplicationToken259,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId260!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId260 = toOM(customerAccountId260, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementcustomerAccountId260,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId261!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId261 = toOM(customerId261, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementcustomerId261,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken262!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken262 = toOM(developerToken262, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementdeveloperToken262,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password263!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword263 = toOM(password263, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementpassword263,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName264!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName264 = toOM(userName264, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateGoals")));
                                                    addHeader(omElementuserName264,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateGoalsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateGoals(
                                        (com.microsoft.adcenter.v8.UpdateGoalsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateGoals(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateGoals"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateGoals((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateGoals((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateGoals((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateGoals_AnalyticsApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateGoals(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateGoals(f);
                                            }
									    } else {
										    callback.receiveErrorupdateGoals(f);
									    }
									} else {
									    callback.receiveErrorupdateGoals(f);
									}
								} else {
								    callback.receiveErrorupdateGoals(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateGoals(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[4].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[4].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateTarget
                     * @param updateTargetRequest266
                    
                     * @param applicationToken267
                    
                     * @param customerAccountId268
                    
                     * @param customerId269
                    
                     * @param developerToken270
                    
                     * @param password271
                    
                     * @param userName272
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateTargetResponse updateTarget(

                            com.microsoft.adcenter.v8.UpdateTargetRequest updateTargetRequest266,com.microsoft.adcenter.v8.ApplicationToken applicationToken267,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId268,com.microsoft.adcenter.v8.CustomerId customerId269,com.microsoft.adcenter.v8.DeveloperToken developerToken270,com.microsoft.adcenter.v8.Password password271,com.microsoft.adcenter.v8.UserName userName272)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
              _operationClient.getOptions().setAction("UpdateTarget");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateTargetRequest266,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTarget"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken267!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken267 = toOM(applicationToken267, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementapplicationToken267,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId268!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId268 = toOM(customerAccountId268, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementcustomerAccountId268,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId269!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId269 = toOM(customerId269, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementcustomerId269,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken270!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken270 = toOM(developerToken270, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementdeveloperToken270,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password271!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword271 = toOM(password271, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementpassword271,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName272!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName272 = toOM(userName272, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementuserName272,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateTargetResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateTargetResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateTarget
                    * @param updateTargetRequest266
                
                    * @param applicationToken267
                
                    * @param customerAccountId268
                
                    * @param customerId269
                
                    * @param developerToken270
                
                    * @param password271
                
                    * @param userName272
                
                */
                public  void startupdateTarget(

                 com.microsoft.adcenter.v8.UpdateTargetRequest updateTargetRequest266,com.microsoft.adcenter.v8.ApplicationToken applicationToken267,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId268,
                    com.microsoft.adcenter.v8.CustomerId customerId269,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken270,
                    com.microsoft.adcenter.v8.Password password271,
                    com.microsoft.adcenter.v8.UserName userName272,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
             _operationClient.getOptions().setAction("UpdateTarget");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateTargetRequest266,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTarget"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken267!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken267 = toOM(applicationToken267, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementapplicationToken267,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId268!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId268 = toOM(customerAccountId268, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementcustomerAccountId268,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId269!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId269 = toOM(customerId269, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementcustomerId269,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken270!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken270 = toOM(developerToken270, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementdeveloperToken270,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password271!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword271 = toOM(password271, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementpassword271,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName272!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName272 = toOM(userName272, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTarget")));
                                                    addHeader(omElementuserName272,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateTargetResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateTarget(
                                        (com.microsoft.adcenter.v8.UpdateTargetResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateTarget(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTarget"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateTarget((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateTarget((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTarget_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateTarget(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTarget(f);
                                            }
									    } else {
										    callback.receiveErrorupdateTarget(f);
									    }
									} else {
									    callback.receiveErrorupdateTarget(f);
									}
								} else {
								    callback.receiveErrorupdateTarget(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateTarget(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[5].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[5].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getSitePlacementsByIds
                     * @param getSitePlacementsByIdsRequest274
                    
                     * @param applicationToken275
                    
                     * @param customerAccountId276
                    
                     * @param customerId277
                    
                     * @param developerToken278
                    
                     * @param password279
                    
                     * @param userName280
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse getSitePlacementsByIds(

                            com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest getSitePlacementsByIdsRequest274,com.microsoft.adcenter.v8.ApplicationToken applicationToken275,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId276,com.microsoft.adcenter.v8.CustomerId customerId277,com.microsoft.adcenter.v8.DeveloperToken developerToken278,com.microsoft.adcenter.v8.Password password279,com.microsoft.adcenter.v8.UserName userName280)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
              _operationClient.getOptions().setAction("GetSitePlacementsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getSitePlacementsByIdsRequest274,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken275!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken275 = toOM(applicationToken275, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementapplicationToken275,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId276!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId276 = toOM(customerAccountId276, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementcustomerAccountId276,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId277!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId277 = toOM(customerId277, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementcustomerId277,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken278!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken278 = toOM(developerToken278, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementdeveloperToken278,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password279!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword279 = toOM(password279, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementpassword279,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName280!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName280 = toOM(userName280, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementuserName280,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetSitePlacementsByIds
                    * @param getSitePlacementsByIdsRequest274
                
                    * @param applicationToken275
                
                    * @param customerAccountId276
                
                    * @param customerId277
                
                    * @param developerToken278
                
                    * @param password279
                
                    * @param userName280
                
                */
                public  void startgetSitePlacementsByIds(

                 com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest getSitePlacementsByIdsRequest274,com.microsoft.adcenter.v8.ApplicationToken applicationToken275,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId276,
                    com.microsoft.adcenter.v8.CustomerId customerId277,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken278,
                    com.microsoft.adcenter.v8.Password password279,
                    com.microsoft.adcenter.v8.UserName userName280,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
             _operationClient.getOptions().setAction("GetSitePlacementsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getSitePlacementsByIdsRequest274,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken275!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken275 = toOM(applicationToken275, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementapplicationToken275,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId276!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId276 = toOM(customerAccountId276, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementcustomerAccountId276,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId277!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId277 = toOM(customerId277, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementcustomerId277,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken278!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken278 = toOM(developerToken278, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementdeveloperToken278,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password279!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword279 = toOM(password279, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementpassword279,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName280!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName280 = toOM(userName280, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByIds")));
                                                    addHeader(omElementuserName280,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetSitePlacementsByIds(
                                        (com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetSitePlacementsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetSitePlacementsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetSitePlacementsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetSitePlacementsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetSitePlacementsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetSitePlacementsByIds(f);
									}
								} else {
								    callback.receiveErrorgetSitePlacementsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetSitePlacementsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[6].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[6].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getTargetsByAdGroupIds
                     * @param getTargetsByAdGroupIdsRequest282
                    
                     * @param applicationToken283
                    
                     * @param customerAccountId284
                    
                     * @param customerId285
                    
                     * @param developerToken286
                    
                     * @param password287
                    
                     * @param userName288
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse getTargetsByAdGroupIds(

                            com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest getTargetsByAdGroupIdsRequest282,com.microsoft.adcenter.v8.ApplicationToken applicationToken283,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId284,com.microsoft.adcenter.v8.CustomerId customerId285,com.microsoft.adcenter.v8.DeveloperToken developerToken286,com.microsoft.adcenter.v8.Password password287,com.microsoft.adcenter.v8.UserName userName288)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
              _operationClient.getOptions().setAction("GetTargetsByAdGroupIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByAdGroupIdsRequest282,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByAdGroupIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken283!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken283 = toOM(applicationToken283, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementapplicationToken283,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId284!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId284 = toOM(customerAccountId284, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId284,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId285!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId285 = toOM(customerId285, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementcustomerId285,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken286!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken286 = toOM(developerToken286, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken286,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password287!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword287 = toOM(password287, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementpassword287,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName288!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName288 = toOM(userName288, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementuserName288,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetTargetsByAdGroupIds
                    * @param getTargetsByAdGroupIdsRequest282
                
                    * @param applicationToken283
                
                    * @param customerAccountId284
                
                    * @param customerId285
                
                    * @param developerToken286
                
                    * @param password287
                
                    * @param userName288
                
                */
                public  void startgetTargetsByAdGroupIds(

                 com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest getTargetsByAdGroupIdsRequest282,com.microsoft.adcenter.v8.ApplicationToken applicationToken283,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId284,
                    com.microsoft.adcenter.v8.CustomerId customerId285,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken286,
                    com.microsoft.adcenter.v8.Password password287,
                    com.microsoft.adcenter.v8.UserName userName288,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
             _operationClient.getOptions().setAction("GetTargetsByAdGroupIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByAdGroupIdsRequest282,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByAdGroupIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken283!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken283 = toOM(applicationToken283, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementapplicationToken283,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId284!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId284 = toOM(customerAccountId284, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId284,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId285!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId285 = toOM(customerId285, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementcustomerId285,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken286!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken286 = toOM(developerToken286, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken286,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password287!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword287 = toOM(password287, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementpassword287,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName288!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName288 = toOM(userName288, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByAdGroupIds")));
                                                    addHeader(omElementuserName288,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTargetsByAdGroupIds(
                                        (com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTargetsByAdGroupIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByAdGroupIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetTargetsByAdGroupIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByAdGroupIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetTargetsByAdGroupIds(f);
									    }
									} else {
									    callback.receiveErrorgetTargetsByAdGroupIds(f);
									}
								} else {
								    callback.receiveErrorgetTargetsByAdGroupIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTargetsByAdGroupIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[7].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[7].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setNegativeKeywordsToAdGroups
                     * @param setNegativeKeywordsToAdGroupsRequest290
                    
                     * @param applicationToken291
                    
                     * @param customerAccountId292
                    
                     * @param customerId293
                    
                     * @param developerToken294
                    
                     * @param password295
                    
                     * @param userName296
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse setNegativeKeywordsToAdGroups(

                            com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest setNegativeKeywordsToAdGroupsRequest290,com.microsoft.adcenter.v8.ApplicationToken applicationToken291,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId292,com.microsoft.adcenter.v8.CustomerId customerId293,com.microsoft.adcenter.v8.DeveloperToken developerToken294,com.microsoft.adcenter.v8.Password password295,com.microsoft.adcenter.v8.UserName userName296)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
              _operationClient.getOptions().setAction("SetNegativeKeywordsToAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeKeywordsToAdGroupsRequest290,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken291!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken291 = toOM(applicationToken291, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementapplicationToken291,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId292!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId292 = toOM(customerAccountId292, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementcustomerAccountId292,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId293!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId293 = toOM(customerId293, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementcustomerId293,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken294!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken294 = toOM(developerToken294, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementdeveloperToken294,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password295!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword295 = toOM(password295, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementpassword295,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName296!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName296 = toOM(userName296, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementuserName296,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetNegativeKeywordsToAdGroups
                    * @param setNegativeKeywordsToAdGroupsRequest290
                
                    * @param applicationToken291
                
                    * @param customerAccountId292
                
                    * @param customerId293
                
                    * @param developerToken294
                
                    * @param password295
                
                    * @param userName296
                
                */
                public  void startsetNegativeKeywordsToAdGroups(

                 com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest setNegativeKeywordsToAdGroupsRequest290,com.microsoft.adcenter.v8.ApplicationToken applicationToken291,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId292,
                    com.microsoft.adcenter.v8.CustomerId customerId293,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken294,
                    com.microsoft.adcenter.v8.Password password295,
                    com.microsoft.adcenter.v8.UserName userName296,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
             _operationClient.getOptions().setAction("SetNegativeKeywordsToAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeKeywordsToAdGroupsRequest290,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken291!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken291 = toOM(applicationToken291, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementapplicationToken291,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId292!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId292 = toOM(customerAccountId292, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementcustomerAccountId292,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId293!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId293 = toOM(customerId293, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementcustomerId293,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken294!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken294 = toOM(developerToken294, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementdeveloperToken294,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password295!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword295 = toOM(password295, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementpassword295,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName296!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName296 = toOM(userName296, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToAdGroups")));
                                                    addHeader(omElementuserName296,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetNegativeKeywordsToAdGroups(
                                        (com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetNegativeKeywordsToAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeKeywordsToAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeKeywordsToAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetNegativeKeywordsToAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
									    }
									} else {
									    callback.receiveErrorsetNegativeKeywordsToAdGroups(f);
									}
								} else {
								    callback.receiveErrorsetNegativeKeywordsToAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetNegativeKeywordsToAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[8].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[8].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getNormalizedStrings
                     * @param getNormalizedStringsRequest298
                    
                     * @param applicationToken299
                    
                     * @param customerAccountId300
                    
                     * @param customerId301
                    
                     * @param developerToken302
                    
                     * @param password303
                    
                     * @param userName304
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetNormalizedStringsResponse getNormalizedStrings(

                            com.microsoft.adcenter.v8.GetNormalizedStringsRequest getNormalizedStringsRequest298,com.microsoft.adcenter.v8.ApplicationToken applicationToken299,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId300,com.microsoft.adcenter.v8.CustomerId customerId301,com.microsoft.adcenter.v8.DeveloperToken developerToken302,com.microsoft.adcenter.v8.Password password303,com.microsoft.adcenter.v8.UserName userName304)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
              _operationClient.getOptions().setAction("GetNormalizedStrings");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNormalizedStringsRequest298,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNormalizedStrings")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNormalizedStrings"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken299!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken299 = toOM(applicationToken299, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementapplicationToken299,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId300!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId300 = toOM(customerAccountId300, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementcustomerAccountId300,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId301!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId301 = toOM(customerId301, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementcustomerId301,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken302!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken302 = toOM(developerToken302, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementdeveloperToken302,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password303!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword303 = toOM(password303, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementpassword303,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName304!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName304 = toOM(userName304, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementuserName304,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetNormalizedStringsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetNormalizedStringsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetNormalizedStrings
                    * @param getNormalizedStringsRequest298
                
                    * @param applicationToken299
                
                    * @param customerAccountId300
                
                    * @param customerId301
                
                    * @param developerToken302
                
                    * @param password303
                
                    * @param userName304
                
                */
                public  void startgetNormalizedStrings(

                 com.microsoft.adcenter.v8.GetNormalizedStringsRequest getNormalizedStringsRequest298,com.microsoft.adcenter.v8.ApplicationToken applicationToken299,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId300,
                    com.microsoft.adcenter.v8.CustomerId customerId301,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken302,
                    com.microsoft.adcenter.v8.Password password303,
                    com.microsoft.adcenter.v8.UserName userName304,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
             _operationClient.getOptions().setAction("GetNormalizedStrings");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNormalizedStringsRequest298,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNormalizedStrings")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNormalizedStrings"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken299!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken299 = toOM(applicationToken299, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementapplicationToken299,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId300!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId300 = toOM(customerAccountId300, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementcustomerAccountId300,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId301!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId301 = toOM(customerId301, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementcustomerId301,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken302!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken302 = toOM(developerToken302, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementdeveloperToken302,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password303!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword303 = toOM(password303, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementpassword303,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName304!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName304 = toOM(userName304, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNormalizedStrings")));
                                                    addHeader(omElementuserName304,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetNormalizedStringsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetNormalizedStrings(
                                        (com.microsoft.adcenter.v8.GetNormalizedStringsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetNormalizedStrings(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNormalizedStrings"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNormalizedStrings((com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNormalizedStrings((com.microsoft.adcenter.v8.ICampaignManagementService_GetNormalizedStrings_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetNormalizedStrings(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNormalizedStrings(f);
                                            }
									    } else {
										    callback.receiveErrorgetNormalizedStrings(f);
									    }
									} else {
									    callback.receiveErrorgetNormalizedStrings(f);
									}
								} else {
								    callback.receiveErrorgetNormalizedStrings(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetNormalizedStrings(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[9].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[9].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteSitePlacements
                     * @param deleteSitePlacementsRequest306
                    
                     * @param applicationToken307
                    
                     * @param customerAccountId308
                    
                     * @param customerId309
                    
                     * @param developerToken310
                    
                     * @param password311
                    
                     * @param userName312
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteSitePlacementsResponse deleteSitePlacements(

                            com.microsoft.adcenter.v8.DeleteSitePlacementsRequest deleteSitePlacementsRequest306,com.microsoft.adcenter.v8.ApplicationToken applicationToken307,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId308,com.microsoft.adcenter.v8.CustomerId customerId309,com.microsoft.adcenter.v8.DeveloperToken developerToken310,com.microsoft.adcenter.v8.Password password311,com.microsoft.adcenter.v8.UserName userName312)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
              _operationClient.getOptions().setAction("DeleteSitePlacements");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteSitePlacementsRequest306,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteSitePlacements"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken307!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken307 = toOM(applicationToken307, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementapplicationToken307,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId308!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId308 = toOM(customerAccountId308, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementcustomerAccountId308,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId309!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId309 = toOM(customerId309, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementcustomerId309,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken310!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken310 = toOM(developerToken310, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementdeveloperToken310,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password311!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword311 = toOM(password311, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementpassword311,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName312!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName312 = toOM(userName312, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementuserName312,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteSitePlacementsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteSitePlacementsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteSitePlacements
                    * @param deleteSitePlacementsRequest306
                
                    * @param applicationToken307
                
                    * @param customerAccountId308
                
                    * @param customerId309
                
                    * @param developerToken310
                
                    * @param password311
                
                    * @param userName312
                
                */
                public  void startdeleteSitePlacements(

                 com.microsoft.adcenter.v8.DeleteSitePlacementsRequest deleteSitePlacementsRequest306,com.microsoft.adcenter.v8.ApplicationToken applicationToken307,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId308,
                    com.microsoft.adcenter.v8.CustomerId customerId309,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken310,
                    com.microsoft.adcenter.v8.Password password311,
                    com.microsoft.adcenter.v8.UserName userName312,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
             _operationClient.getOptions().setAction("DeleteSitePlacements");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteSitePlacementsRequest306,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteSitePlacements"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken307!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken307 = toOM(applicationToken307, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementapplicationToken307,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId308!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId308 = toOM(customerAccountId308, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementcustomerAccountId308,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId309!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId309 = toOM(customerId309, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementcustomerId309,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken310!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken310 = toOM(developerToken310, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementdeveloperToken310,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password311!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword311 = toOM(password311, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementpassword311,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName312!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName312 = toOM(userName312, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteSitePlacements")));
                                                    addHeader(omElementuserName312,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteSitePlacementsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteSitePlacements(
                                        (com.microsoft.adcenter.v8.DeleteSitePlacementsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteSitePlacements(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteSitePlacements"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteSitePlacements_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteSitePlacements(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteSitePlacements(f);
                                            }
									    } else {
										    callback.receiveErrordeleteSitePlacements(f);
									    }
									} else {
									    callback.receiveErrordeleteSitePlacements(f);
									}
								} else {
								    callback.receiveErrordeleteSitePlacements(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteSitePlacements(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[10].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[10].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setTargetToAdGroup
                     * @param setTargetToAdGroupRequest314
                    
                     * @param applicationToken315
                    
                     * @param customerAccountId316
                    
                     * @param customerId317
                    
                     * @param developerToken318
                    
                     * @param password319
                    
                     * @param userName320
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetTargetToAdGroupResponse setTargetToAdGroup(

                            com.microsoft.adcenter.v8.SetTargetToAdGroupRequest setTargetToAdGroupRequest314,com.microsoft.adcenter.v8.ApplicationToken applicationToken315,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId316,com.microsoft.adcenter.v8.CustomerId customerId317,com.microsoft.adcenter.v8.DeveloperToken developerToken318,com.microsoft.adcenter.v8.Password password319,com.microsoft.adcenter.v8.UserName userName320)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
              _operationClient.getOptions().setAction("SetTargetToAdGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setTargetToAdGroupRequest314,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToAdGroup")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToAdGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken315!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken315 = toOM(applicationToken315, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementapplicationToken315,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId316!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId316 = toOM(customerAccountId316, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementcustomerAccountId316,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId317!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId317 = toOM(customerId317, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementcustomerId317,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken318!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken318 = toOM(developerToken318, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementdeveloperToken318,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password319!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword319 = toOM(password319, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementpassword319,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName320!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName320 = toOM(userName320, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementuserName320,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetTargetToAdGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetTargetToAdGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetTargetToAdGroup
                    * @param setTargetToAdGroupRequest314
                
                    * @param applicationToken315
                
                    * @param customerAccountId316
                
                    * @param customerId317
                
                    * @param developerToken318
                
                    * @param password319
                
                    * @param userName320
                
                */
                public  void startsetTargetToAdGroup(

                 com.microsoft.adcenter.v8.SetTargetToAdGroupRequest setTargetToAdGroupRequest314,com.microsoft.adcenter.v8.ApplicationToken applicationToken315,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId316,
                    com.microsoft.adcenter.v8.CustomerId customerId317,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken318,
                    com.microsoft.adcenter.v8.Password password319,
                    com.microsoft.adcenter.v8.UserName userName320,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
             _operationClient.getOptions().setAction("SetTargetToAdGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setTargetToAdGroupRequest314,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToAdGroup")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToAdGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken315!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken315 = toOM(applicationToken315, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementapplicationToken315,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId316!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId316 = toOM(customerAccountId316, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementcustomerAccountId316,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId317!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId317 = toOM(customerId317, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementcustomerId317,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken318!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken318 = toOM(developerToken318, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementdeveloperToken318,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password319!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword319 = toOM(password319, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementpassword319,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName320!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName320 = toOM(userName320, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToAdGroup")));
                                                    addHeader(omElementuserName320,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetTargetToAdGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetTargetToAdGroup(
                                        (com.microsoft.adcenter.v8.SetTargetToAdGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetTargetToAdGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToAdGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetTargetToAdGroup((com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetTargetToAdGroup((com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToAdGroup_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetTargetToAdGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToAdGroup(f);
                                            }
									    } else {
										    callback.receiveErrorsetTargetToAdGroup(f);
									    }
									} else {
									    callback.receiveErrorsetTargetToAdGroup(f);
									}
								} else {
								    callback.receiveErrorsetTargetToAdGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetTargetToAdGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[11].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[11].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#submitAdGroupForApproval
                     * @param submitAdGroupForApprovalRequest322
                    
                     * @param applicationToken323
                    
                     * @param customerAccountId324
                    
                     * @param customerId325
                    
                     * @param developerToken326
                    
                     * @param password327
                    
                     * @param userName328
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse submitAdGroupForApproval(

                            com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest submitAdGroupForApprovalRequest322,com.microsoft.adcenter.v8.ApplicationToken applicationToken323,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId324,com.microsoft.adcenter.v8.CustomerId customerId325,com.microsoft.adcenter.v8.DeveloperToken developerToken326,com.microsoft.adcenter.v8.Password password327,com.microsoft.adcenter.v8.UserName userName328)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
              _operationClient.getOptions().setAction("SubmitAdGroupForApproval");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    submitAdGroupForApprovalRequest322,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "submitAdGroupForApproval")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "submitAdGroupForApproval"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken323!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken323 = toOM(applicationToken323, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementapplicationToken323,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId324!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId324 = toOM(customerAccountId324, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementcustomerAccountId324,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId325!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId325 = toOM(customerId325, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementcustomerId325,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken326!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken326 = toOM(developerToken326, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementdeveloperToken326,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password327!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword327 = toOM(password327, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementpassword327,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName328!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName328 = toOM(userName328, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementuserName328,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsubmitAdGroupForApproval
                    * @param submitAdGroupForApprovalRequest322
                
                    * @param applicationToken323
                
                    * @param customerAccountId324
                
                    * @param customerId325
                
                    * @param developerToken326
                
                    * @param password327
                
                    * @param userName328
                
                */
                public  void startsubmitAdGroupForApproval(

                 com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest submitAdGroupForApprovalRequest322,com.microsoft.adcenter.v8.ApplicationToken applicationToken323,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId324,
                    com.microsoft.adcenter.v8.CustomerId customerId325,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken326,
                    com.microsoft.adcenter.v8.Password password327,
                    com.microsoft.adcenter.v8.UserName userName328,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
             _operationClient.getOptions().setAction("SubmitAdGroupForApproval");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    submitAdGroupForApprovalRequest322,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "submitAdGroupForApproval")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "submitAdGroupForApproval"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken323!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken323 = toOM(applicationToken323, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementapplicationToken323,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId324!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId324 = toOM(customerAccountId324, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementcustomerAccountId324,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId325!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId325 = toOM(customerId325, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementcustomerId325,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken326!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken326 = toOM(developerToken326, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementdeveloperToken326,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password327!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword327 = toOM(password327, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementpassword327,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName328!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName328 = toOM(userName328, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "submitAdGroupForApproval")));
                                                    addHeader(omElementuserName328,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsubmitAdGroupForApproval(
                                        (com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsubmitAdGroupForApproval(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SubmitAdGroupForApproval"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsubmitAdGroupForApproval((com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsubmitAdGroupForApproval((com.microsoft.adcenter.v8.ICampaignManagementService_SubmitAdGroupForApproval_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsubmitAdGroupForApproval(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsubmitAdGroupForApproval(f);
                                            }
									    } else {
										    callback.receiveErrorsubmitAdGroupForApproval(f);
									    }
									} else {
									    callback.receiveErrorsubmitAdGroupForApproval(f);
									}
								} else {
								    callback.receiveErrorsubmitAdGroupForApproval(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsubmitAdGroupForApproval(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[12].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[12].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getTargetByAdGroupId
                     * @param getTargetByAdGroupIdRequest330
                    
                     * @param applicationToken331
                    
                     * @param customerAccountId332
                    
                     * @param customerId333
                    
                     * @param developerToken334
                    
                     * @param password335
                    
                     * @param userName336
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse getTargetByAdGroupId(

                            com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest getTargetByAdGroupIdRequest330,com.microsoft.adcenter.v8.ApplicationToken applicationToken331,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId332,com.microsoft.adcenter.v8.CustomerId customerId333,com.microsoft.adcenter.v8.DeveloperToken developerToken334,com.microsoft.adcenter.v8.Password password335,com.microsoft.adcenter.v8.UserName userName336)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
              _operationClient.getOptions().setAction("GetTargetByAdGroupId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetByAdGroupIdRequest330,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetByAdGroupId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken331!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken331 = toOM(applicationToken331, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementapplicationToken331,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId332!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId332 = toOM(customerAccountId332, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId332,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId333!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId333 = toOM(customerId333, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementcustomerId333,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken334!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken334 = toOM(developerToken334, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementdeveloperToken334,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password335!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword335 = toOM(password335, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementpassword335,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName336!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName336 = toOM(userName336, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementuserName336,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetTargetByAdGroupId
                    * @param getTargetByAdGroupIdRequest330
                
                    * @param applicationToken331
                
                    * @param customerAccountId332
                
                    * @param customerId333
                
                    * @param developerToken334
                
                    * @param password335
                
                    * @param userName336
                
                */
                public  void startgetTargetByAdGroupId(

                 com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest getTargetByAdGroupIdRequest330,com.microsoft.adcenter.v8.ApplicationToken applicationToken331,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId332,
                    com.microsoft.adcenter.v8.CustomerId customerId333,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken334,
                    com.microsoft.adcenter.v8.Password password335,
                    com.microsoft.adcenter.v8.UserName userName336,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
             _operationClient.getOptions().setAction("GetTargetByAdGroupId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetByAdGroupIdRequest330,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetByAdGroupId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken331!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken331 = toOM(applicationToken331, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementapplicationToken331,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId332!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId332 = toOM(customerAccountId332, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId332,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId333!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId333 = toOM(customerId333, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementcustomerId333,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken334!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken334 = toOM(developerToken334, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementdeveloperToken334,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password335!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword335 = toOM(password335, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementpassword335,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName336!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName336 = toOM(userName336, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetByAdGroupId")));
                                                    addHeader(omElementuserName336,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTargetByAdGroupId(
                                        (com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTargetByAdGroupId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetByAdGroupId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetByAdGroupId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetTargetByAdGroupId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetByAdGroupId(f);
                                            }
									    } else {
										    callback.receiveErrorgetTargetByAdGroupId(f);
									    }
									} else {
									    callback.receiveErrorgetTargetByAdGroupId(f);
									}
								} else {
								    callback.receiveErrorgetTargetByAdGroupId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTargetByAdGroupId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[13].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[13].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#pauseSitePlacements
                     * @param pauseSitePlacementsRequest338
                    
                     * @param applicationToken339
                    
                     * @param customerAccountId340
                    
                     * @param customerId341
                    
                     * @param developerToken342
                    
                     * @param password343
                    
                     * @param userName344
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.PauseSitePlacementsResponse pauseSitePlacements(

                            com.microsoft.adcenter.v8.PauseSitePlacementsRequest pauseSitePlacementsRequest338,com.microsoft.adcenter.v8.ApplicationToken applicationToken339,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId340,com.microsoft.adcenter.v8.CustomerId customerId341,com.microsoft.adcenter.v8.DeveloperToken developerToken342,com.microsoft.adcenter.v8.Password password343,com.microsoft.adcenter.v8.UserName userName344)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
              _operationClient.getOptions().setAction("PauseSitePlacements");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseSitePlacementsRequest338,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseSitePlacements"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken339!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken339 = toOM(applicationToken339, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementapplicationToken339,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId340!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId340 = toOM(customerAccountId340, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementcustomerAccountId340,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId341!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId341 = toOM(customerId341, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementcustomerId341,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken342!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken342 = toOM(developerToken342, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementdeveloperToken342,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password343!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword343 = toOM(password343, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementpassword343,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName344!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName344 = toOM(userName344, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementuserName344,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.PauseSitePlacementsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.PauseSitePlacementsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startpauseSitePlacements
                    * @param pauseSitePlacementsRequest338
                
                    * @param applicationToken339
                
                    * @param customerAccountId340
                
                    * @param customerId341
                
                    * @param developerToken342
                
                    * @param password343
                
                    * @param userName344
                
                */
                public  void startpauseSitePlacements(

                 com.microsoft.adcenter.v8.PauseSitePlacementsRequest pauseSitePlacementsRequest338,com.microsoft.adcenter.v8.ApplicationToken applicationToken339,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId340,
                    com.microsoft.adcenter.v8.CustomerId customerId341,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken342,
                    com.microsoft.adcenter.v8.Password password343,
                    com.microsoft.adcenter.v8.UserName userName344,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
             _operationClient.getOptions().setAction("PauseSitePlacements");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseSitePlacementsRequest338,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseSitePlacements"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken339!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken339 = toOM(applicationToken339, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementapplicationToken339,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId340!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId340 = toOM(customerAccountId340, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementcustomerAccountId340,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId341!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId341 = toOM(customerId341, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementcustomerId341,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken342!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken342 = toOM(developerToken342, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementdeveloperToken342,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password343!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword343 = toOM(password343, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementpassword343,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName344!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName344 = toOM(userName344, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseSitePlacements")));
                                                    addHeader(omElementuserName344,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.PauseSitePlacementsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpauseSitePlacements(
                                        (com.microsoft.adcenter.v8.PauseSitePlacementsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpauseSitePlacements(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseSitePlacements"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_PauseSitePlacements_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorpauseSitePlacements(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseSitePlacements(f);
                                            }
									    } else {
										    callback.receiveErrorpauseSitePlacements(f);
									    }
									} else {
									    callback.receiveErrorpauseSitePlacements(f);
									}
								} else {
								    callback.receiveErrorpauseSitePlacements(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpauseSitePlacements(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[14].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[14].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdEditorialReasonsByIds
                     * @param getAdEditorialReasonsByIdsRequest346
                    
                     * @param applicationToken347
                    
                     * @param customerAccountId348
                    
                     * @param customerId349
                    
                     * @param developerToken350
                    
                     * @param password351
                    
                     * @param userName352
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse getAdEditorialReasonsByIds(

                            com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest getAdEditorialReasonsByIdsRequest346,com.microsoft.adcenter.v8.ApplicationToken applicationToken347,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId348,com.microsoft.adcenter.v8.CustomerId customerId349,com.microsoft.adcenter.v8.DeveloperToken developerToken350,com.microsoft.adcenter.v8.Password password351,com.microsoft.adcenter.v8.UserName userName352)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
              _operationClient.getOptions().setAction("GetAdEditorialReasonsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdEditorialReasonsByIdsRequest346,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdEditorialReasonsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdEditorialReasonsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken347!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken347 = toOM(applicationToken347, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementapplicationToken347,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId348!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId348 = toOM(customerAccountId348, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerAccountId348,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId349!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId349 = toOM(customerId349, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerId349,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken350!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken350 = toOM(developerToken350, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementdeveloperToken350,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password351!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword351 = toOM(password351, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementpassword351,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName352!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName352 = toOM(userName352, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementuserName352,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdEditorialReasonsByIds
                    * @param getAdEditorialReasonsByIdsRequest346
                
                    * @param applicationToken347
                
                    * @param customerAccountId348
                
                    * @param customerId349
                
                    * @param developerToken350
                
                    * @param password351
                
                    * @param userName352
                
                */
                public  void startgetAdEditorialReasonsByIds(

                 com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest getAdEditorialReasonsByIdsRequest346,com.microsoft.adcenter.v8.ApplicationToken applicationToken347,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId348,
                    com.microsoft.adcenter.v8.CustomerId customerId349,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken350,
                    com.microsoft.adcenter.v8.Password password351,
                    com.microsoft.adcenter.v8.UserName userName352,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
             _operationClient.getOptions().setAction("GetAdEditorialReasonsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdEditorialReasonsByIdsRequest346,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdEditorialReasonsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdEditorialReasonsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken347!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken347 = toOM(applicationToken347, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementapplicationToken347,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId348!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId348 = toOM(customerAccountId348, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerAccountId348,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId349!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId349 = toOM(customerId349, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerId349,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken350!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken350 = toOM(developerToken350, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementdeveloperToken350,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password351!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword351 = toOM(password351, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementpassword351,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName352!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName352 = toOM(userName352, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdEditorialReasonsByIds")));
                                                    addHeader(omElementuserName352,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdEditorialReasonsByIds(
                                        (com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdEditorialReasonsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdEditorialReasonsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdEditorialReasonsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdEditorialReasonsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdEditorialReasonsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdEditorialReasonsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdEditorialReasonsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetAdEditorialReasonsByIds(f);
									}
								} else {
								    callback.receiveErrorgetAdEditorialReasonsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdEditorialReasonsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[15].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[15].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getTargetsByCampaignIds
                     * @param getTargetsByCampaignIdsRequest354
                    
                     * @param applicationToken355
                    
                     * @param customerAccountId356
                    
                     * @param customerId357
                    
                     * @param developerToken358
                    
                     * @param password359
                    
                     * @param userName360
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse getTargetsByCampaignIds(

                            com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest getTargetsByCampaignIdsRequest354,com.microsoft.adcenter.v8.ApplicationToken applicationToken355,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId356,com.microsoft.adcenter.v8.CustomerId customerId357,com.microsoft.adcenter.v8.DeveloperToken developerToken358,com.microsoft.adcenter.v8.Password password359,com.microsoft.adcenter.v8.UserName userName360)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
              _operationClient.getOptions().setAction("GetTargetsByCampaignIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByCampaignIdsRequest354,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByCampaignIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken355!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken355 = toOM(applicationToken355, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementapplicationToken355,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId356!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId356 = toOM(customerAccountId356, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId356,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId357!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId357 = toOM(customerId357, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementcustomerId357,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken358!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken358 = toOM(developerToken358, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken358,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password359!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword359 = toOM(password359, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementpassword359,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName360!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName360 = toOM(userName360, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementuserName360,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetTargetsByCampaignIds
                    * @param getTargetsByCampaignIdsRequest354
                
                    * @param applicationToken355
                
                    * @param customerAccountId356
                
                    * @param customerId357
                
                    * @param developerToken358
                
                    * @param password359
                
                    * @param userName360
                
                */
                public  void startgetTargetsByCampaignIds(

                 com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest getTargetsByCampaignIdsRequest354,com.microsoft.adcenter.v8.ApplicationToken applicationToken355,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId356,
                    com.microsoft.adcenter.v8.CustomerId customerId357,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken358,
                    com.microsoft.adcenter.v8.Password password359,
                    com.microsoft.adcenter.v8.UserName userName360,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
             _operationClient.getOptions().setAction("GetTargetsByCampaignIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByCampaignIdsRequest354,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByCampaignIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken355!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken355 = toOM(applicationToken355, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementapplicationToken355,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId356!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId356 = toOM(customerAccountId356, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId356,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId357!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId357 = toOM(customerId357, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementcustomerId357,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken358!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken358 = toOM(developerToken358, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken358,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password359!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword359 = toOM(password359, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementpassword359,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName360!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName360 = toOM(userName360, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByCampaignIds")));
                                                    addHeader(omElementuserName360,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTargetsByCampaignIds(
                                        (com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTargetsByCampaignIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByCampaignIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetTargetsByCampaignIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByCampaignIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetTargetsByCampaignIds(f);
									    }
									} else {
									    callback.receiveErrorgetTargetsByCampaignIds(f);
									}
								} else {
								    callback.receiveErrorgetTargetsByCampaignIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTargetsByCampaignIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[16].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[16].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addBusinesses
                     * @param addBusinessesRequest362
                    
                     * @param applicationToken363
                    
                     * @param customerAccountId364
                    
                     * @param customerId365
                    
                     * @param developerToken366
                    
                     * @param password367
                    
                     * @param userName368
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddBusinessesResponse addBusinesses(

                            com.microsoft.adcenter.v8.AddBusinessesRequest addBusinessesRequest362,com.microsoft.adcenter.v8.ApplicationToken applicationToken363,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId364,com.microsoft.adcenter.v8.CustomerId customerId365,com.microsoft.adcenter.v8.DeveloperToken developerToken366,com.microsoft.adcenter.v8.Password password367,com.microsoft.adcenter.v8.UserName userName368)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
              _operationClient.getOptions().setAction("AddBusinesses");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addBusinessesRequest362,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addBusinesses"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken363!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken363 = toOM(applicationToken363, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementapplicationToken363,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId364!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId364 = toOM(customerAccountId364, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementcustomerAccountId364,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId365!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId365 = toOM(customerId365, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementcustomerId365,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken366!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken366 = toOM(developerToken366, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementdeveloperToken366,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password367!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword367 = toOM(password367, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementpassword367,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName368!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName368 = toOM(userName368, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementuserName368,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddBusinessesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddBusinessesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddBusinesses
                    * @param addBusinessesRequest362
                
                    * @param applicationToken363
                
                    * @param customerAccountId364
                
                    * @param customerId365
                
                    * @param developerToken366
                
                    * @param password367
                
                    * @param userName368
                
                */
                public  void startaddBusinesses(

                 com.microsoft.adcenter.v8.AddBusinessesRequest addBusinessesRequest362,com.microsoft.adcenter.v8.ApplicationToken applicationToken363,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId364,
                    com.microsoft.adcenter.v8.CustomerId customerId365,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken366,
                    com.microsoft.adcenter.v8.Password password367,
                    com.microsoft.adcenter.v8.UserName userName368,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
             _operationClient.getOptions().setAction("AddBusinesses");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addBusinessesRequest362,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addBusinesses"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken363!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken363 = toOM(applicationToken363, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementapplicationToken363,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId364!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId364 = toOM(customerAccountId364, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementcustomerAccountId364,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId365!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId365 = toOM(customerId365, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementcustomerId365,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken366!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken366 = toOM(developerToken366, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementdeveloperToken366,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password367!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword367 = toOM(password367, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementpassword367,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName368!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName368 = toOM(userName368, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addBusinesses")));
                                                    addHeader(omElementuserName368,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddBusinessesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddBusinesses(
                                        (com.microsoft.adcenter.v8.AddBusinessesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddBusinesses(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddBusinesses"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_AddBusinesses_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddBusinesses(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddBusinesses(f);
                                            }
									    } else {
										    callback.receiveErroraddBusinesses(f);
									    }
									} else {
									    callback.receiveErroraddBusinesses(f);
									}
								} else {
								    callback.receiveErroraddBusinesses(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddBusinesses(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[17].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[17].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#pauseCampaigns
                     * @param pauseCampaignsRequest370
                    
                     * @param applicationToken371
                    
                     * @param customerAccountId372
                    
                     * @param customerId373
                    
                     * @param developerToken374
                    
                     * @param password375
                    
                     * @param userName376
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.PauseCampaignsResponse pauseCampaigns(

                            com.microsoft.adcenter.v8.PauseCampaignsRequest pauseCampaignsRequest370,com.microsoft.adcenter.v8.ApplicationToken applicationToken371,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId372,com.microsoft.adcenter.v8.CustomerId customerId373,com.microsoft.adcenter.v8.DeveloperToken developerToken374,com.microsoft.adcenter.v8.Password password375,com.microsoft.adcenter.v8.UserName userName376)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
              _operationClient.getOptions().setAction("PauseCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseCampaignsRequest370,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken371!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken371 = toOM(applicationToken371, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementapplicationToken371,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId372!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId372 = toOM(customerAccountId372, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementcustomerAccountId372,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId373!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId373 = toOM(customerId373, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementcustomerId373,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken374!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken374 = toOM(developerToken374, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementdeveloperToken374,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password375!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword375 = toOM(password375, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementpassword375,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName376!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName376 = toOM(userName376, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementuserName376,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.PauseCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.PauseCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startpauseCampaigns
                    * @param pauseCampaignsRequest370
                
                    * @param applicationToken371
                
                    * @param customerAccountId372
                
                    * @param customerId373
                
                    * @param developerToken374
                
                    * @param password375
                
                    * @param userName376
                
                */
                public  void startpauseCampaigns(

                 com.microsoft.adcenter.v8.PauseCampaignsRequest pauseCampaignsRequest370,com.microsoft.adcenter.v8.ApplicationToken applicationToken371,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId372,
                    com.microsoft.adcenter.v8.CustomerId customerId373,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken374,
                    com.microsoft.adcenter.v8.Password password375,
                    com.microsoft.adcenter.v8.UserName userName376,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
             _operationClient.getOptions().setAction("PauseCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseCampaignsRequest370,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken371!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken371 = toOM(applicationToken371, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementapplicationToken371,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId372!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId372 = toOM(customerAccountId372, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementcustomerAccountId372,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId373!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId373 = toOM(customerId373, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementcustomerId373,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken374!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken374 = toOM(developerToken374, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementdeveloperToken374,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password375!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword375 = toOM(password375, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementpassword375,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName376!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName376 = toOM(userName376, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseCampaigns")));
                                                    addHeader(omElementuserName376,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.PauseCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpauseCampaigns(
                                        (com.microsoft.adcenter.v8.PauseCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpauseCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_PauseCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorpauseCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorpauseCampaigns(f);
									    }
									} else {
									    callback.receiveErrorpauseCampaigns(f);
									}
								} else {
								    callback.receiveErrorpauseCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpauseCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[18].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[18].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getKeywordsByEditorialStatus
                     * @param getKeywordsByEditorialStatusRequest378
                    
                     * @param applicationToken379
                    
                     * @param customerAccountId380
                    
                     * @param customerId381
                    
                     * @param developerToken382
                    
                     * @param password383
                    
                     * @param userName384
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse getKeywordsByEditorialStatus(

                            com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest getKeywordsByEditorialStatusRequest378,com.microsoft.adcenter.v8.ApplicationToken applicationToken379,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId380,com.microsoft.adcenter.v8.CustomerId customerId381,com.microsoft.adcenter.v8.DeveloperToken developerToken382,com.microsoft.adcenter.v8.Password password383,com.microsoft.adcenter.v8.UserName userName384)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
              _operationClient.getOptions().setAction("GetKeywordsByEditorialStatus");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByEditorialStatusRequest378,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByEditorialStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByEditorialStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken379!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken379 = toOM(applicationToken379, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementapplicationToken379,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId380!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId380 = toOM(customerAccountId380, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementcustomerAccountId380,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId381!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId381 = toOM(customerId381, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementcustomerId381,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken382!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken382 = toOM(developerToken382, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementdeveloperToken382,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password383!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword383 = toOM(password383, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementpassword383,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName384!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName384 = toOM(userName384, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementuserName384,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetKeywordsByEditorialStatus
                    * @param getKeywordsByEditorialStatusRequest378
                
                    * @param applicationToken379
                
                    * @param customerAccountId380
                
                    * @param customerId381
                
                    * @param developerToken382
                
                    * @param password383
                
                    * @param userName384
                
                */
                public  void startgetKeywordsByEditorialStatus(

                 com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest getKeywordsByEditorialStatusRequest378,com.microsoft.adcenter.v8.ApplicationToken applicationToken379,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId380,
                    com.microsoft.adcenter.v8.CustomerId customerId381,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken382,
                    com.microsoft.adcenter.v8.Password password383,
                    com.microsoft.adcenter.v8.UserName userName384,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
             _operationClient.getOptions().setAction("GetKeywordsByEditorialStatus");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByEditorialStatusRequest378,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByEditorialStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByEditorialStatus"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken379!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken379 = toOM(applicationToken379, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementapplicationToken379,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId380!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId380 = toOM(customerAccountId380, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementcustomerAccountId380,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId381!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId381 = toOM(customerId381, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementcustomerId381,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken382!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken382 = toOM(developerToken382, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementdeveloperToken382,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password383!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword383 = toOM(password383, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementpassword383,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName384!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName384 = toOM(userName384, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByEditorialStatus")));
                                                    addHeader(omElementuserName384,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetKeywordsByEditorialStatus(
                                        (com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetKeywordsByEditorialStatus(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByEditorialStatus"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByEditorialStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByEditorialStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByEditorialStatus_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetKeywordsByEditorialStatus(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByEditorialStatus(f);
                                            }
									    } else {
										    callback.receiveErrorgetKeywordsByEditorialStatus(f);
									    }
									} else {
									    callback.receiveErrorgetKeywordsByEditorialStatus(f);
									}
								} else {
								    callback.receiveErrorgetKeywordsByEditorialStatus(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetKeywordsByEditorialStatus(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[19].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[19].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getKeywordEditorialReasonsByIds
                     * @param getKeywordEditorialReasonsByIdsRequest386
                    
                     * @param applicationToken387
                    
                     * @param customerAccountId388
                    
                     * @param customerId389
                    
                     * @param developerToken390
                    
                     * @param password391
                    
                     * @param userName392
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse getKeywordEditorialReasonsByIds(

                            com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest getKeywordEditorialReasonsByIdsRequest386,com.microsoft.adcenter.v8.ApplicationToken applicationToken387,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId388,com.microsoft.adcenter.v8.CustomerId customerId389,com.microsoft.adcenter.v8.DeveloperToken developerToken390,com.microsoft.adcenter.v8.Password password391,com.microsoft.adcenter.v8.UserName userName392)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
              _operationClient.getOptions().setAction("GetKeywordEditorialReasonsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordEditorialReasonsByIdsRequest386,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordEditorialReasonsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordEditorialReasonsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken387!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken387 = toOM(applicationToken387, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementapplicationToken387,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId388!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId388 = toOM(customerAccountId388, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerAccountId388,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId389!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId389 = toOM(customerId389, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerId389,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken390!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken390 = toOM(developerToken390, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementdeveloperToken390,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password391!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword391 = toOM(password391, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementpassword391,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName392!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName392 = toOM(userName392, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementuserName392,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetKeywordEditorialReasonsByIds
                    * @param getKeywordEditorialReasonsByIdsRequest386
                
                    * @param applicationToken387
                
                    * @param customerAccountId388
                
                    * @param customerId389
                
                    * @param developerToken390
                
                    * @param password391
                
                    * @param userName392
                
                */
                public  void startgetKeywordEditorialReasonsByIds(

                 com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest getKeywordEditorialReasonsByIdsRequest386,com.microsoft.adcenter.v8.ApplicationToken applicationToken387,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId388,
                    com.microsoft.adcenter.v8.CustomerId customerId389,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken390,
                    com.microsoft.adcenter.v8.Password password391,
                    com.microsoft.adcenter.v8.UserName userName392,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
             _operationClient.getOptions().setAction("GetKeywordEditorialReasonsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordEditorialReasonsByIdsRequest386,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordEditorialReasonsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordEditorialReasonsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken387!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken387 = toOM(applicationToken387, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementapplicationToken387,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId388!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId388 = toOM(customerAccountId388, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerAccountId388,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId389!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId389 = toOM(customerId389, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementcustomerId389,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken390!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken390 = toOM(developerToken390, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementdeveloperToken390,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password391!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword391 = toOM(password391, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementpassword391,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName392!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName392 = toOM(userName392, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordEditorialReasonsByIds")));
                                                    addHeader(omElementuserName392,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetKeywordEditorialReasonsByIds(
                                        (com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetKeywordEditorialReasonsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordEditorialReasonsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordEditorialReasonsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordEditorialReasonsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordEditorialReasonsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetKeywordEditorialReasonsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetKeywordEditorialReasonsByIds(f);
									}
								} else {
								    callback.receiveErrorgetKeywordEditorialReasonsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetKeywordEditorialReasonsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[20].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[20].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteTargetFromAdGroup
                     * @param deleteTargetFromAdGroupRequest394
                    
                     * @param applicationToken395
                    
                     * @param customerAccountId396
                    
                     * @param customerId397
                    
                     * @param developerToken398
                    
                     * @param password399
                    
                     * @param userName400
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse deleteTargetFromAdGroup(

                            com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest deleteTargetFromAdGroupRequest394,com.microsoft.adcenter.v8.ApplicationToken applicationToken395,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId396,com.microsoft.adcenter.v8.CustomerId customerId397,com.microsoft.adcenter.v8.DeveloperToken developerToken398,com.microsoft.adcenter.v8.Password password399,com.microsoft.adcenter.v8.UserName userName400)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
              _operationClient.getOptions().setAction("DeleteTargetFromAdGroup");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetFromAdGroupRequest394,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromAdGroup")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromAdGroup"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken395!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken395 = toOM(applicationToken395, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementapplicationToken395,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId396!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId396 = toOM(customerAccountId396, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementcustomerAccountId396,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId397!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId397 = toOM(customerId397, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementcustomerId397,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken398!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken398 = toOM(developerToken398, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementdeveloperToken398,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password399!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword399 = toOM(password399, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementpassword399,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName400!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName400 = toOM(userName400, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementuserName400,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteTargetFromAdGroup
                    * @param deleteTargetFromAdGroupRequest394
                
                    * @param applicationToken395
                
                    * @param customerAccountId396
                
                    * @param customerId397
                
                    * @param developerToken398
                
                    * @param password399
                
                    * @param userName400
                
                */
                public  void startdeleteTargetFromAdGroup(

                 com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest deleteTargetFromAdGroupRequest394,com.microsoft.adcenter.v8.ApplicationToken applicationToken395,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId396,
                    com.microsoft.adcenter.v8.CustomerId customerId397,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken398,
                    com.microsoft.adcenter.v8.Password password399,
                    com.microsoft.adcenter.v8.UserName userName400,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
             _operationClient.getOptions().setAction("DeleteTargetFromAdGroup");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetFromAdGroupRequest394,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromAdGroup")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromAdGroup"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken395!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken395 = toOM(applicationToken395, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementapplicationToken395,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId396!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId396 = toOM(customerAccountId396, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementcustomerAccountId396,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId397!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId397 = toOM(customerId397, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementcustomerId397,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken398!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken398 = toOM(developerToken398, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementdeveloperToken398,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password399!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword399 = toOM(password399, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementpassword399,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName400!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName400 = toOM(userName400, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromAdGroup")));
                                                    addHeader(omElementuserName400,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteTargetFromAdGroup(
                                        (com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteTargetFromAdGroup(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromAdGroup"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetFromAdGroup((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetFromAdGroup((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromAdGroup_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteTargetFromAdGroup(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromAdGroup(f);
                                            }
									    } else {
										    callback.receiveErrordeleteTargetFromAdGroup(f);
									    }
									} else {
									    callback.receiveErrordeleteTargetFromAdGroup(f);
									}
								} else {
								    callback.receiveErrordeleteTargetFromAdGroup(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteTargetFromAdGroup(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[21].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[21].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#downloadCampaignHierarchy
                     * @param downloadCampaignHierarchyRequest402
                    
                     * @param applicationToken403
                    
                     * @param customerAccountId404
                    
                     * @param customerId405
                    
                     * @param developerToken406
                    
                     * @param password407
                    
                     * @param userName408
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse downloadCampaignHierarchy(

                            com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest downloadCampaignHierarchyRequest402,com.microsoft.adcenter.v8.ApplicationToken applicationToken403,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId404,com.microsoft.adcenter.v8.CustomerId customerId405,com.microsoft.adcenter.v8.DeveloperToken developerToken406,com.microsoft.adcenter.v8.Password password407,com.microsoft.adcenter.v8.UserName userName408)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
              _operationClient.getOptions().setAction("DownloadCampaignHierarchy");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    downloadCampaignHierarchyRequest402,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "downloadCampaignHierarchy")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "downloadCampaignHierarchy"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken403!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken403 = toOM(applicationToken403, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementapplicationToken403,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId404!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId404 = toOM(customerAccountId404, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementcustomerAccountId404,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId405!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId405 = toOM(customerId405, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementcustomerId405,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken406!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken406 = toOM(developerToken406, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementdeveloperToken406,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password407!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword407 = toOM(password407, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementpassword407,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName408!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName408 = toOM(userName408, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementuserName408,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdownloadCampaignHierarchy
                    * @param downloadCampaignHierarchyRequest402
                
                    * @param applicationToken403
                
                    * @param customerAccountId404
                
                    * @param customerId405
                
                    * @param developerToken406
                
                    * @param password407
                
                    * @param userName408
                
                */
                public  void startdownloadCampaignHierarchy(

                 com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest downloadCampaignHierarchyRequest402,com.microsoft.adcenter.v8.ApplicationToken applicationToken403,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId404,
                    com.microsoft.adcenter.v8.CustomerId customerId405,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken406,
                    com.microsoft.adcenter.v8.Password password407,
                    com.microsoft.adcenter.v8.UserName userName408,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
             _operationClient.getOptions().setAction("DownloadCampaignHierarchy");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    downloadCampaignHierarchyRequest402,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "downloadCampaignHierarchy")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "downloadCampaignHierarchy"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken403!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken403 = toOM(applicationToken403, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementapplicationToken403,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId404!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId404 = toOM(customerAccountId404, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementcustomerAccountId404,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId405!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId405 = toOM(customerId405, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementcustomerId405,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken406!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken406 = toOM(developerToken406, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementdeveloperToken406,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password407!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword407 = toOM(password407, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementpassword407,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName408!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName408 = toOM(userName408, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "downloadCampaignHierarchy")));
                                                    addHeader(omElementuserName408,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdownloadCampaignHierarchy(
                                        (com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordownloadCampaignHierarchy(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DownloadCampaignHierarchy"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordownloadCampaignHierarchy((com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordownloadCampaignHierarchy((com.microsoft.adcenter.v8.ICampaignManagementService_DownloadCampaignHierarchy_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordownloadCampaignHierarchy(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordownloadCampaignHierarchy(f);
                                            }
									    } else {
										    callback.receiveErrordownloadCampaignHierarchy(f);
									    }
									} else {
									    callback.receiveErrordownloadCampaignHierarchy(f);
									}
								} else {
								    callback.receiveErrordownloadCampaignHierarchy(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordownloadCampaignHierarchy(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[22].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[22].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#resumeKeywords
                     * @param resumeKeywordsRequest410
                    
                     * @param applicationToken411
                    
                     * @param customerAccountId412
                    
                     * @param customerId413
                    
                     * @param developerToken414
                    
                     * @param password415
                    
                     * @param userName416
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.ResumeKeywordsResponse resumeKeywords(

                            com.microsoft.adcenter.v8.ResumeKeywordsRequest resumeKeywordsRequest410,com.microsoft.adcenter.v8.ApplicationToken applicationToken411,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId412,com.microsoft.adcenter.v8.CustomerId customerId413,com.microsoft.adcenter.v8.DeveloperToken developerToken414,com.microsoft.adcenter.v8.Password password415,com.microsoft.adcenter.v8.UserName userName416)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
              _operationClient.getOptions().setAction("ResumeKeywords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeKeywordsRequest410,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeKeywords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken411!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken411 = toOM(applicationToken411, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementapplicationToken411,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId412!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId412 = toOM(customerAccountId412, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementcustomerAccountId412,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId413!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId413 = toOM(customerId413, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementcustomerId413,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken414!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken414 = toOM(developerToken414, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementdeveloperToken414,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password415!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword415 = toOM(password415, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementpassword415,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName416!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName416 = toOM(userName416, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementuserName416,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.ResumeKeywordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.ResumeKeywordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startresumeKeywords
                    * @param resumeKeywordsRequest410
                
                    * @param applicationToken411
                
                    * @param customerAccountId412
                
                    * @param customerId413
                
                    * @param developerToken414
                
                    * @param password415
                
                    * @param userName416
                
                */
                public  void startresumeKeywords(

                 com.microsoft.adcenter.v8.ResumeKeywordsRequest resumeKeywordsRequest410,com.microsoft.adcenter.v8.ApplicationToken applicationToken411,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId412,
                    com.microsoft.adcenter.v8.CustomerId customerId413,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken414,
                    com.microsoft.adcenter.v8.Password password415,
                    com.microsoft.adcenter.v8.UserName userName416,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
             _operationClient.getOptions().setAction("ResumeKeywords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeKeywordsRequest410,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeKeywords"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken411!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken411 = toOM(applicationToken411, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementapplicationToken411,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId412!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId412 = toOM(customerAccountId412, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementcustomerAccountId412,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId413!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId413 = toOM(customerId413, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementcustomerId413,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken414!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken414 = toOM(developerToken414, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementdeveloperToken414,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password415!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword415 = toOM(password415, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementpassword415,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName416!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName416 = toOM(userName416, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeKeywords")));
                                                    addHeader(omElementuserName416,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.ResumeKeywordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultresumeKeywords(
                                        (com.microsoft.adcenter.v8.ResumeKeywordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorresumeKeywords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeKeywords"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeKeywords_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorresumeKeywords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeKeywords(f);
                                            }
									    } else {
										    callback.receiveErrorresumeKeywords(f);
									    }
									} else {
									    callback.receiveErrorresumeKeywords(f);
									}
								} else {
								    callback.receiveErrorresumeKeywords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorresumeKeywords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[23].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[23].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteAdExtensionsFromCampaigns
                     * @param deleteAdExtensionsFromCampaignsRequest418
                    
                     * @param applicationToken419
                    
                     * @param customerAccountId420
                    
                     * @param customerId421
                    
                     * @param developerToken422
                    
                     * @param password423
                    
                     * @param userName424
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse deleteAdExtensionsFromCampaigns(

                            com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest deleteAdExtensionsFromCampaignsRequest418,com.microsoft.adcenter.v8.ApplicationToken applicationToken419,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId420,com.microsoft.adcenter.v8.CustomerId customerId421,com.microsoft.adcenter.v8.DeveloperToken developerToken422,com.microsoft.adcenter.v8.Password password423,com.microsoft.adcenter.v8.UserName userName424)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
              _operationClient.getOptions().setAction("DeleteAdExtensionsFromCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdExtensionsFromCampaignsRequest418,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdExtensionsFromCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdExtensionsFromCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken419!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken419 = toOM(applicationToken419, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementapplicationToken419,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId420!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId420 = toOM(customerAccountId420, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementcustomerAccountId420,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId421!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId421 = toOM(customerId421, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementcustomerId421,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken422!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken422 = toOM(developerToken422, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementdeveloperToken422,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password423!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword423 = toOM(password423, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementpassword423,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName424!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName424 = toOM(userName424, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementuserName424,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteAdExtensionsFromCampaigns
                    * @param deleteAdExtensionsFromCampaignsRequest418
                
                    * @param applicationToken419
                
                    * @param customerAccountId420
                
                    * @param customerId421
                
                    * @param developerToken422
                
                    * @param password423
                
                    * @param userName424
                
                */
                public  void startdeleteAdExtensionsFromCampaigns(

                 com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest deleteAdExtensionsFromCampaignsRequest418,com.microsoft.adcenter.v8.ApplicationToken applicationToken419,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId420,
                    com.microsoft.adcenter.v8.CustomerId customerId421,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken422,
                    com.microsoft.adcenter.v8.Password password423,
                    com.microsoft.adcenter.v8.UserName userName424,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
             _operationClient.getOptions().setAction("DeleteAdExtensionsFromCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdExtensionsFromCampaignsRequest418,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdExtensionsFromCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdExtensionsFromCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken419!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken419 = toOM(applicationToken419, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementapplicationToken419,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId420!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId420 = toOM(customerAccountId420, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementcustomerAccountId420,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId421!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId421 = toOM(customerId421, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementcustomerId421,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken422!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken422 = toOM(developerToken422, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementdeveloperToken422,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password423!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword423 = toOM(password423, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementpassword423,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName424!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName424 = toOM(userName424, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdExtensionsFromCampaigns")));
                                                    addHeader(omElementuserName424,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteAdExtensionsFromCampaigns(
                                        (com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteAdExtensionsFromCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdExtensionsFromCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAdExtensionsFromCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAdExtensionsFromCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdExtensionsFromCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteAdExtensionsFromCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
									    }
									} else {
									    callback.receiveErrordeleteAdExtensionsFromCampaigns(f);
									}
								} else {
								    callback.receiveErrordeleteAdExtensionsFromCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteAdExtensionsFromCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[24].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[24].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setNegativeSitesToCampaigns
                     * @param setNegativeSitesToCampaignsRequest426
                    
                     * @param applicationToken427
                    
                     * @param customerAccountId428
                    
                     * @param customerId429
                    
                     * @param developerToken430
                    
                     * @param password431
                    
                     * @param userName432
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse setNegativeSitesToCampaigns(

                            com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest setNegativeSitesToCampaignsRequest426,com.microsoft.adcenter.v8.ApplicationToken applicationToken427,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId428,com.microsoft.adcenter.v8.CustomerId customerId429,com.microsoft.adcenter.v8.DeveloperToken developerToken430,com.microsoft.adcenter.v8.Password password431,com.microsoft.adcenter.v8.UserName userName432)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
              _operationClient.getOptions().setAction("SetNegativeSitesToCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeSitesToCampaignsRequest426,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken427!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken427 = toOM(applicationToken427, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementapplicationToken427,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId428!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId428 = toOM(customerAccountId428, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementcustomerAccountId428,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId429!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId429 = toOM(customerId429, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementcustomerId429,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken430!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken430 = toOM(developerToken430, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementdeveloperToken430,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password431!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword431 = toOM(password431, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementpassword431,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName432!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName432 = toOM(userName432, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementuserName432,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetNegativeSitesToCampaigns
                    * @param setNegativeSitesToCampaignsRequest426
                
                    * @param applicationToken427
                
                    * @param customerAccountId428
                
                    * @param customerId429
                
                    * @param developerToken430
                
                    * @param password431
                
                    * @param userName432
                
                */
                public  void startsetNegativeSitesToCampaigns(

                 com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest setNegativeSitesToCampaignsRequest426,com.microsoft.adcenter.v8.ApplicationToken applicationToken427,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId428,
                    com.microsoft.adcenter.v8.CustomerId customerId429,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken430,
                    com.microsoft.adcenter.v8.Password password431,
                    com.microsoft.adcenter.v8.UserName userName432,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
             _operationClient.getOptions().setAction("SetNegativeSitesToCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeSitesToCampaignsRequest426,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken427!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken427 = toOM(applicationToken427, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementapplicationToken427,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId428!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId428 = toOM(customerAccountId428, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementcustomerAccountId428,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId429!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId429 = toOM(customerId429, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementcustomerId429,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken430!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken430 = toOM(developerToken430, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementdeveloperToken430,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password431!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword431 = toOM(password431, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementpassword431,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName432!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName432 = toOM(userName432, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToCampaigns")));
                                                    addHeader(omElementuserName432,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetNegativeSitesToCampaigns(
                                        (com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetNegativeSitesToCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeSitesToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeSitesToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetNegativeSitesToCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorsetNegativeSitesToCampaigns(f);
									    }
									} else {
									    callback.receiveErrorsetNegativeSitesToCampaigns(f);
									}
								} else {
								    callback.receiveErrorsetNegativeSitesToCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetNegativeSitesToCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[25].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[25].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateDeviceOSTargets
                     * @param updateDeviceOSTargetsRequest434
                    
                     * @param applicationToken435
                    
                     * @param customerAccountId436
                    
                     * @param customerId437
                    
                     * @param developerToken438
                    
                     * @param password439
                    
                     * @param userName440
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse updateDeviceOSTargets(

                            com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest updateDeviceOSTargetsRequest434,com.microsoft.adcenter.v8.ApplicationToken applicationToken435,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId436,com.microsoft.adcenter.v8.CustomerId customerId437,com.microsoft.adcenter.v8.DeveloperToken developerToken438,com.microsoft.adcenter.v8.Password password439,com.microsoft.adcenter.v8.UserName userName440)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
              _operationClient.getOptions().setAction("UpdateDeviceOSTargets");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateDeviceOSTargetsRequest434,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateDeviceOSTargets")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateDeviceOSTargets"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken435!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken435 = toOM(applicationToken435, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementapplicationToken435,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId436!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId436 = toOM(customerAccountId436, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementcustomerAccountId436,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId437!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId437 = toOM(customerId437, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementcustomerId437,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken438!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken438 = toOM(developerToken438, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementdeveloperToken438,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password439!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword439 = toOM(password439, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementpassword439,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName440!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName440 = toOM(userName440, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementuserName440,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateDeviceOSTargets
                    * @param updateDeviceOSTargetsRequest434
                
                    * @param applicationToken435
                
                    * @param customerAccountId436
                
                    * @param customerId437
                
                    * @param developerToken438
                
                    * @param password439
                
                    * @param userName440
                
                */
                public  void startupdateDeviceOSTargets(

                 com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest updateDeviceOSTargetsRequest434,com.microsoft.adcenter.v8.ApplicationToken applicationToken435,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId436,
                    com.microsoft.adcenter.v8.CustomerId customerId437,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken438,
                    com.microsoft.adcenter.v8.Password password439,
                    com.microsoft.adcenter.v8.UserName userName440,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
             _operationClient.getOptions().setAction("UpdateDeviceOSTargets");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateDeviceOSTargetsRequest434,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateDeviceOSTargets")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateDeviceOSTargets"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken435!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken435 = toOM(applicationToken435, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementapplicationToken435,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId436!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId436 = toOM(customerAccountId436, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementcustomerAccountId436,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId437!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId437 = toOM(customerId437, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementcustomerId437,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken438!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken438 = toOM(developerToken438, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementdeveloperToken438,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password439!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword439 = toOM(password439, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementpassword439,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName440!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName440 = toOM(userName440, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateDeviceOSTargets")));
                                                    addHeader(omElementuserName440,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateDeviceOSTargets(
                                        (com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateDeviceOSTargets(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateDeviceOSTargets"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateDeviceOSTargets((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateDeviceOSTargets((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateDeviceOSTargets_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateDeviceOSTargets(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateDeviceOSTargets(f);
                                            }
									    } else {
										    callback.receiveErrorupdateDeviceOSTargets(f);
									    }
									} else {
									    callback.receiveErrorupdateDeviceOSTargets(f);
									}
								} else {
								    callback.receiveErrorupdateDeviceOSTargets(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateDeviceOSTargets(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[26].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[26].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdsByEditorialStatus
                     * @param getAdsByEditorialStatusRequest442
                    
                     * @param applicationToken443
                    
                     * @param customerAccountId444
                    
                     * @param customerId445
                    
                     * @param developerToken446
                    
                     * @param password447
                    
                     * @param userName448
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse getAdsByEditorialStatus(

                            com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest getAdsByEditorialStatusRequest442,com.microsoft.adcenter.v8.ApplicationToken applicationToken443,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId444,com.microsoft.adcenter.v8.CustomerId customerId445,com.microsoft.adcenter.v8.DeveloperToken developerToken446,com.microsoft.adcenter.v8.Password password447,com.microsoft.adcenter.v8.UserName userName448)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
              _operationClient.getOptions().setAction("GetAdsByEditorialStatus");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByEditorialStatusRequest442,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByEditorialStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByEditorialStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken443!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken443 = toOM(applicationToken443, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementapplicationToken443,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId444!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId444 = toOM(customerAccountId444, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementcustomerAccountId444,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId445!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId445 = toOM(customerId445, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementcustomerId445,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken446!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken446 = toOM(developerToken446, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementdeveloperToken446,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password447!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword447 = toOM(password447, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementpassword447,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName448!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName448 = toOM(userName448, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementuserName448,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdsByEditorialStatus
                    * @param getAdsByEditorialStatusRequest442
                
                    * @param applicationToken443
                
                    * @param customerAccountId444
                
                    * @param customerId445
                
                    * @param developerToken446
                
                    * @param password447
                
                    * @param userName448
                
                */
                public  void startgetAdsByEditorialStatus(

                 com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest getAdsByEditorialStatusRequest442,com.microsoft.adcenter.v8.ApplicationToken applicationToken443,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId444,
                    com.microsoft.adcenter.v8.CustomerId customerId445,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken446,
                    com.microsoft.adcenter.v8.Password password447,
                    com.microsoft.adcenter.v8.UserName userName448,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
             _operationClient.getOptions().setAction("GetAdsByEditorialStatus");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByEditorialStatusRequest442,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByEditorialStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByEditorialStatus"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken443!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken443 = toOM(applicationToken443, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementapplicationToken443,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId444!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId444 = toOM(customerAccountId444, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementcustomerAccountId444,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId445!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId445 = toOM(customerId445, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementcustomerId445,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken446!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken446 = toOM(developerToken446, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementdeveloperToken446,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password447!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword447 = toOM(password447, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementpassword447,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName448!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName448 = toOM(userName448, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByEditorialStatus")));
                                                    addHeader(omElementuserName448,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdsByEditorialStatus(
                                        (com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdsByEditorialStatus(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByEditorialStatus"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByEditorialStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByEditorialStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByEditorialStatus_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdsByEditorialStatus(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByEditorialStatus(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdsByEditorialStatus(f);
									    }
									} else {
									    callback.receiveErrorgetAdsByEditorialStatus(f);
									}
								} else {
								    callback.receiveErrorgetAdsByEditorialStatus(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdsByEditorialStatus(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[27].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[27].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteCampaigns
                     * @param deleteCampaignsRequest450
                    
                     * @param applicationToken451
                    
                     * @param customerAccountId452
                    
                     * @param customerId453
                    
                     * @param developerToken454
                    
                     * @param password455
                    
                     * @param userName456
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteCampaignsResponse deleteCampaigns(

                            com.microsoft.adcenter.v8.DeleteCampaignsRequest deleteCampaignsRequest450,com.microsoft.adcenter.v8.ApplicationToken applicationToken451,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId452,com.microsoft.adcenter.v8.CustomerId customerId453,com.microsoft.adcenter.v8.DeveloperToken developerToken454,com.microsoft.adcenter.v8.Password password455,com.microsoft.adcenter.v8.UserName userName456)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
              _operationClient.getOptions().setAction("DeleteCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteCampaignsRequest450,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken451!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken451 = toOM(applicationToken451, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementapplicationToken451,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId452!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId452 = toOM(customerAccountId452, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementcustomerAccountId452,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId453!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId453 = toOM(customerId453, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementcustomerId453,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken454!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken454 = toOM(developerToken454, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementdeveloperToken454,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password455!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword455 = toOM(password455, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementpassword455,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName456!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName456 = toOM(userName456, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementuserName456,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteCampaigns
                    * @param deleteCampaignsRequest450
                
                    * @param applicationToken451
                
                    * @param customerAccountId452
                
                    * @param customerId453
                
                    * @param developerToken454
                
                    * @param password455
                
                    * @param userName456
                
                */
                public  void startdeleteCampaigns(

                 com.microsoft.adcenter.v8.DeleteCampaignsRequest deleteCampaignsRequest450,com.microsoft.adcenter.v8.ApplicationToken applicationToken451,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId452,
                    com.microsoft.adcenter.v8.CustomerId customerId453,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken454,
                    com.microsoft.adcenter.v8.Password password455,
                    com.microsoft.adcenter.v8.UserName userName456,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
             _operationClient.getOptions().setAction("DeleteCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteCampaignsRequest450,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken451!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken451 = toOM(applicationToken451, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementapplicationToken451,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId452!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId452 = toOM(customerAccountId452, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementcustomerAccountId452,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId453!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId453 = toOM(customerId453, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementcustomerId453,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken454!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken454 = toOM(developerToken454, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementdeveloperToken454,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password455!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword455 = toOM(password455, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementpassword455,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName456!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName456 = toOM(userName456, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteCampaigns")));
                                                    addHeader(omElementuserName456,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteCampaigns(
                                        (com.microsoft.adcenter.v8.DeleteCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrordeleteCampaigns(f);
									    }
									} else {
									    callback.receiveErrordeleteCampaigns(f);
									}
								} else {
								    callback.receiveErrordeleteCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[28].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[28].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addGoals
                     * @param addGoalsRequest458
                    
                     * @param applicationToken459
                    
                     * @param customerAccountId460
                    
                     * @param customerId461
                    
                     * @param developerToken462
                    
                     * @param password463
                    
                     * @param userName464
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddGoalsResponse addGoals(

                            com.microsoft.adcenter.v8.AddGoalsRequest addGoalsRequest458,com.microsoft.adcenter.v8.ApplicationToken applicationToken459,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId460,com.microsoft.adcenter.v8.CustomerId customerId461,com.microsoft.adcenter.v8.DeveloperToken developerToken462,com.microsoft.adcenter.v8.Password password463,com.microsoft.adcenter.v8.UserName userName464)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
              _operationClient.getOptions().setAction("AddGoals");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addGoalsRequest458,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addGoals"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken459!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken459 = toOM(applicationToken459, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementapplicationToken459,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId460!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId460 = toOM(customerAccountId460, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementcustomerAccountId460,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId461!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId461 = toOM(customerId461, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementcustomerId461,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken462!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken462 = toOM(developerToken462, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementdeveloperToken462,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password463!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword463 = toOM(password463, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementpassword463,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName464!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName464 = toOM(userName464, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementuserName464,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddGoalsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddGoalsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddGoals
                    * @param addGoalsRequest458
                
                    * @param applicationToken459
                
                    * @param customerAccountId460
                
                    * @param customerId461
                
                    * @param developerToken462
                
                    * @param password463
                
                    * @param userName464
                
                */
                public  void startaddGoals(

                 com.microsoft.adcenter.v8.AddGoalsRequest addGoalsRequest458,com.microsoft.adcenter.v8.ApplicationToken applicationToken459,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId460,
                    com.microsoft.adcenter.v8.CustomerId customerId461,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken462,
                    com.microsoft.adcenter.v8.Password password463,
                    com.microsoft.adcenter.v8.UserName userName464,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
             _operationClient.getOptions().setAction("AddGoals");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addGoalsRequest458,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addGoals"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken459!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken459 = toOM(applicationToken459, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementapplicationToken459,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId460!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId460 = toOM(customerAccountId460, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementcustomerAccountId460,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId461!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId461 = toOM(customerId461, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementcustomerId461,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken462!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken462 = toOM(developerToken462, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementdeveloperToken462,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password463!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword463 = toOM(password463, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementpassword463,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName464!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName464 = toOM(userName464, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addGoals")));
                                                    addHeader(omElementuserName464,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddGoalsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddGoals(
                                        (com.microsoft.adcenter.v8.AddGoalsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddGoals(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddGoals"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddGoals((com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddGoals((com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddGoals((com.microsoft.adcenter.v8.ICampaignManagementService_AddGoals_AnalyticsApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddGoals(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddGoals(f);
                                            }
									    } else {
										    callback.receiveErroraddGoals(f);
									    }
									} else {
									    callback.receiveErroraddGoals(f);
									}
								} else {
								    callback.receiveErroraddGoals(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddGoals(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[29].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[29].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getDownloadStatus
                     * @param getDownloadStatusRequest466
                    
                     * @param applicationToken467
                    
                     * @param customerAccountId468
                    
                     * @param customerId469
                    
                     * @param developerToken470
                    
                     * @param password471
                    
                     * @param userName472
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetDownloadStatusResponse getDownloadStatus(

                            com.microsoft.adcenter.v8.GetDownloadStatusRequest getDownloadStatusRequest466,com.microsoft.adcenter.v8.ApplicationToken applicationToken467,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId468,com.microsoft.adcenter.v8.CustomerId customerId469,com.microsoft.adcenter.v8.DeveloperToken developerToken470,com.microsoft.adcenter.v8.Password password471,com.microsoft.adcenter.v8.UserName userName472)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
              _operationClient.getOptions().setAction("GetDownloadStatus");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDownloadStatusRequest466,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDownloadStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDownloadStatus"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken467!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken467 = toOM(applicationToken467, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementapplicationToken467,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId468!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId468 = toOM(customerAccountId468, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementcustomerAccountId468,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId469!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId469 = toOM(customerId469, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementcustomerId469,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken470!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken470 = toOM(developerToken470, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementdeveloperToken470,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password471!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword471 = toOM(password471, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementpassword471,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName472!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName472 = toOM(userName472, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementuserName472,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetDownloadStatusResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetDownloadStatusResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetDownloadStatus
                    * @param getDownloadStatusRequest466
                
                    * @param applicationToken467
                
                    * @param customerAccountId468
                
                    * @param customerId469
                
                    * @param developerToken470
                
                    * @param password471
                
                    * @param userName472
                
                */
                public  void startgetDownloadStatus(

                 com.microsoft.adcenter.v8.GetDownloadStatusRequest getDownloadStatusRequest466,com.microsoft.adcenter.v8.ApplicationToken applicationToken467,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId468,
                    com.microsoft.adcenter.v8.CustomerId customerId469,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken470,
                    com.microsoft.adcenter.v8.Password password471,
                    com.microsoft.adcenter.v8.UserName userName472,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
             _operationClient.getOptions().setAction("GetDownloadStatus");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDownloadStatusRequest466,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDownloadStatus")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDownloadStatus"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken467!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken467 = toOM(applicationToken467, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementapplicationToken467,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId468!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId468 = toOM(customerAccountId468, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementcustomerAccountId468,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId469!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId469 = toOM(customerId469, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementcustomerId469,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken470!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken470 = toOM(developerToken470, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementdeveloperToken470,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password471!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword471 = toOM(password471, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementpassword471,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName472!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName472 = toOM(userName472, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDownloadStatus")));
                                                    addHeader(omElementuserName472,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetDownloadStatusResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetDownloadStatus(
                                        (com.microsoft.adcenter.v8.GetDownloadStatusResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetDownloadStatus(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDownloadStatus"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetDownloadStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetDownloadStatus((com.microsoft.adcenter.v8.ICampaignManagementService_GetDownloadStatus_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetDownloadStatus(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDownloadStatus(f);
                                            }
									    } else {
										    callback.receiveErrorgetDownloadStatus(f);
									    }
									} else {
									    callback.receiveErrorgetDownloadStatus(f);
									}
								} else {
								    callback.receiveErrorgetDownloadStatus(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetDownloadStatus(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[30].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[30].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setTargetToCampaign
                     * @param setTargetToCampaignRequest474
                    
                     * @param applicationToken475
                    
                     * @param customerAccountId476
                    
                     * @param customerId477
                    
                     * @param developerToken478
                    
                     * @param password479
                    
                     * @param userName480
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetTargetToCampaignResponse setTargetToCampaign(

                            com.microsoft.adcenter.v8.SetTargetToCampaignRequest setTargetToCampaignRequest474,com.microsoft.adcenter.v8.ApplicationToken applicationToken475,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId476,com.microsoft.adcenter.v8.CustomerId customerId477,com.microsoft.adcenter.v8.DeveloperToken developerToken478,com.microsoft.adcenter.v8.Password password479,com.microsoft.adcenter.v8.UserName userName480)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
              _operationClient.getOptions().setAction("SetTargetToCampaign");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setTargetToCampaignRequest474,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToCampaign")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken475!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken475 = toOM(applicationToken475, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementapplicationToken475,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId476!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId476 = toOM(customerAccountId476, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementcustomerAccountId476,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId477!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId477 = toOM(customerId477, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementcustomerId477,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken478!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken478 = toOM(developerToken478, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementdeveloperToken478,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password479!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword479 = toOM(password479, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementpassword479,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName480!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName480 = toOM(userName480, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementuserName480,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetTargetToCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetTargetToCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetTargetToCampaign
                    * @param setTargetToCampaignRequest474
                
                    * @param applicationToken475
                
                    * @param customerAccountId476
                
                    * @param customerId477
                
                    * @param developerToken478
                
                    * @param password479
                
                    * @param userName480
                
                */
                public  void startsetTargetToCampaign(

                 com.microsoft.adcenter.v8.SetTargetToCampaignRequest setTargetToCampaignRequest474,com.microsoft.adcenter.v8.ApplicationToken applicationToken475,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId476,
                    com.microsoft.adcenter.v8.CustomerId customerId477,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken478,
                    com.microsoft.adcenter.v8.Password password479,
                    com.microsoft.adcenter.v8.UserName userName480,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
             _operationClient.getOptions().setAction("SetTargetToCampaign");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setTargetToCampaignRequest474,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToCampaign")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setTargetToCampaign"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken475!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken475 = toOM(applicationToken475, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementapplicationToken475,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId476!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId476 = toOM(customerAccountId476, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementcustomerAccountId476,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId477!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId477 = toOM(customerId477, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementcustomerId477,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken478!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken478 = toOM(developerToken478, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementdeveloperToken478,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password479!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword479 = toOM(password479, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementpassword479,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName480!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName480 = toOM(userName480, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setTargetToCampaign")));
                                                    addHeader(omElementuserName480,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetTargetToCampaignResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetTargetToCampaign(
                                        (com.microsoft.adcenter.v8.SetTargetToCampaignResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetTargetToCampaign(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetTargetToCampaign"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetTargetToCampaign((com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetTargetToCampaign((com.microsoft.adcenter.v8.ICampaignManagementService_SetTargetToCampaign_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetTargetToCampaign(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetTargetToCampaign(f);
                                            }
									    } else {
										    callback.receiveErrorsetTargetToCampaign(f);
									    }
									} else {
									    callback.receiveErrorsetTargetToCampaign(f);
									}
								} else {
								    callback.receiveErrorsetTargetToCampaign(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetTargetToCampaign(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[31].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[31].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#resumeCampaigns
                     * @param resumeCampaignsRequest482
                    
                     * @param applicationToken483
                    
                     * @param customerAccountId484
                    
                     * @param customerId485
                    
                     * @param developerToken486
                    
                     * @param password487
                    
                     * @param userName488
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.ResumeCampaignsResponse resumeCampaigns(

                            com.microsoft.adcenter.v8.ResumeCampaignsRequest resumeCampaignsRequest482,com.microsoft.adcenter.v8.ApplicationToken applicationToken483,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId484,com.microsoft.adcenter.v8.CustomerId customerId485,com.microsoft.adcenter.v8.DeveloperToken developerToken486,com.microsoft.adcenter.v8.Password password487,com.microsoft.adcenter.v8.UserName userName488)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
              _operationClient.getOptions().setAction("ResumeCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeCampaignsRequest482,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken483!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken483 = toOM(applicationToken483, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementapplicationToken483,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId484!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId484 = toOM(customerAccountId484, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementcustomerAccountId484,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId485!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId485 = toOM(customerId485, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementcustomerId485,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken486!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken486 = toOM(developerToken486, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementdeveloperToken486,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password487!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword487 = toOM(password487, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementpassword487,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName488!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName488 = toOM(userName488, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementuserName488,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.ResumeCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.ResumeCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startresumeCampaigns
                    * @param resumeCampaignsRequest482
                
                    * @param applicationToken483
                
                    * @param customerAccountId484
                
                    * @param customerId485
                
                    * @param developerToken486
                
                    * @param password487
                
                    * @param userName488
                
                */
                public  void startresumeCampaigns(

                 com.microsoft.adcenter.v8.ResumeCampaignsRequest resumeCampaignsRequest482,com.microsoft.adcenter.v8.ApplicationToken applicationToken483,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId484,
                    com.microsoft.adcenter.v8.CustomerId customerId485,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken486,
                    com.microsoft.adcenter.v8.Password password487,
                    com.microsoft.adcenter.v8.UserName userName488,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
             _operationClient.getOptions().setAction("ResumeCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeCampaignsRequest482,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken483!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken483 = toOM(applicationToken483, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementapplicationToken483,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId484!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId484 = toOM(customerAccountId484, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementcustomerAccountId484,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId485!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId485 = toOM(customerId485, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementcustomerId485,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken486!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken486 = toOM(developerToken486, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementdeveloperToken486,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password487!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword487 = toOM(password487, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementpassword487,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName488!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName488 = toOM(userName488, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeCampaigns")));
                                                    addHeader(omElementuserName488,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.ResumeCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultresumeCampaigns(
                                        (com.microsoft.adcenter.v8.ResumeCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorresumeCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorresumeCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorresumeCampaigns(f);
									    }
									} else {
									    callback.receiveErrorresumeCampaigns(f);
									}
								} else {
								    callback.receiveErrorresumeCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorresumeCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[32].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[32].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#pauseAdGroups
                     * @param pauseAdGroupsRequest490
                    
                     * @param applicationToken491
                    
                     * @param customerAccountId492
                    
                     * @param customerId493
                    
                     * @param developerToken494
                    
                     * @param password495
                    
                     * @param userName496
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.PauseAdGroupsResponse pauseAdGroups(

                            com.microsoft.adcenter.v8.PauseAdGroupsRequest pauseAdGroupsRequest490,com.microsoft.adcenter.v8.ApplicationToken applicationToken491,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId492,com.microsoft.adcenter.v8.CustomerId customerId493,com.microsoft.adcenter.v8.DeveloperToken developerToken494,com.microsoft.adcenter.v8.Password password495,com.microsoft.adcenter.v8.UserName userName496)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
              _operationClient.getOptions().setAction("PauseAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseAdGroupsRequest490,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken491!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken491 = toOM(applicationToken491, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementapplicationToken491,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId492!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId492 = toOM(customerAccountId492, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementcustomerAccountId492,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId493!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId493 = toOM(customerId493, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementcustomerId493,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken494!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken494 = toOM(developerToken494, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementdeveloperToken494,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password495!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword495 = toOM(password495, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementpassword495,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName496!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName496 = toOM(userName496, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementuserName496,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.PauseAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.PauseAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startpauseAdGroups
                    * @param pauseAdGroupsRequest490
                
                    * @param applicationToken491
                
                    * @param customerAccountId492
                
                    * @param customerId493
                
                    * @param developerToken494
                
                    * @param password495
                
                    * @param userName496
                
                */
                public  void startpauseAdGroups(

                 com.microsoft.adcenter.v8.PauseAdGroupsRequest pauseAdGroupsRequest490,com.microsoft.adcenter.v8.ApplicationToken applicationToken491,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId492,
                    com.microsoft.adcenter.v8.CustomerId customerId493,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken494,
                    com.microsoft.adcenter.v8.Password password495,
                    com.microsoft.adcenter.v8.UserName userName496,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[33].getName());
             _operationClient.getOptions().setAction("PauseAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseAdGroupsRequest490,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken491!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken491 = toOM(applicationToken491, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementapplicationToken491,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId492!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId492 = toOM(customerAccountId492, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementcustomerAccountId492,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId493!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId493 = toOM(customerId493, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementcustomerId493,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken494!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken494 = toOM(developerToken494, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementdeveloperToken494,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password495!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword495 = toOM(password495, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementpassword495,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName496!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName496 = toOM(userName496, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAdGroups")));
                                                    addHeader(omElementuserName496,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.PauseAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpauseAdGroups(
                                        (com.microsoft.adcenter.v8.PauseAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpauseAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_PauseAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorpauseAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrorpauseAdGroups(f);
									    }
									} else {
									    callback.receiveErrorpauseAdGroups(f);
									}
								} else {
								    callback.receiveErrorpauseAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpauseAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[33].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[33].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateTargetsInLibrary
                     * @param updateTargetsInLibraryRequest498
                    
                     * @param applicationToken499
                    
                     * @param customerAccountId500
                    
                     * @param customerId501
                    
                     * @param developerToken502
                    
                     * @param password503
                    
                     * @param userName504
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse updateTargetsInLibrary(

                            com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest updateTargetsInLibraryRequest498,com.microsoft.adcenter.v8.ApplicationToken applicationToken499,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId500,com.microsoft.adcenter.v8.CustomerId customerId501,com.microsoft.adcenter.v8.DeveloperToken developerToken502,com.microsoft.adcenter.v8.Password password503,com.microsoft.adcenter.v8.UserName userName504)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
              _operationClient.getOptions().setAction("UpdateTargetsInLibrary");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateTargetsInLibraryRequest498,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTargetsInLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTargetsInLibrary"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken499!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken499 = toOM(applicationToken499, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementapplicationToken499,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId500!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId500 = toOM(customerAccountId500, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementcustomerAccountId500,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId501!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId501 = toOM(customerId501, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementcustomerId501,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken502!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken502 = toOM(developerToken502, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementdeveloperToken502,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password503!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword503 = toOM(password503, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementpassword503,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName504!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName504 = toOM(userName504, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementuserName504,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateTargetsInLibrary
                    * @param updateTargetsInLibraryRequest498
                
                    * @param applicationToken499
                
                    * @param customerAccountId500
                
                    * @param customerId501
                
                    * @param developerToken502
                
                    * @param password503
                
                    * @param userName504
                
                */
                public  void startupdateTargetsInLibrary(

                 com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest updateTargetsInLibraryRequest498,com.microsoft.adcenter.v8.ApplicationToken applicationToken499,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId500,
                    com.microsoft.adcenter.v8.CustomerId customerId501,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken502,
                    com.microsoft.adcenter.v8.Password password503,
                    com.microsoft.adcenter.v8.UserName userName504,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[34].getName());
             _operationClient.getOptions().setAction("UpdateTargetsInLibrary");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateTargetsInLibraryRequest498,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTargetsInLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateTargetsInLibrary"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken499!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken499 = toOM(applicationToken499, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementapplicationToken499,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId500!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId500 = toOM(customerAccountId500, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementcustomerAccountId500,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId501!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId501 = toOM(customerId501, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementcustomerId501,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken502!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken502 = toOM(developerToken502, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementdeveloperToken502,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password503!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword503 = toOM(password503, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementpassword503,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName504!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName504 = toOM(userName504, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateTargetsInLibrary")));
                                                    addHeader(omElementuserName504,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateTargetsInLibrary(
                                        (com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateTargetsInLibrary(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateTargetsInLibrary"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateTargetsInLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateTargetsInLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateTargetsInLibrary_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateTargetsInLibrary(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateTargetsInLibrary(f);
                                            }
									    } else {
										    callback.receiveErrorupdateTargetsInLibrary(f);
									    }
									} else {
									    callback.receiveErrorupdateTargetsInLibrary(f);
									}
								} else {
								    callback.receiveErrorupdateTargetsInLibrary(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateTargetsInLibrary(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[34].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[34].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteBusinesses
                     * @param deleteBusinessesRequest506
                    
                     * @param applicationToken507
                    
                     * @param customerAccountId508
                    
                     * @param customerId509
                    
                     * @param developerToken510
                    
                     * @param password511
                    
                     * @param userName512
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteBusinessesResponse deleteBusinesses(

                            com.microsoft.adcenter.v8.DeleteBusinessesRequest deleteBusinessesRequest506,com.microsoft.adcenter.v8.ApplicationToken applicationToken507,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId508,com.microsoft.adcenter.v8.CustomerId customerId509,com.microsoft.adcenter.v8.DeveloperToken developerToken510,com.microsoft.adcenter.v8.Password password511,com.microsoft.adcenter.v8.UserName userName512)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
              _operationClient.getOptions().setAction("DeleteBusinesses");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteBusinessesRequest506,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteBusinesses"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken507!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken507 = toOM(applicationToken507, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementapplicationToken507,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId508!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId508 = toOM(customerAccountId508, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementcustomerAccountId508,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId509!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId509 = toOM(customerId509, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementcustomerId509,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken510!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken510 = toOM(developerToken510, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementdeveloperToken510,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password511!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword511 = toOM(password511, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementpassword511,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName512!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName512 = toOM(userName512, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementuserName512,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteBusinessesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteBusinessesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteBusinesses
                    * @param deleteBusinessesRequest506
                
                    * @param applicationToken507
                
                    * @param customerAccountId508
                
                    * @param customerId509
                
                    * @param developerToken510
                
                    * @param password511
                
                    * @param userName512
                
                */
                public  void startdeleteBusinesses(

                 com.microsoft.adcenter.v8.DeleteBusinessesRequest deleteBusinessesRequest506,com.microsoft.adcenter.v8.ApplicationToken applicationToken507,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId508,
                    com.microsoft.adcenter.v8.CustomerId customerId509,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken510,
                    com.microsoft.adcenter.v8.Password password511,
                    com.microsoft.adcenter.v8.UserName userName512,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[35].getName());
             _operationClient.getOptions().setAction("DeleteBusinesses");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteBusinessesRequest506,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteBusinesses"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken507!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken507 = toOM(applicationToken507, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementapplicationToken507,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId508!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId508 = toOM(customerAccountId508, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementcustomerAccountId508,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId509!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId509 = toOM(customerId509, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementcustomerId509,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken510!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken510 = toOM(developerToken510, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementdeveloperToken510,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password511!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword511 = toOM(password511, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementpassword511,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName512!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName512 = toOM(userName512, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteBusinesses")));
                                                    addHeader(omElementuserName512,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteBusinessesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteBusinesses(
                                        (com.microsoft.adcenter.v8.DeleteBusinessesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteBusinesses(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteBusinesses"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteBusinesses_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteBusinesses(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteBusinesses(f);
                                            }
									    } else {
										    callback.receiveErrordeleteBusinesses(f);
									    }
									} else {
									    callback.receiveErrordeleteBusinesses(f);
									}
								} else {
								    callback.receiveErrordeleteBusinesses(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteBusinesses(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[35].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[35].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setAnalyticsType
                     * @param setAnalyticsTypeRequest514
                    
                     * @param applicationToken515
                    
                     * @param customerAccountId516
                    
                     * @param customerId517
                    
                     * @param developerToken518
                    
                     * @param password519
                    
                     * @param userName520
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetAnalyticsTypeResponse setAnalyticsType(

                            com.microsoft.adcenter.v8.SetAnalyticsTypeRequest setAnalyticsTypeRequest514,com.microsoft.adcenter.v8.ApplicationToken applicationToken515,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId516,com.microsoft.adcenter.v8.CustomerId customerId517,com.microsoft.adcenter.v8.DeveloperToken developerToken518,com.microsoft.adcenter.v8.Password password519,com.microsoft.adcenter.v8.UserName userName520)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
              _operationClient.getOptions().setAction("SetAnalyticsType");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setAnalyticsTypeRequest514,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAnalyticsType")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAnalyticsType"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken515!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken515 = toOM(applicationToken515, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementapplicationToken515,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId516!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId516 = toOM(customerAccountId516, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementcustomerAccountId516,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId517!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId517 = toOM(customerId517, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementcustomerId517,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken518!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken518 = toOM(developerToken518, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementdeveloperToken518,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password519!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword519 = toOM(password519, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementpassword519,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName520!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName520 = toOM(userName520, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementuserName520,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetAnalyticsTypeResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetAnalyticsTypeResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetAnalyticsType
                    * @param setAnalyticsTypeRequest514
                
                    * @param applicationToken515
                
                    * @param customerAccountId516
                
                    * @param customerId517
                
                    * @param developerToken518
                
                    * @param password519
                
                    * @param userName520
                
                */
                public  void startsetAnalyticsType(

                 com.microsoft.adcenter.v8.SetAnalyticsTypeRequest setAnalyticsTypeRequest514,com.microsoft.adcenter.v8.ApplicationToken applicationToken515,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId516,
                    com.microsoft.adcenter.v8.CustomerId customerId517,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken518,
                    com.microsoft.adcenter.v8.Password password519,
                    com.microsoft.adcenter.v8.UserName userName520,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[36].getName());
             _operationClient.getOptions().setAction("SetAnalyticsType");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setAnalyticsTypeRequest514,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAnalyticsType")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAnalyticsType"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken515!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken515 = toOM(applicationToken515, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementapplicationToken515,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId516!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId516 = toOM(customerAccountId516, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementcustomerAccountId516,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId517!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId517 = toOM(customerId517, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementcustomerId517,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken518!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken518 = toOM(developerToken518, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementdeveloperToken518,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password519!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword519 = toOM(password519, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementpassword519,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName520!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName520 = toOM(userName520, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAnalyticsType")));
                                                    addHeader(omElementuserName520,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetAnalyticsTypeResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetAnalyticsType(
                                        (com.microsoft.adcenter.v8.SetAnalyticsTypeResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetAnalyticsType(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAnalyticsType"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetAnalyticsType((com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetAnalyticsType((com.microsoft.adcenter.v8.ICampaignManagementService_SetAnalyticsType_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetAnalyticsType(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAnalyticsType(f);
                                            }
									    } else {
										    callback.receiveErrorsetAnalyticsType(f);
									    }
									} else {
									    callback.receiveErrorsetAnalyticsType(f);
									}
								} else {
								    callback.receiveErrorsetAnalyticsType(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetAnalyticsType(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[36].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[36].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getNegativeSitesByAdGroupIds
                     * @param getNegativeSitesByAdGroupIdsRequest522
                    
                     * @param applicationToken523
                    
                     * @param customerAccountId524
                    
                     * @param customerId525
                    
                     * @param developerToken526
                    
                     * @param password527
                    
                     * @param userName528
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse getNegativeSitesByAdGroupIds(

                            com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest getNegativeSitesByAdGroupIdsRequest522,com.microsoft.adcenter.v8.ApplicationToken applicationToken523,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId524,com.microsoft.adcenter.v8.CustomerId customerId525,com.microsoft.adcenter.v8.DeveloperToken developerToken526,com.microsoft.adcenter.v8.Password password527,com.microsoft.adcenter.v8.UserName userName528)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
              _operationClient.getOptions().setAction("GetNegativeSitesByAdGroupIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeSitesByAdGroupIdsRequest522,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByAdGroupIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken523!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken523 = toOM(applicationToken523, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementapplicationToken523,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId524!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId524 = toOM(customerAccountId524, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId524,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId525!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId525 = toOM(customerId525, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementcustomerId525,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken526!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken526 = toOM(developerToken526, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken526,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password527!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword527 = toOM(password527, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementpassword527,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName528!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName528 = toOM(userName528, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementuserName528,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetNegativeSitesByAdGroupIds
                    * @param getNegativeSitesByAdGroupIdsRequest522
                
                    * @param applicationToken523
                
                    * @param customerAccountId524
                
                    * @param customerId525
                
                    * @param developerToken526
                
                    * @param password527
                
                    * @param userName528
                
                */
                public  void startgetNegativeSitesByAdGroupIds(

                 com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest getNegativeSitesByAdGroupIdsRequest522,com.microsoft.adcenter.v8.ApplicationToken applicationToken523,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId524,
                    com.microsoft.adcenter.v8.CustomerId customerId525,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken526,
                    com.microsoft.adcenter.v8.Password password527,
                    com.microsoft.adcenter.v8.UserName userName528,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[37].getName());
             _operationClient.getOptions().setAction("GetNegativeSitesByAdGroupIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeSitesByAdGroupIdsRequest522,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByAdGroupIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken523!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken523 = toOM(applicationToken523, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementapplicationToken523,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId524!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId524 = toOM(customerAccountId524, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId524,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId525!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId525 = toOM(customerId525, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementcustomerId525,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken526!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken526 = toOM(developerToken526, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken526,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password527!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword527 = toOM(password527, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementpassword527,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName528!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName528 = toOM(userName528, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByAdGroupIds")));
                                                    addHeader(omElementuserName528,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetNegativeSitesByAdGroupIds(
                                        (com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetNegativeSitesByAdGroupIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByAdGroupIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeSitesByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeSitesByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetNegativeSitesByAdGroupIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
									    }
									} else {
									    callback.receiveErrorgetNegativeSitesByAdGroupIds(f);
									}
								} else {
								    callback.receiveErrorgetNegativeSitesByAdGroupIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetNegativeSitesByAdGroupIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[37].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[37].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteAdGroups
                     * @param deleteAdGroupsRequest530
                    
                     * @param applicationToken531
                    
                     * @param customerAccountId532
                    
                     * @param customerId533
                    
                     * @param developerToken534
                    
                     * @param password535
                    
                     * @param userName536
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteAdGroupsResponse deleteAdGroups(

                            com.microsoft.adcenter.v8.DeleteAdGroupsRequest deleteAdGroupsRequest530,com.microsoft.adcenter.v8.ApplicationToken applicationToken531,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId532,com.microsoft.adcenter.v8.CustomerId customerId533,com.microsoft.adcenter.v8.DeveloperToken developerToken534,com.microsoft.adcenter.v8.Password password535,com.microsoft.adcenter.v8.UserName userName536)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
              _operationClient.getOptions().setAction("DeleteAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdGroupsRequest530,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken531!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken531 = toOM(applicationToken531, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementapplicationToken531,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId532!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId532 = toOM(customerAccountId532, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementcustomerAccountId532,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId533!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId533 = toOM(customerId533, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementcustomerId533,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken534!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken534 = toOM(developerToken534, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementdeveloperToken534,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password535!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword535 = toOM(password535, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementpassword535,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName536!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName536 = toOM(userName536, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementuserName536,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteAdGroups
                    * @param deleteAdGroupsRequest530
                
                    * @param applicationToken531
                
                    * @param customerAccountId532
                
                    * @param customerId533
                
                    * @param developerToken534
                
                    * @param password535
                
                    * @param userName536
                
                */
                public  void startdeleteAdGroups(

                 com.microsoft.adcenter.v8.DeleteAdGroupsRequest deleteAdGroupsRequest530,com.microsoft.adcenter.v8.ApplicationToken applicationToken531,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId532,
                    com.microsoft.adcenter.v8.CustomerId customerId533,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken534,
                    com.microsoft.adcenter.v8.Password password535,
                    com.microsoft.adcenter.v8.UserName userName536,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[38].getName());
             _operationClient.getOptions().setAction("DeleteAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAdGroupsRequest530,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken531!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken531 = toOM(applicationToken531, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementapplicationToken531,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId532!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId532 = toOM(customerAccountId532, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementcustomerAccountId532,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId533!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId533 = toOM(customerId533, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementcustomerId533,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken534!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken534 = toOM(developerToken534, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementdeveloperToken534,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password535!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword535 = toOM(password535, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementpassword535,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName536!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName536 = toOM(userName536, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteAdGroups")));
                                                    addHeader(omElementuserName536,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteAdGroups(
                                        (com.microsoft.adcenter.v8.DeleteAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrordeleteAdGroups(f);
									    }
									} else {
									    callback.receiveErrordeleteAdGroups(f);
									}
								} else {
								    callback.receiveErrordeleteAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[38].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[38].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateCampaigns
                     * @param updateCampaignsRequest538
                    
                     * @param applicationToken539
                    
                     * @param customerAccountId540
                    
                     * @param customerId541
                    
                     * @param developerToken542
                    
                     * @param password543
                    
                     * @param userName544
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateCampaignsResponse updateCampaigns(

                            com.microsoft.adcenter.v8.UpdateCampaignsRequest updateCampaignsRequest538,com.microsoft.adcenter.v8.ApplicationToken applicationToken539,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId540,com.microsoft.adcenter.v8.CustomerId customerId541,com.microsoft.adcenter.v8.DeveloperToken developerToken542,com.microsoft.adcenter.v8.Password password543,com.microsoft.adcenter.v8.UserName userName544)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
              _operationClient.getOptions().setAction("UpdateCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCampaignsRequest538,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken539!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken539 = toOM(applicationToken539, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementapplicationToken539,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId540!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId540 = toOM(customerAccountId540, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementcustomerAccountId540,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId541!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId541 = toOM(customerId541, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementcustomerId541,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken542!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken542 = toOM(developerToken542, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementdeveloperToken542,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password543!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword543 = toOM(password543, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementpassword543,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName544!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName544 = toOM(userName544, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementuserName544,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateCampaigns
                    * @param updateCampaignsRequest538
                
                    * @param applicationToken539
                
                    * @param customerAccountId540
                
                    * @param customerId541
                
                    * @param developerToken542
                
                    * @param password543
                
                    * @param userName544
                
                */
                public  void startupdateCampaigns(

                 com.microsoft.adcenter.v8.UpdateCampaignsRequest updateCampaignsRequest538,com.microsoft.adcenter.v8.ApplicationToken applicationToken539,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId540,
                    com.microsoft.adcenter.v8.CustomerId customerId541,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken542,
                    com.microsoft.adcenter.v8.Password password543,
                    com.microsoft.adcenter.v8.UserName userName544,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[39].getName());
             _operationClient.getOptions().setAction("UpdateCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCampaignsRequest538,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken539!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken539 = toOM(applicationToken539, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementapplicationToken539,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId540!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId540 = toOM(customerAccountId540, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementcustomerAccountId540,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId541!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId541 = toOM(customerId541, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementcustomerId541,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken542!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken542 = toOM(developerToken542, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementdeveloperToken542,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password543!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword543 = toOM(password543, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementpassword543,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName544!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName544 = toOM(userName544, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateCampaigns")));
                                                    addHeader(omElementuserName544,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCampaigns(
                                        (com.microsoft.adcenter.v8.UpdateCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCampaigns(f);
									    }
									} else {
									    callback.receiveErrorupdateCampaigns(f);
									}
								} else {
								    callback.receiveErrorupdateCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[39].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[39].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getCampaignsByAccountId
                     * @param getCampaignsByAccountIdRequest546
                    
                     * @param applicationToken547
                    
                     * @param customerAccountId548
                    
                     * @param customerId549
                    
                     * @param developerToken550
                    
                     * @param password551
                    
                     * @param userName552
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse getCampaignsByAccountId(

                            com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest getCampaignsByAccountIdRequest546,com.microsoft.adcenter.v8.ApplicationToken applicationToken547,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId548,com.microsoft.adcenter.v8.CustomerId customerId549,com.microsoft.adcenter.v8.DeveloperToken developerToken550,com.microsoft.adcenter.v8.Password password551,com.microsoft.adcenter.v8.UserName userName552)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
              _operationClient.getOptions().setAction("GetCampaignsByAccountId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignsByAccountIdRequest546,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByAccountId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByAccountId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken547!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken547 = toOM(applicationToken547, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementapplicationToken547,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId548!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId548 = toOM(customerAccountId548, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementcustomerAccountId548,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId549!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId549 = toOM(customerId549, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementcustomerId549,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken550!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken550 = toOM(developerToken550, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementdeveloperToken550,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password551!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword551 = toOM(password551, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementpassword551,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName552!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName552 = toOM(userName552, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementuserName552,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetCampaignsByAccountId
                    * @param getCampaignsByAccountIdRequest546
                
                    * @param applicationToken547
                
                    * @param customerAccountId548
                
                    * @param customerId549
                
                    * @param developerToken550
                
                    * @param password551
                
                    * @param userName552
                
                */
                public  void startgetCampaignsByAccountId(

                 com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest getCampaignsByAccountIdRequest546,com.microsoft.adcenter.v8.ApplicationToken applicationToken547,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId548,
                    com.microsoft.adcenter.v8.CustomerId customerId549,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken550,
                    com.microsoft.adcenter.v8.Password password551,
                    com.microsoft.adcenter.v8.UserName userName552,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[40].getName());
             _operationClient.getOptions().setAction("GetCampaignsByAccountId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignsByAccountIdRequest546,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByAccountId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByAccountId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken547!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken547 = toOM(applicationToken547, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementapplicationToken547,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId548!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId548 = toOM(customerAccountId548, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementcustomerAccountId548,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId549!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId549 = toOM(customerId549, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementcustomerId549,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken550!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken550 = toOM(developerToken550, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementdeveloperToken550,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password551!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword551 = toOM(password551, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementpassword551,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName552!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName552 = toOM(userName552, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByAccountId")));
                                                    addHeader(omElementuserName552,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCampaignsByAccountId(
                                        (com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCampaignsByAccountId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByAccountId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignsByAccountId((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignsByAccountId((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByAccountId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCampaignsByAccountId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByAccountId(f);
                                            }
									    } else {
										    callback.receiveErrorgetCampaignsByAccountId(f);
									    }
									} else {
									    callback.receiveErrorgetCampaignsByAccountId(f);
									}
								} else {
								    callback.receiveErrorgetCampaignsByAccountId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCampaignsByAccountId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[40].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[40].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addAds
                     * @param addAdsRequest554
                    
                     * @param applicationToken555
                    
                     * @param customerAccountId556
                    
                     * @param customerId557
                    
                     * @param developerToken558
                    
                     * @param password559
                    
                     * @param userName560
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddAdsResponse addAds(

                            com.microsoft.adcenter.v8.AddAdsRequest addAdsRequest554,com.microsoft.adcenter.v8.ApplicationToken applicationToken555,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId556,com.microsoft.adcenter.v8.CustomerId customerId557,com.microsoft.adcenter.v8.DeveloperToken developerToken558,com.microsoft.adcenter.v8.Password password559,com.microsoft.adcenter.v8.UserName userName560)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
              _operationClient.getOptions().setAction("AddAds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdsRequest554,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken555!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken555 = toOM(applicationToken555, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementapplicationToken555,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId556!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId556 = toOM(customerAccountId556, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementcustomerAccountId556,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId557!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId557 = toOM(customerId557, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementcustomerId557,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken558!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken558 = toOM(developerToken558, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementdeveloperToken558,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password559!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword559 = toOM(password559, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementpassword559,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName560!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName560 = toOM(userName560, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementuserName560,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddAdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddAdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddAds
                    * @param addAdsRequest554
                
                    * @param applicationToken555
                
                    * @param customerAccountId556
                
                    * @param customerId557
                
                    * @param developerToken558
                
                    * @param password559
                
                    * @param userName560
                
                */
                public  void startaddAds(

                 com.microsoft.adcenter.v8.AddAdsRequest addAdsRequest554,com.microsoft.adcenter.v8.ApplicationToken applicationToken555,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId556,
                    com.microsoft.adcenter.v8.CustomerId customerId557,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken558,
                    com.microsoft.adcenter.v8.Password password559,
                    com.microsoft.adcenter.v8.UserName userName560,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[41].getName());
             _operationClient.getOptions().setAction("AddAds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdsRequest554,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken555!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken555 = toOM(applicationToken555, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementapplicationToken555,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId556!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId556 = toOM(customerAccountId556, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementcustomerAccountId556,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId557!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId557 = toOM(customerId557, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementcustomerId557,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken558!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken558 = toOM(developerToken558, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementdeveloperToken558,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password559!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword559 = toOM(password559, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementpassword559,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName560!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName560 = toOM(userName560, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAds")));
                                                    addHeader(omElementuserName560,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddAdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddAds(
                                        (com.microsoft.adcenter.v8.AddAdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddAds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAds((com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAds((com.microsoft.adcenter.v8.ICampaignManagementService_AddAds_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddAds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAds(f);
                                            }
									    } else {
										    callback.receiveErroraddAds(f);
									    }
									} else {
									    callback.receiveErroraddAds(f);
									}
								} else {
								    callback.receiveErroraddAds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddAds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[41].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[41].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setCampaignAdExtensions
                     * @param setCampaignAdExtensionsRequest562
                    
                     * @param applicationToken563
                    
                     * @param customerAccountId564
                    
                     * @param customerId565
                    
                     * @param developerToken566
                    
                     * @param password567
                    
                     * @param userName568
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse setCampaignAdExtensions(

                            com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest setCampaignAdExtensionsRequest562,com.microsoft.adcenter.v8.ApplicationToken applicationToken563,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId564,com.microsoft.adcenter.v8.CustomerId customerId565,com.microsoft.adcenter.v8.DeveloperToken developerToken566,com.microsoft.adcenter.v8.Password password567,com.microsoft.adcenter.v8.UserName userName568)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
              _operationClient.getOptions().setAction("SetCampaignAdExtensions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setCampaignAdExtensionsRequest562,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setCampaignAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setCampaignAdExtensions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken563!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken563 = toOM(applicationToken563, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementapplicationToken563,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId564!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId564 = toOM(customerAccountId564, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementcustomerAccountId564,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId565!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId565 = toOM(customerId565, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementcustomerId565,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken566!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken566 = toOM(developerToken566, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementdeveloperToken566,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password567!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword567 = toOM(password567, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementpassword567,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName568!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName568 = toOM(userName568, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementuserName568,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetCampaignAdExtensions
                    * @param setCampaignAdExtensionsRequest562
                
                    * @param applicationToken563
                
                    * @param customerAccountId564
                
                    * @param customerId565
                
                    * @param developerToken566
                
                    * @param password567
                
                    * @param userName568
                
                */
                public  void startsetCampaignAdExtensions(

                 com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest setCampaignAdExtensionsRequest562,com.microsoft.adcenter.v8.ApplicationToken applicationToken563,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId564,
                    com.microsoft.adcenter.v8.CustomerId customerId565,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken566,
                    com.microsoft.adcenter.v8.Password password567,
                    com.microsoft.adcenter.v8.UserName userName568,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[42].getName());
             _operationClient.getOptions().setAction("SetCampaignAdExtensions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setCampaignAdExtensionsRequest562,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setCampaignAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setCampaignAdExtensions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken563!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken563 = toOM(applicationToken563, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementapplicationToken563,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId564!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId564 = toOM(customerAccountId564, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementcustomerAccountId564,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId565!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId565 = toOM(customerId565, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementcustomerId565,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken566!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken566 = toOM(developerToken566, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementdeveloperToken566,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password567!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword567 = toOM(password567, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementpassword567,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName568!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName568 = toOM(userName568, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setCampaignAdExtensions")));
                                                    addHeader(omElementuserName568,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetCampaignAdExtensions(
                                        (com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetCampaignAdExtensions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetCampaignAdExtensions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetCampaignAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetCampaignAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_SetCampaignAdExtensions_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetCampaignAdExtensions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetCampaignAdExtensions(f);
                                            }
									    } else {
										    callback.receiveErrorsetCampaignAdExtensions(f);
									    }
									} else {
									    callback.receiveErrorsetCampaignAdExtensions(f);
									}
								} else {
								    callback.receiveErrorsetCampaignAdExtensions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetCampaignAdExtensions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[42].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[42].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAccountMigrationStatuses
                     * @param getAccountMigrationStatusesRequest570
                    
                     * @param applicationToken571
                    
                     * @param customerAccountId572
                    
                     * @param customerId573
                    
                     * @param developerToken574
                    
                     * @param password575
                    
                     * @param userName576
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse getAccountMigrationStatuses(

                            com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest getAccountMigrationStatusesRequest570,com.microsoft.adcenter.v8.ApplicationToken applicationToken571,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId572,com.microsoft.adcenter.v8.CustomerId customerId573,com.microsoft.adcenter.v8.DeveloperToken developerToken574,com.microsoft.adcenter.v8.Password password575,com.microsoft.adcenter.v8.UserName userName576)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
              _operationClient.getOptions().setAction("GetAccountMigrationStatuses");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountMigrationStatusesRequest570,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAccountMigrationStatuses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAccountMigrationStatuses"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken571!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken571 = toOM(applicationToken571, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementapplicationToken571,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId572!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId572 = toOM(customerAccountId572, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementcustomerAccountId572,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId573!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId573 = toOM(customerId573, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementcustomerId573,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken574!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken574 = toOM(developerToken574, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementdeveloperToken574,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password575!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword575 = toOM(password575, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementpassword575,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName576!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName576 = toOM(userName576, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementuserName576,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAccountMigrationStatuses
                    * @param getAccountMigrationStatusesRequest570
                
                    * @param applicationToken571
                
                    * @param customerAccountId572
                
                    * @param customerId573
                
                    * @param developerToken574
                
                    * @param password575
                
                    * @param userName576
                
                */
                public  void startgetAccountMigrationStatuses(

                 com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest getAccountMigrationStatusesRequest570,com.microsoft.adcenter.v8.ApplicationToken applicationToken571,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId572,
                    com.microsoft.adcenter.v8.CustomerId customerId573,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken574,
                    com.microsoft.adcenter.v8.Password password575,
                    com.microsoft.adcenter.v8.UserName userName576,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[43].getName());
             _operationClient.getOptions().setAction("GetAccountMigrationStatuses");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountMigrationStatusesRequest570,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAccountMigrationStatuses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAccountMigrationStatuses"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken571!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken571 = toOM(applicationToken571, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementapplicationToken571,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId572!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId572 = toOM(customerAccountId572, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementcustomerAccountId572,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId573!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId573 = toOM(customerId573, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementcustomerId573,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken574!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken574 = toOM(developerToken574, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementdeveloperToken574,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password575!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword575 = toOM(password575, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementpassword575,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName576!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName576 = toOM(userName576, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAccountMigrationStatuses")));
                                                    addHeader(omElementuserName576,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAccountMigrationStatuses(
                                        (com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAccountMigrationStatuses(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountMigrationStatuses"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAccountMigrationStatuses((com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAccountMigrationStatuses((com.microsoft.adcenter.v8.ICampaignManagementService_GetAccountMigrationStatuses_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAccountMigrationStatuses(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountMigrationStatuses(f);
                                            }
									    } else {
										    callback.receiveErrorgetAccountMigrationStatuses(f);
									    }
									} else {
									    callback.receiveErrorgetAccountMigrationStatuses(f);
									}
								} else {
								    callback.receiveErrorgetAccountMigrationStatuses(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAccountMigrationStatuses(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[43].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[43].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getDeviceOSTargetsByIds
                     * @param getDeviceOSTargetsByIdsRequest578
                    
                     * @param applicationToken579
                    
                     * @param customerAccountId580
                    
                     * @param customerId581
                    
                     * @param developerToken582
                    
                     * @param password583
                    
                     * @param userName584
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse getDeviceOSTargetsByIds(

                            com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest getDeviceOSTargetsByIdsRequest578,com.microsoft.adcenter.v8.ApplicationToken applicationToken579,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId580,com.microsoft.adcenter.v8.CustomerId customerId581,com.microsoft.adcenter.v8.DeveloperToken developerToken582,com.microsoft.adcenter.v8.Password password583,com.microsoft.adcenter.v8.UserName userName584)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
              _operationClient.getOptions().setAction("GetDeviceOSTargetsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDeviceOSTargetsByIdsRequest578,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDeviceOSTargetsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDeviceOSTargetsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken579!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken579 = toOM(applicationToken579, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementapplicationToken579,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId580!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId580 = toOM(customerAccountId580, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementcustomerAccountId580,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId581!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId581 = toOM(customerId581, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementcustomerId581,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken582!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken582 = toOM(developerToken582, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementdeveloperToken582,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password583!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword583 = toOM(password583, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementpassword583,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName584!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName584 = toOM(userName584, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementuserName584,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetDeviceOSTargetsByIds
                    * @param getDeviceOSTargetsByIdsRequest578
                
                    * @param applicationToken579
                
                    * @param customerAccountId580
                
                    * @param customerId581
                
                    * @param developerToken582
                
                    * @param password583
                
                    * @param userName584
                
                */
                public  void startgetDeviceOSTargetsByIds(

                 com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest getDeviceOSTargetsByIdsRequest578,com.microsoft.adcenter.v8.ApplicationToken applicationToken579,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId580,
                    com.microsoft.adcenter.v8.CustomerId customerId581,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken582,
                    com.microsoft.adcenter.v8.Password password583,
                    com.microsoft.adcenter.v8.UserName userName584,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[44].getName());
             _operationClient.getOptions().setAction("GetDeviceOSTargetsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getDeviceOSTargetsByIdsRequest578,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDeviceOSTargetsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getDeviceOSTargetsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken579!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken579 = toOM(applicationToken579, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementapplicationToken579,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId580!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId580 = toOM(customerAccountId580, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementcustomerAccountId580,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId581!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId581 = toOM(customerId581, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementcustomerId581,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken582!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken582 = toOM(developerToken582, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementdeveloperToken582,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password583!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword583 = toOM(password583, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementpassword583,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName584!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName584 = toOM(userName584, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getDeviceOSTargetsByIds")));
                                                    addHeader(omElementuserName584,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetDeviceOSTargetsByIds(
                                        (com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetDeviceOSTargetsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetDeviceOSTargetsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetDeviceOSTargetsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetDeviceOSTargetsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetDeviceOSTargetsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetDeviceOSTargetsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetDeviceOSTargetsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetDeviceOSTargetsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetDeviceOSTargetsByIds(f);
									}
								} else {
								    callback.receiveErrorgetDeviceOSTargetsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetDeviceOSTargetsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[44].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[44].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getGoals
                     * @param getGoalsRequest586
                    
                     * @param applicationToken587
                    
                     * @param customerAccountId588
                    
                     * @param customerId589
                    
                     * @param developerToken590
                    
                     * @param password591
                    
                     * @param userName592
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetGoalsResponse getGoals(

                            com.microsoft.adcenter.v8.GetGoalsRequest getGoalsRequest586,com.microsoft.adcenter.v8.ApplicationToken applicationToken587,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId588,com.microsoft.adcenter.v8.CustomerId customerId589,com.microsoft.adcenter.v8.DeveloperToken developerToken590,com.microsoft.adcenter.v8.Password password591,com.microsoft.adcenter.v8.UserName userName592)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
              _operationClient.getOptions().setAction("GetGoals");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getGoalsRequest586,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getGoals"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken587!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken587 = toOM(applicationToken587, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementapplicationToken587,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId588!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId588 = toOM(customerAccountId588, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementcustomerAccountId588,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId589!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId589 = toOM(customerId589, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementcustomerId589,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken590!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken590 = toOM(developerToken590, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementdeveloperToken590,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password591!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword591 = toOM(password591, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementpassword591,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName592!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName592 = toOM(userName592, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementuserName592,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetGoalsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetGoalsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetGoals
                    * @param getGoalsRequest586
                
                    * @param applicationToken587
                
                    * @param customerAccountId588
                
                    * @param customerId589
                
                    * @param developerToken590
                
                    * @param password591
                
                    * @param userName592
                
                */
                public  void startgetGoals(

                 com.microsoft.adcenter.v8.GetGoalsRequest getGoalsRequest586,com.microsoft.adcenter.v8.ApplicationToken applicationToken587,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId588,
                    com.microsoft.adcenter.v8.CustomerId customerId589,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken590,
                    com.microsoft.adcenter.v8.Password password591,
                    com.microsoft.adcenter.v8.UserName userName592,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[45].getName());
             _operationClient.getOptions().setAction("GetGoals");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getGoalsRequest586,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getGoals"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken587!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken587 = toOM(applicationToken587, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementapplicationToken587,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId588!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId588 = toOM(customerAccountId588, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementcustomerAccountId588,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId589!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId589 = toOM(customerId589, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementcustomerId589,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken590!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken590 = toOM(developerToken590, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementdeveloperToken590,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password591!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword591 = toOM(password591, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementpassword591,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName592!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName592 = toOM(userName592, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getGoals")));
                                                    addHeader(omElementuserName592,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetGoalsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetGoals(
                                        (com.microsoft.adcenter.v8.GetGoalsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetGoals(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetGoals"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetGoals((com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetGoals((com.microsoft.adcenter.v8.ICampaignManagementService_GetGoals_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetGoals(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetGoals(f);
                                            }
									    } else {
										    callback.receiveErrorgetGoals(f);
									    }
									} else {
									    callback.receiveErrorgetGoals(f);
									}
								} else {
								    callback.receiveErrorgetGoals(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetGoals(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[45].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[45].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdExtensionsByIds
                     * @param getAdExtensionsByIdsRequest594
                    
                     * @param applicationToken595
                    
                     * @param customerAccountId596
                    
                     * @param customerId597
                    
                     * @param developerToken598
                    
                     * @param password599
                    
                     * @param userName600
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse getAdExtensionsByIds(

                            com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest getAdExtensionsByIdsRequest594,com.microsoft.adcenter.v8.ApplicationToken applicationToken595,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId596,com.microsoft.adcenter.v8.CustomerId customerId597,com.microsoft.adcenter.v8.DeveloperToken developerToken598,com.microsoft.adcenter.v8.Password password599,com.microsoft.adcenter.v8.UserName userName600)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
              _operationClient.getOptions().setAction("GetAdExtensionsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdExtensionsByIdsRequest594,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken595!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken595 = toOM(applicationToken595, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementapplicationToken595,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId596!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId596 = toOM(customerAccountId596, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementcustomerAccountId596,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId597!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId597 = toOM(customerId597, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementcustomerId597,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken598!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken598 = toOM(developerToken598, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementdeveloperToken598,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password599!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword599 = toOM(password599, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementpassword599,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName600!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName600 = toOM(userName600, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementuserName600,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdExtensionsByIds
                    * @param getAdExtensionsByIdsRequest594
                
                    * @param applicationToken595
                
                    * @param customerAccountId596
                
                    * @param customerId597
                
                    * @param developerToken598
                
                    * @param password599
                
                    * @param userName600
                
                */
                public  void startgetAdExtensionsByIds(

                 com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest getAdExtensionsByIdsRequest594,com.microsoft.adcenter.v8.ApplicationToken applicationToken595,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId596,
                    com.microsoft.adcenter.v8.CustomerId customerId597,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken598,
                    com.microsoft.adcenter.v8.Password password599,
                    com.microsoft.adcenter.v8.UserName userName600,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[46].getName());
             _operationClient.getOptions().setAction("GetAdExtensionsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdExtensionsByIdsRequest594,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken595!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken595 = toOM(applicationToken595, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementapplicationToken595,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId596!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId596 = toOM(customerAccountId596, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementcustomerAccountId596,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId597!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId597 = toOM(customerId597, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementcustomerId597,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken598!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken598 = toOM(developerToken598, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementdeveloperToken598,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password599!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword599 = toOM(password599, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementpassword599,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName600!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName600 = toOM(userName600, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByIds")));
                                                    addHeader(omElementuserName600,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdExtensionsByIds(
                                        (com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdExtensionsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdExtensionsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdExtensionsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdExtensionsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdExtensionsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetAdExtensionsByIds(f);
									}
								} else {
								    callback.receiveErrorgetAdExtensionsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdExtensionsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[46].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[46].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getKeywordsByAdGroupId
                     * @param getKeywordsByAdGroupIdRequest602
                    
                     * @param applicationToken603
                    
                     * @param customerAccountId604
                    
                     * @param customerId605
                    
                     * @param developerToken606
                    
                     * @param password607
                    
                     * @param userName608
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse getKeywordsByAdGroupId(

                            com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest getKeywordsByAdGroupIdRequest602,com.microsoft.adcenter.v8.ApplicationToken applicationToken603,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId604,com.microsoft.adcenter.v8.CustomerId customerId605,com.microsoft.adcenter.v8.DeveloperToken developerToken606,com.microsoft.adcenter.v8.Password password607,com.microsoft.adcenter.v8.UserName userName608)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
              _operationClient.getOptions().setAction("GetKeywordsByAdGroupId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByAdGroupIdRequest602,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByAdGroupId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken603!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken603 = toOM(applicationToken603, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementapplicationToken603,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId604!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId604 = toOM(customerAccountId604, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId604,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId605!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId605 = toOM(customerId605, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementcustomerId605,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken606!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken606 = toOM(developerToken606, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken606,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password607!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword607 = toOM(password607, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementpassword607,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName608!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName608 = toOM(userName608, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementuserName608,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetKeywordsByAdGroupId
                    * @param getKeywordsByAdGroupIdRequest602
                
                    * @param applicationToken603
                
                    * @param customerAccountId604
                
                    * @param customerId605
                
                    * @param developerToken606
                
                    * @param password607
                
                    * @param userName608
                
                */
                public  void startgetKeywordsByAdGroupId(

                 com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest getKeywordsByAdGroupIdRequest602,com.microsoft.adcenter.v8.ApplicationToken applicationToken603,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId604,
                    com.microsoft.adcenter.v8.CustomerId customerId605,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken606,
                    com.microsoft.adcenter.v8.Password password607,
                    com.microsoft.adcenter.v8.UserName userName608,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[47].getName());
             _operationClient.getOptions().setAction("GetKeywordsByAdGroupId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByAdGroupIdRequest602,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByAdGroupId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken603!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken603 = toOM(applicationToken603, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementapplicationToken603,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId604!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId604 = toOM(customerAccountId604, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId604,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId605!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId605 = toOM(customerId605, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementcustomerId605,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken606!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken606 = toOM(developerToken606, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken606,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password607!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword607 = toOM(password607, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementpassword607,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName608!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName608 = toOM(userName608, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByAdGroupId")));
                                                    addHeader(omElementuserName608,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetKeywordsByAdGroupId(
                                        (com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetKeywordsByAdGroupId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByAdGroupId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetKeywordsByAdGroupId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByAdGroupId(f);
                                            }
									    } else {
										    callback.receiveErrorgetKeywordsByAdGroupId(f);
									    }
									} else {
									    callback.receiveErrorgetKeywordsByAdGroupId(f);
									}
								} else {
								    callback.receiveErrorgetKeywordsByAdGroupId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetKeywordsByAdGroupId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[47].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[47].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setNegativeSitesToAdGroups
                     * @param setNegativeSitesToAdGroupsRequest610
                    
                     * @param applicationToken611
                    
                     * @param customerAccountId612
                    
                     * @param customerId613
                    
                     * @param developerToken614
                    
                     * @param password615
                    
                     * @param userName616
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse setNegativeSitesToAdGroups(

                            com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest setNegativeSitesToAdGroupsRequest610,com.microsoft.adcenter.v8.ApplicationToken applicationToken611,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId612,com.microsoft.adcenter.v8.CustomerId customerId613,com.microsoft.adcenter.v8.DeveloperToken developerToken614,com.microsoft.adcenter.v8.Password password615,com.microsoft.adcenter.v8.UserName userName616)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
              _operationClient.getOptions().setAction("SetNegativeSitesToAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeSitesToAdGroupsRequest610,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken611!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken611 = toOM(applicationToken611, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementapplicationToken611,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId612!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId612 = toOM(customerAccountId612, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementcustomerAccountId612,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId613!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId613 = toOM(customerId613, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementcustomerId613,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken614!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken614 = toOM(developerToken614, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementdeveloperToken614,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password615!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword615 = toOM(password615, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementpassword615,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName616!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName616 = toOM(userName616, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementuserName616,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetNegativeSitesToAdGroups
                    * @param setNegativeSitesToAdGroupsRequest610
                
                    * @param applicationToken611
                
                    * @param customerAccountId612
                
                    * @param customerId613
                
                    * @param developerToken614
                
                    * @param password615
                
                    * @param userName616
                
                */
                public  void startsetNegativeSitesToAdGroups(

                 com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest setNegativeSitesToAdGroupsRequest610,com.microsoft.adcenter.v8.ApplicationToken applicationToken611,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId612,
                    com.microsoft.adcenter.v8.CustomerId customerId613,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken614,
                    com.microsoft.adcenter.v8.Password password615,
                    com.microsoft.adcenter.v8.UserName userName616,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[48].getName());
             _operationClient.getOptions().setAction("SetNegativeSitesToAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeSitesToAdGroupsRequest610,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeSitesToAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken611!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken611 = toOM(applicationToken611, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementapplicationToken611,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId612!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId612 = toOM(customerAccountId612, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementcustomerAccountId612,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId613!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId613 = toOM(customerId613, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementcustomerId613,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken614!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken614 = toOM(developerToken614, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementdeveloperToken614,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password615!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword615 = toOM(password615, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementpassword615,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName616!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName616 = toOM(userName616, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeSitesToAdGroups")));
                                                    addHeader(omElementuserName616,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetNegativeSitesToAdGroups(
                                        (com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetNegativeSitesToAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeSitesToAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeSitesToAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeSitesToAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeSitesToAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetNegativeSitesToAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeSitesToAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrorsetNegativeSitesToAdGroups(f);
									    }
									} else {
									    callback.receiveErrorsetNegativeSitesToAdGroups(f);
									}
								} else {
								    callback.receiveErrorsetNegativeSitesToAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetNegativeSitesToAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[48].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[48].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getNegativeSitesByCampaignIds
                     * @param getNegativeSitesByCampaignIdsRequest618
                    
                     * @param applicationToken619
                    
                     * @param customerAccountId620
                    
                     * @param customerId621
                    
                     * @param developerToken622
                    
                     * @param password623
                    
                     * @param userName624
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse getNegativeSitesByCampaignIds(

                            com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest getNegativeSitesByCampaignIdsRequest618,com.microsoft.adcenter.v8.ApplicationToken applicationToken619,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId620,com.microsoft.adcenter.v8.CustomerId customerId621,com.microsoft.adcenter.v8.DeveloperToken developerToken622,com.microsoft.adcenter.v8.Password password623,com.microsoft.adcenter.v8.UserName userName624)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
              _operationClient.getOptions().setAction("GetNegativeSitesByCampaignIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeSitesByCampaignIdsRequest618,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByCampaignIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken619!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken619 = toOM(applicationToken619, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementapplicationToken619,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId620!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId620 = toOM(customerAccountId620, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId620,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId621!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId621 = toOM(customerId621, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementcustomerId621,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken622!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken622 = toOM(developerToken622, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementdeveloperToken622,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password623!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword623 = toOM(password623, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementpassword623,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName624!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName624 = toOM(userName624, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementuserName624,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetNegativeSitesByCampaignIds
                    * @param getNegativeSitesByCampaignIdsRequest618
                
                    * @param applicationToken619
                
                    * @param customerAccountId620
                
                    * @param customerId621
                
                    * @param developerToken622
                
                    * @param password623
                
                    * @param userName624
                
                */
                public  void startgetNegativeSitesByCampaignIds(

                 com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest getNegativeSitesByCampaignIdsRequest618,com.microsoft.adcenter.v8.ApplicationToken applicationToken619,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId620,
                    com.microsoft.adcenter.v8.CustomerId customerId621,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken622,
                    com.microsoft.adcenter.v8.Password password623,
                    com.microsoft.adcenter.v8.UserName userName624,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[49].getName());
             _operationClient.getOptions().setAction("GetNegativeSitesByCampaignIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeSitesByCampaignIdsRequest618,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeSitesByCampaignIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken619!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken619 = toOM(applicationToken619, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementapplicationToken619,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId620!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId620 = toOM(customerAccountId620, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId620,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId621!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId621 = toOM(customerId621, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementcustomerId621,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken622!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken622 = toOM(developerToken622, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementdeveloperToken622,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password623!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword623 = toOM(password623, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementpassword623,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName624!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName624 = toOM(userName624, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeSitesByCampaignIds")));
                                                    addHeader(omElementuserName624,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetNegativeSitesByCampaignIds(
                                        (com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetNegativeSitesByCampaignIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeSitesByCampaignIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeSitesByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeSitesByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeSitesByCampaignIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetNegativeSitesByCampaignIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeSitesByCampaignIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetNegativeSitesByCampaignIds(f);
									    }
									} else {
									    callback.receiveErrorgetNegativeSitesByCampaignIds(f);
									}
								} else {
								    callback.receiveErrorgetNegativeSitesByCampaignIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetNegativeSitesByCampaignIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[49].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[49].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addTarget
                     * @param addTargetRequest626
                    
                     * @param applicationToken627
                    
                     * @param customerAccountId628
                    
                     * @param customerId629
                    
                     * @param developerToken630
                    
                     * @param password631
                    
                     * @param userName632
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddTargetResponse addTarget(

                            com.microsoft.adcenter.v8.AddTargetRequest addTargetRequest626,com.microsoft.adcenter.v8.ApplicationToken applicationToken627,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId628,com.microsoft.adcenter.v8.CustomerId customerId629,com.microsoft.adcenter.v8.DeveloperToken developerToken630,com.microsoft.adcenter.v8.Password password631,com.microsoft.adcenter.v8.UserName userName632)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
              _operationClient.getOptions().setAction("AddTarget");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTargetRequest626,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTarget"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken627!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken627 = toOM(applicationToken627, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementapplicationToken627,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId628!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId628 = toOM(customerAccountId628, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementcustomerAccountId628,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId629!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId629 = toOM(customerId629, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementcustomerId629,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken630!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken630 = toOM(developerToken630, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementdeveloperToken630,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password631!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword631 = toOM(password631, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementpassword631,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName632!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName632 = toOM(userName632, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementuserName632,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddTargetResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddTargetResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddTarget
                    * @param addTargetRequest626
                
                    * @param applicationToken627
                
                    * @param customerAccountId628
                
                    * @param customerId629
                
                    * @param developerToken630
                
                    * @param password631
                
                    * @param userName632
                
                */
                public  void startaddTarget(

                 com.microsoft.adcenter.v8.AddTargetRequest addTargetRequest626,com.microsoft.adcenter.v8.ApplicationToken applicationToken627,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId628,
                    com.microsoft.adcenter.v8.CustomerId customerId629,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken630,
                    com.microsoft.adcenter.v8.Password password631,
                    com.microsoft.adcenter.v8.UserName userName632,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[50].getName());
             _operationClient.getOptions().setAction("AddTarget");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTargetRequest626,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTarget")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTarget"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken627!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken627 = toOM(applicationToken627, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementapplicationToken627,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId628!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId628 = toOM(customerAccountId628, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementcustomerAccountId628,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId629!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId629 = toOM(customerId629, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementcustomerId629,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken630!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken630 = toOM(developerToken630, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementdeveloperToken630,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password631!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword631 = toOM(password631, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementpassword631,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName632!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName632 = toOM(userName632, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTarget")));
                                                    addHeader(omElementuserName632,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddTargetResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddTarget(
                                        (com.microsoft.adcenter.v8.AddTargetResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddTarget(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTarget"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddTarget((com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddTarget((com.microsoft.adcenter.v8.ICampaignManagementService_AddTarget_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddTarget(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTarget(f);
                                            }
									    } else {
										    callback.receiveErroraddTarget(f);
									    }
									} else {
									    callback.receiveErroraddTarget(f);
									}
								} else {
								    callback.receiveErroraddTarget(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddTarget(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[50].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[50].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdGroupsByIds
                     * @param getAdGroupsByIdsRequest634
                    
                     * @param applicationToken635
                    
                     * @param customerAccountId636
                    
                     * @param customerId637
                    
                     * @param developerToken638
                    
                     * @param password639
                    
                     * @param userName640
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse getAdGroupsByIds(

                            com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest getAdGroupsByIdsRequest634,com.microsoft.adcenter.v8.ApplicationToken applicationToken635,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId636,com.microsoft.adcenter.v8.CustomerId customerId637,com.microsoft.adcenter.v8.DeveloperToken developerToken638,com.microsoft.adcenter.v8.Password password639,com.microsoft.adcenter.v8.UserName userName640)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
              _operationClient.getOptions().setAction("GetAdGroupsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdGroupsByIdsRequest634,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken635!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken635 = toOM(applicationToken635, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementapplicationToken635,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId636!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId636 = toOM(customerAccountId636, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementcustomerAccountId636,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId637!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId637 = toOM(customerId637, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementcustomerId637,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken638!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken638 = toOM(developerToken638, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementdeveloperToken638,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password639!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword639 = toOM(password639, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementpassword639,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName640!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName640 = toOM(userName640, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementuserName640,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdGroupsByIds
                    * @param getAdGroupsByIdsRequest634
                
                    * @param applicationToken635
                
                    * @param customerAccountId636
                
                    * @param customerId637
                
                    * @param developerToken638
                
                    * @param password639
                
                    * @param userName640
                
                */
                public  void startgetAdGroupsByIds(

                 com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest getAdGroupsByIdsRequest634,com.microsoft.adcenter.v8.ApplicationToken applicationToken635,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId636,
                    com.microsoft.adcenter.v8.CustomerId customerId637,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken638,
                    com.microsoft.adcenter.v8.Password password639,
                    com.microsoft.adcenter.v8.UserName userName640,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[51].getName());
             _operationClient.getOptions().setAction("GetAdGroupsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdGroupsByIdsRequest634,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken635!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken635 = toOM(applicationToken635, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementapplicationToken635,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId636!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId636 = toOM(customerAccountId636, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementcustomerAccountId636,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId637!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId637 = toOM(customerId637, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementcustomerId637,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken638!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken638 = toOM(developerToken638, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementdeveloperToken638,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password639!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword639 = toOM(password639, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementpassword639,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName640!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName640 = toOM(userName640, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByIds")));
                                                    addHeader(omElementuserName640,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdGroupsByIds(
                                        (com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdGroupsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdGroupsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdGroupsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdGroupsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdGroupsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetAdGroupsByIds(f);
									}
								} else {
								    callback.receiveErrorgetAdGroupsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdGroupsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[51].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[51].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addTargetsToLibrary
                     * @param addTargetsToLibraryRequest642
                    
                     * @param applicationToken643
                    
                     * @param customerAccountId644
                    
                     * @param customerId645
                    
                     * @param developerToken646
                    
                     * @param password647
                    
                     * @param userName648
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddTargetsToLibraryResponse addTargetsToLibrary(

                            com.microsoft.adcenter.v8.AddTargetsToLibraryRequest addTargetsToLibraryRequest642,com.microsoft.adcenter.v8.ApplicationToken applicationToken643,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId644,com.microsoft.adcenter.v8.CustomerId customerId645,com.microsoft.adcenter.v8.DeveloperToken developerToken646,com.microsoft.adcenter.v8.Password password647,com.microsoft.adcenter.v8.UserName userName648)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
              _operationClient.getOptions().setAction("AddTargetsToLibrary");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTargetsToLibraryRequest642,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTargetsToLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTargetsToLibrary"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken643!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken643 = toOM(applicationToken643, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementapplicationToken643,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId644!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId644 = toOM(customerAccountId644, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementcustomerAccountId644,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId645!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId645 = toOM(customerId645, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementcustomerId645,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken646!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken646 = toOM(developerToken646, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementdeveloperToken646,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password647!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword647 = toOM(password647, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementpassword647,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName648!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName648 = toOM(userName648, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementuserName648,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddTargetsToLibraryResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddTargetsToLibraryResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddTargetsToLibrary
                    * @param addTargetsToLibraryRequest642
                
                    * @param applicationToken643
                
                    * @param customerAccountId644
                
                    * @param customerId645
                
                    * @param developerToken646
                
                    * @param password647
                
                    * @param userName648
                
                */
                public  void startaddTargetsToLibrary(

                 com.microsoft.adcenter.v8.AddTargetsToLibraryRequest addTargetsToLibraryRequest642,com.microsoft.adcenter.v8.ApplicationToken applicationToken643,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId644,
                    com.microsoft.adcenter.v8.CustomerId customerId645,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken646,
                    com.microsoft.adcenter.v8.Password password647,
                    com.microsoft.adcenter.v8.UserName userName648,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[52].getName());
             _operationClient.getOptions().setAction("AddTargetsToLibrary");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addTargetsToLibraryRequest642,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTargetsToLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addTargetsToLibrary"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken643!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken643 = toOM(applicationToken643, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementapplicationToken643,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId644!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId644 = toOM(customerAccountId644, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementcustomerAccountId644,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId645!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId645 = toOM(customerId645, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementcustomerId645,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken646!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken646 = toOM(developerToken646, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementdeveloperToken646,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password647!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword647 = toOM(password647, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementpassword647,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName648!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName648 = toOM(userName648, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addTargetsToLibrary")));
                                                    addHeader(omElementuserName648,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddTargetsToLibraryResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddTargetsToLibrary(
                                        (com.microsoft.adcenter.v8.AddTargetsToLibraryResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddTargetsToLibrary(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddTargetsToLibrary"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddTargetsToLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddTargetsToLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_AddTargetsToLibrary_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddTargetsToLibrary(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddTargetsToLibrary(f);
                                            }
									    } else {
										    callback.receiveErroraddTargetsToLibrary(f);
									    }
									} else {
									    callback.receiveErroraddTargetsToLibrary(f);
									}
								} else {
								    callback.receiveErroraddTargetsToLibrary(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddTargetsToLibrary(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[52].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[52].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAnalyticsType
                     * @param getAnalyticsTypeRequest650
                    
                     * @param applicationToken651
                    
                     * @param customerAccountId652
                    
                     * @param customerId653
                    
                     * @param developerToken654
                    
                     * @param password655
                    
                     * @param userName656
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAnalyticsTypeResponse getAnalyticsType(

                            com.microsoft.adcenter.v8.GetAnalyticsTypeRequest getAnalyticsTypeRequest650,com.microsoft.adcenter.v8.ApplicationToken applicationToken651,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId652,com.microsoft.adcenter.v8.CustomerId customerId653,com.microsoft.adcenter.v8.DeveloperToken developerToken654,com.microsoft.adcenter.v8.Password password655,com.microsoft.adcenter.v8.UserName userName656)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
              _operationClient.getOptions().setAction("GetAnalyticsType");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAnalyticsTypeRequest650,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAnalyticsType")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAnalyticsType"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken651!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken651 = toOM(applicationToken651, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementapplicationToken651,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId652!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId652 = toOM(customerAccountId652, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementcustomerAccountId652,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId653!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId653 = toOM(customerId653, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementcustomerId653,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken654!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken654 = toOM(developerToken654, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementdeveloperToken654,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password655!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword655 = toOM(password655, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementpassword655,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName656!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName656 = toOM(userName656, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementuserName656,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAnalyticsTypeResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAnalyticsTypeResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAnalyticsType
                    * @param getAnalyticsTypeRequest650
                
                    * @param applicationToken651
                
                    * @param customerAccountId652
                
                    * @param customerId653
                
                    * @param developerToken654
                
                    * @param password655
                
                    * @param userName656
                
                */
                public  void startgetAnalyticsType(

                 com.microsoft.adcenter.v8.GetAnalyticsTypeRequest getAnalyticsTypeRequest650,com.microsoft.adcenter.v8.ApplicationToken applicationToken651,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId652,
                    com.microsoft.adcenter.v8.CustomerId customerId653,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken654,
                    com.microsoft.adcenter.v8.Password password655,
                    com.microsoft.adcenter.v8.UserName userName656,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[53].getName());
             _operationClient.getOptions().setAction("GetAnalyticsType");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAnalyticsTypeRequest650,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAnalyticsType")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAnalyticsType"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken651!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken651 = toOM(applicationToken651, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementapplicationToken651,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId652!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId652 = toOM(customerAccountId652, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementcustomerAccountId652,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId653!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId653 = toOM(customerId653, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementcustomerId653,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken654!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken654 = toOM(developerToken654, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementdeveloperToken654,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password655!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword655 = toOM(password655, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementpassword655,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName656!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName656 = toOM(userName656, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAnalyticsType")));
                                                    addHeader(omElementuserName656,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAnalyticsTypeResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAnalyticsType(
                                        (com.microsoft.adcenter.v8.GetAnalyticsTypeResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAnalyticsType(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAnalyticsType"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAnalyticsType((com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAnalyticsType((com.microsoft.adcenter.v8.ICampaignManagementService_GetAnalyticsType_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAnalyticsType(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAnalyticsType(f);
                                            }
									    } else {
										    callback.receiveErrorgetAnalyticsType(f);
									    }
									} else {
									    callback.receiveErrorgetAnalyticsType(f);
									}
								} else {
								    callback.receiveErrorgetAnalyticsType(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAnalyticsType(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[53].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[53].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdExtensionsByCampaignIds
                     * @param getAdExtensionsByCampaignIdsRequest658
                    
                     * @param applicationToken659
                    
                     * @param customerAccountId660
                    
                     * @param customerId661
                    
                     * @param developerToken662
                    
                     * @param password663
                    
                     * @param userName664
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse getAdExtensionsByCampaignIds(

                            com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest getAdExtensionsByCampaignIdsRequest658,com.microsoft.adcenter.v8.ApplicationToken applicationToken659,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId660,com.microsoft.adcenter.v8.CustomerId customerId661,com.microsoft.adcenter.v8.DeveloperToken developerToken662,com.microsoft.adcenter.v8.Password password663,com.microsoft.adcenter.v8.UserName userName664)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
              _operationClient.getOptions().setAction("GetAdExtensionsByCampaignIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdExtensionsByCampaignIdsRequest658,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByCampaignIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken659!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken659 = toOM(applicationToken659, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementapplicationToken659,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId660!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId660 = toOM(customerAccountId660, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId660,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId661!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId661 = toOM(customerId661, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementcustomerId661,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken662!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken662 = toOM(developerToken662, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken662,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password663!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword663 = toOM(password663, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementpassword663,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName664!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName664 = toOM(userName664, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementuserName664,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdExtensionsByCampaignIds
                    * @param getAdExtensionsByCampaignIdsRequest658
                
                    * @param applicationToken659
                
                    * @param customerAccountId660
                
                    * @param customerId661
                
                    * @param developerToken662
                
                    * @param password663
                
                    * @param userName664
                
                */
                public  void startgetAdExtensionsByCampaignIds(

                 com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest getAdExtensionsByCampaignIdsRequest658,com.microsoft.adcenter.v8.ApplicationToken applicationToken659,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId660,
                    com.microsoft.adcenter.v8.CustomerId customerId661,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken662,
                    com.microsoft.adcenter.v8.Password password663,
                    com.microsoft.adcenter.v8.UserName userName664,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[54].getName());
             _operationClient.getOptions().setAction("GetAdExtensionsByCampaignIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdExtensionsByCampaignIdsRequest658,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdExtensionsByCampaignIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken659!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken659 = toOM(applicationToken659, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementapplicationToken659,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId660!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId660 = toOM(customerAccountId660, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId660,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId661!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId661 = toOM(customerId661, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementcustomerId661,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken662!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken662 = toOM(developerToken662, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken662,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password663!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword663 = toOM(password663, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementpassword663,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName664!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName664 = toOM(userName664, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdExtensionsByCampaignIds")));
                                                    addHeader(omElementuserName664,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdExtensionsByCampaignIds(
                                        (com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdExtensionsByCampaignIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdExtensionsByCampaignIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdExtensionsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdExtensionsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdExtensionsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdExtensionsByCampaignIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdExtensionsByCampaignIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdExtensionsByCampaignIds(f);
									    }
									} else {
									    callback.receiveErrorgetAdExtensionsByCampaignIds(f);
									}
								} else {
								    callback.receiveErrorgetAdExtensionsByCampaignIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdExtensionsByCampaignIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[54].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[54].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getBusinessesByIds
                     * @param getBusinessesByIdsRequest666
                    
                     * @param applicationToken667
                    
                     * @param customerAccountId668
                    
                     * @param customerId669
                    
                     * @param developerToken670
                    
                     * @param password671
                    
                     * @param userName672
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetBusinessesByIdsResponse getBusinessesByIds(

                            com.microsoft.adcenter.v8.GetBusinessesByIdsRequest getBusinessesByIdsRequest666,com.microsoft.adcenter.v8.ApplicationToken applicationToken667,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId668,com.microsoft.adcenter.v8.CustomerId customerId669,com.microsoft.adcenter.v8.DeveloperToken developerToken670,com.microsoft.adcenter.v8.Password password671,com.microsoft.adcenter.v8.UserName userName672)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
              _operationClient.getOptions().setAction("GetBusinessesByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getBusinessesByIdsRequest666,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken667!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken667 = toOM(applicationToken667, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementapplicationToken667,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId668!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId668 = toOM(customerAccountId668, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementcustomerAccountId668,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId669!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId669 = toOM(customerId669, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementcustomerId669,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken670!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken670 = toOM(developerToken670, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementdeveloperToken670,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password671!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword671 = toOM(password671, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementpassword671,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName672!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName672 = toOM(userName672, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementuserName672,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetBusinessesByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetBusinessesByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetBusinessesByIds
                    * @param getBusinessesByIdsRequest666
                
                    * @param applicationToken667
                
                    * @param customerAccountId668
                
                    * @param customerId669
                
                    * @param developerToken670
                
                    * @param password671
                
                    * @param userName672
                
                */
                public  void startgetBusinessesByIds(

                 com.microsoft.adcenter.v8.GetBusinessesByIdsRequest getBusinessesByIdsRequest666,com.microsoft.adcenter.v8.ApplicationToken applicationToken667,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId668,
                    com.microsoft.adcenter.v8.CustomerId customerId669,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken670,
                    com.microsoft.adcenter.v8.Password password671,
                    com.microsoft.adcenter.v8.UserName userName672,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[55].getName());
             _operationClient.getOptions().setAction("GetBusinessesByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getBusinessesByIdsRequest666,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken667!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken667 = toOM(applicationToken667, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementapplicationToken667,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId668!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId668 = toOM(customerAccountId668, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementcustomerAccountId668,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId669!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId669 = toOM(customerId669, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementcustomerId669,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken670!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken670 = toOM(developerToken670, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementdeveloperToken670,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password671!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword671 = toOM(password671, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementpassword671,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName672!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName672 = toOM(userName672, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesByIds")));
                                                    addHeader(omElementuserName672,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetBusinessesByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetBusinessesByIds(
                                        (com.microsoft.adcenter.v8.GetBusinessesByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetBusinessesByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetBusinessesByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetBusinessesByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetBusinessesByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetBusinessesByIds(f);
									    }
									} else {
									    callback.receiveErrorgetBusinessesByIds(f);
									}
								} else {
								    callback.receiveErrorgetBusinessesByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetBusinessesByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[55].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[55].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteTargetFromCampaign
                     * @param deleteTargetFromCampaignRequest674
                    
                     * @param applicationToken675
                    
                     * @param customerAccountId676
                    
                     * @param customerId677
                    
                     * @param developerToken678
                    
                     * @param password679
                    
                     * @param userName680
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse deleteTargetFromCampaign(

                            com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest deleteTargetFromCampaignRequest674,com.microsoft.adcenter.v8.ApplicationToken applicationToken675,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId676,com.microsoft.adcenter.v8.CustomerId customerId677,com.microsoft.adcenter.v8.DeveloperToken developerToken678,com.microsoft.adcenter.v8.Password password679,com.microsoft.adcenter.v8.UserName userName680)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
              _operationClient.getOptions().setAction("DeleteTargetFromCampaign");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetFromCampaignRequest674,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromCampaign")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromCampaign"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken675!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken675 = toOM(applicationToken675, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementapplicationToken675,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId676!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId676 = toOM(customerAccountId676, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementcustomerAccountId676,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId677!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId677 = toOM(customerId677, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementcustomerId677,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken678!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken678 = toOM(developerToken678, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementdeveloperToken678,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password679!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword679 = toOM(password679, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementpassword679,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName680!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName680 = toOM(userName680, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementuserName680,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteTargetFromCampaign
                    * @param deleteTargetFromCampaignRequest674
                
                    * @param applicationToken675
                
                    * @param customerAccountId676
                
                    * @param customerId677
                
                    * @param developerToken678
                
                    * @param password679
                
                    * @param userName680
                
                */
                public  void startdeleteTargetFromCampaign(

                 com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest deleteTargetFromCampaignRequest674,com.microsoft.adcenter.v8.ApplicationToken applicationToken675,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId676,
                    com.microsoft.adcenter.v8.CustomerId customerId677,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken678,
                    com.microsoft.adcenter.v8.Password password679,
                    com.microsoft.adcenter.v8.UserName userName680,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[56].getName());
             _operationClient.getOptions().setAction("DeleteTargetFromCampaign");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetFromCampaignRequest674,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromCampaign")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetFromCampaign"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken675!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken675 = toOM(applicationToken675, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementapplicationToken675,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId676!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId676 = toOM(customerAccountId676, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementcustomerAccountId676,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId677!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId677 = toOM(customerId677, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementcustomerId677,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken678!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken678 = toOM(developerToken678, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementdeveloperToken678,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password679!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword679 = toOM(password679, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementpassword679,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName680!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName680 = toOM(userName680, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetFromCampaign")));
                                                    addHeader(omElementuserName680,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteTargetFromCampaign(
                                        (com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteTargetFromCampaign(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetFromCampaign"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetFromCampaign((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetFromCampaign((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetFromCampaign_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteTargetFromCampaign(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetFromCampaign(f);
                                            }
									    } else {
										    callback.receiveErrordeleteTargetFromCampaign(f);
									    }
									} else {
									    callback.receiveErrordeleteTargetFromCampaign(f);
									}
								} else {
								    callback.receiveErrordeleteTargetFromCampaign(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteTargetFromCampaign(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[56].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[56].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getNegativeKeywordsByAdGroupIds
                     * @param getNegativeKeywordsByAdGroupIdsRequest682
                    
                     * @param applicationToken683
                    
                     * @param customerAccountId684
                    
                     * @param customerId685
                    
                     * @param developerToken686
                    
                     * @param password687
                    
                     * @param userName688
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse getNegativeKeywordsByAdGroupIds(

                            com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest getNegativeKeywordsByAdGroupIdsRequest682,com.microsoft.adcenter.v8.ApplicationToken applicationToken683,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId684,com.microsoft.adcenter.v8.CustomerId customerId685,com.microsoft.adcenter.v8.DeveloperToken developerToken686,com.microsoft.adcenter.v8.Password password687,com.microsoft.adcenter.v8.UserName userName688)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
              _operationClient.getOptions().setAction("GetNegativeKeywordsByAdGroupIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeKeywordsByAdGroupIdsRequest682,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByAdGroupIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken683!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken683 = toOM(applicationToken683, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementapplicationToken683,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId684!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId684 = toOM(customerAccountId684, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId684,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId685!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId685 = toOM(customerId685, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementcustomerId685,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken686!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken686 = toOM(developerToken686, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken686,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password687!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword687 = toOM(password687, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementpassword687,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName688!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName688 = toOM(userName688, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementuserName688,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetNegativeKeywordsByAdGroupIds
                    * @param getNegativeKeywordsByAdGroupIdsRequest682
                
                    * @param applicationToken683
                
                    * @param customerAccountId684
                
                    * @param customerId685
                
                    * @param developerToken686
                
                    * @param password687
                
                    * @param userName688
                
                */
                public  void startgetNegativeKeywordsByAdGroupIds(

                 com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest getNegativeKeywordsByAdGroupIdsRequest682,com.microsoft.adcenter.v8.ApplicationToken applicationToken683,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId684,
                    com.microsoft.adcenter.v8.CustomerId customerId685,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken686,
                    com.microsoft.adcenter.v8.Password password687,
                    com.microsoft.adcenter.v8.UserName userName688,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[57].getName());
             _operationClient.getOptions().setAction("GetNegativeKeywordsByAdGroupIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeKeywordsByAdGroupIdsRequest682,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByAdGroupIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByAdGroupIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken683!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken683 = toOM(applicationToken683, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementapplicationToken683,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId684!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId684 = toOM(customerAccountId684, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementcustomerAccountId684,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId685!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId685 = toOM(customerId685, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementcustomerId685,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken686!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken686 = toOM(developerToken686, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementdeveloperToken686,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password687!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword687 = toOM(password687, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementpassword687,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName688!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName688 = toOM(userName688, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByAdGroupIds")));
                                                    addHeader(omElementuserName688,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetNegativeKeywordsByAdGroupIds(
                                        (com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByAdGroupIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeKeywordsByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeKeywordsByAdGroupIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByAdGroupIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetNegativeKeywordsByAdGroupIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
									    }
									} else {
									    callback.receiveErrorgetNegativeKeywordsByAdGroupIds(f);
									}
								} else {
								    callback.receiveErrorgetNegativeKeywordsByAdGroupIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetNegativeKeywordsByAdGroupIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[57].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[57].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateAds
                     * @param updateAdsRequest690
                    
                     * @param applicationToken691
                    
                     * @param customerAccountId692
                    
                     * @param customerId693
                    
                     * @param developerToken694
                    
                     * @param password695
                    
                     * @param userName696
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateAdsResponse updateAds(

                            com.microsoft.adcenter.v8.UpdateAdsRequest updateAdsRequest690,com.microsoft.adcenter.v8.ApplicationToken applicationToken691,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId692,com.microsoft.adcenter.v8.CustomerId customerId693,com.microsoft.adcenter.v8.DeveloperToken developerToken694,com.microsoft.adcenter.v8.Password password695,com.microsoft.adcenter.v8.UserName userName696)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
              _operationClient.getOptions().setAction("UpdateAds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAdsRequest690,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken691!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken691 = toOM(applicationToken691, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementapplicationToken691,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId692!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId692 = toOM(customerAccountId692, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementcustomerAccountId692,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId693!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId693 = toOM(customerId693, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementcustomerId693,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken694!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken694 = toOM(developerToken694, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementdeveloperToken694,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password695!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword695 = toOM(password695, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementpassword695,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName696!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName696 = toOM(userName696, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementuserName696,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateAdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateAdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateAds
                    * @param updateAdsRequest690
                
                    * @param applicationToken691
                
                    * @param customerAccountId692
                
                    * @param customerId693
                
                    * @param developerToken694
                
                    * @param password695
                
                    * @param userName696
                
                */
                public  void startupdateAds(

                 com.microsoft.adcenter.v8.UpdateAdsRequest updateAdsRequest690,com.microsoft.adcenter.v8.ApplicationToken applicationToken691,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId692,
                    com.microsoft.adcenter.v8.CustomerId customerId693,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken694,
                    com.microsoft.adcenter.v8.Password password695,
                    com.microsoft.adcenter.v8.UserName userName696,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[58].getName());
             _operationClient.getOptions().setAction("UpdateAds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAdsRequest690,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken691!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken691 = toOM(applicationToken691, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementapplicationToken691,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId692!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId692 = toOM(customerAccountId692, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementcustomerAccountId692,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId693!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId693 = toOM(customerId693, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementcustomerId693,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken694!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken694 = toOM(developerToken694, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementdeveloperToken694,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password695!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword695 = toOM(password695, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementpassword695,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName696!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName696 = toOM(userName696, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAds")));
                                                    addHeader(omElementuserName696,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateAdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateAds(
                                        (com.microsoft.adcenter.v8.UpdateAdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateAds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateAds((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateAds((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAds_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateAds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAds(f);
                                            }
									    } else {
										    callback.receiveErrorupdateAds(f);
									    }
									} else {
									    callback.receiveErrorupdateAds(f);
									}
								} else {
								    callback.receiveErrorupdateAds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateAds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[58].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[58].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addAdGroups
                     * @param addAdGroupsRequest698
                    
                     * @param applicationToken699
                    
                     * @param customerAccountId700
                    
                     * @param customerId701
                    
                     * @param developerToken702
                    
                     * @param password703
                    
                     * @param userName704
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddAdGroupsResponse addAdGroups(

                            com.microsoft.adcenter.v8.AddAdGroupsRequest addAdGroupsRequest698,com.microsoft.adcenter.v8.ApplicationToken applicationToken699,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId700,com.microsoft.adcenter.v8.CustomerId customerId701,com.microsoft.adcenter.v8.DeveloperToken developerToken702,com.microsoft.adcenter.v8.Password password703,com.microsoft.adcenter.v8.UserName userName704)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
              _operationClient.getOptions().setAction("AddAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdGroupsRequest698,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken699!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken699 = toOM(applicationToken699, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementapplicationToken699,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId700!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId700 = toOM(customerAccountId700, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementcustomerAccountId700,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId701!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId701 = toOM(customerId701, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementcustomerId701,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken702!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken702 = toOM(developerToken702, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementdeveloperToken702,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password703!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword703 = toOM(password703, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementpassword703,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName704!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName704 = toOM(userName704, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementuserName704,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddAdGroups
                    * @param addAdGroupsRequest698
                
                    * @param applicationToken699
                
                    * @param customerAccountId700
                
                    * @param customerId701
                
                    * @param developerToken702
                
                    * @param password703
                
                    * @param userName704
                
                */
                public  void startaddAdGroups(

                 com.microsoft.adcenter.v8.AddAdGroupsRequest addAdGroupsRequest698,com.microsoft.adcenter.v8.ApplicationToken applicationToken699,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId700,
                    com.microsoft.adcenter.v8.CustomerId customerId701,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken702,
                    com.microsoft.adcenter.v8.Password password703,
                    com.microsoft.adcenter.v8.UserName userName704,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[59].getName());
             _operationClient.getOptions().setAction("AddAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdGroupsRequest698,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken699!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken699 = toOM(applicationToken699, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementapplicationToken699,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId700!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId700 = toOM(customerAccountId700, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementcustomerAccountId700,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId701!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId701 = toOM(customerId701, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementcustomerId701,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken702!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken702 = toOM(developerToken702, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementdeveloperToken702,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password703!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword703 = toOM(password703, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementpassword703,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName704!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName704 = toOM(userName704, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdGroups")));
                                                    addHeader(omElementuserName704,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddAdGroups(
                                        (com.microsoft.adcenter.v8.AddAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_AddAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdGroups(f);
                                            }
									    } else {
										    callback.receiveErroraddAdGroups(f);
									    }
									} else {
									    callback.receiveErroraddAdGroups(f);
									}
								} else {
								    callback.receiveErroraddAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[59].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[59].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getCampaignAdExtensions
                     * @param getCampaignAdExtensionsRequest706
                    
                     * @param applicationToken707
                    
                     * @param customerAccountId708
                    
                     * @param customerId709
                    
                     * @param developerToken710
                    
                     * @param password711
                    
                     * @param userName712
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse getCampaignAdExtensions(

                            com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest getCampaignAdExtensionsRequest706,com.microsoft.adcenter.v8.ApplicationToken applicationToken707,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId708,com.microsoft.adcenter.v8.CustomerId customerId709,com.microsoft.adcenter.v8.DeveloperToken developerToken710,com.microsoft.adcenter.v8.Password password711,com.microsoft.adcenter.v8.UserName userName712)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
              _operationClient.getOptions().setAction("GetCampaignAdExtensions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignAdExtensionsRequest706,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignAdExtensions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken707!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken707 = toOM(applicationToken707, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementapplicationToken707,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId708!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId708 = toOM(customerAccountId708, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementcustomerAccountId708,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId709!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId709 = toOM(customerId709, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementcustomerId709,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken710!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken710 = toOM(developerToken710, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementdeveloperToken710,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password711!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword711 = toOM(password711, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementpassword711,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName712!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName712 = toOM(userName712, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementuserName712,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetCampaignAdExtensions
                    * @param getCampaignAdExtensionsRequest706
                
                    * @param applicationToken707
                
                    * @param customerAccountId708
                
                    * @param customerId709
                
                    * @param developerToken710
                
                    * @param password711
                
                    * @param userName712
                
                */
                public  void startgetCampaignAdExtensions(

                 com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest getCampaignAdExtensionsRequest706,com.microsoft.adcenter.v8.ApplicationToken applicationToken707,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId708,
                    com.microsoft.adcenter.v8.CustomerId customerId709,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken710,
                    com.microsoft.adcenter.v8.Password password711,
                    com.microsoft.adcenter.v8.UserName userName712,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[60].getName());
             _operationClient.getOptions().setAction("GetCampaignAdExtensions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignAdExtensionsRequest706,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignAdExtensions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken707!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken707 = toOM(applicationToken707, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementapplicationToken707,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId708!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId708 = toOM(customerAccountId708, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementcustomerAccountId708,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId709!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId709 = toOM(customerId709, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementcustomerId709,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken710!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken710 = toOM(developerToken710, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementdeveloperToken710,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password711!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword711 = toOM(password711, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementpassword711,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName712!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName712 = toOM(userName712, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignAdExtensions")));
                                                    addHeader(omElementuserName712,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCampaignAdExtensions(
                                        (com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCampaignAdExtensions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignAdExtensions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignAdExtensions_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCampaignAdExtensions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignAdExtensions(f);
                                            }
									    } else {
										    callback.receiveErrorgetCampaignAdExtensions(f);
									    }
									} else {
									    callback.receiveErrorgetCampaignAdExtensions(f);
									}
								} else {
								    callback.receiveErrorgetCampaignAdExtensions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCampaignAdExtensions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[60].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[60].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdsByIds
                     * @param getAdsByIdsRequest714
                    
                     * @param applicationToken715
                    
                     * @param customerAccountId716
                    
                     * @param customerId717
                    
                     * @param developerToken718
                    
                     * @param password719
                    
                     * @param userName720
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdsByIdsResponse getAdsByIds(

                            com.microsoft.adcenter.v8.GetAdsByIdsRequest getAdsByIdsRequest714,com.microsoft.adcenter.v8.ApplicationToken applicationToken715,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId716,com.microsoft.adcenter.v8.CustomerId customerId717,com.microsoft.adcenter.v8.DeveloperToken developerToken718,com.microsoft.adcenter.v8.Password password719,com.microsoft.adcenter.v8.UserName userName720)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
              _operationClient.getOptions().setAction("GetAdsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByIdsRequest714,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken715!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken715 = toOM(applicationToken715, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementapplicationToken715,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId716!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId716 = toOM(customerAccountId716, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementcustomerAccountId716,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId717!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId717 = toOM(customerId717, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementcustomerId717,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken718!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken718 = toOM(developerToken718, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementdeveloperToken718,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password719!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword719 = toOM(password719, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementpassword719,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName720!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName720 = toOM(userName720, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementuserName720,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdsByIds
                    * @param getAdsByIdsRequest714
                
                    * @param applicationToken715
                
                    * @param customerAccountId716
                
                    * @param customerId717
                
                    * @param developerToken718
                
                    * @param password719
                
                    * @param userName720
                
                */
                public  void startgetAdsByIds(

                 com.microsoft.adcenter.v8.GetAdsByIdsRequest getAdsByIdsRequest714,com.microsoft.adcenter.v8.ApplicationToken applicationToken715,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId716,
                    com.microsoft.adcenter.v8.CustomerId customerId717,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken718,
                    com.microsoft.adcenter.v8.Password password719,
                    com.microsoft.adcenter.v8.UserName userName720,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[61].getName());
             _operationClient.getOptions().setAction("GetAdsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByIdsRequest714,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken715!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken715 = toOM(applicationToken715, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementapplicationToken715,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId716!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId716 = toOM(customerAccountId716, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementcustomerAccountId716,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId717!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId717 = toOM(customerId717, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementcustomerId717,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken718!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken718 = toOM(developerToken718, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementdeveloperToken718,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password719!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword719 = toOM(password719, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementpassword719,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName720!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName720 = toOM(userName720, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByIds")));
                                                    addHeader(omElementuserName720,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdsByIds(
                                        (com.microsoft.adcenter.v8.GetAdsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetAdsByIds(f);
									}
								} else {
								    callback.receiveErrorgetAdsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[61].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[61].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setAdExtensionsToCampaigns
                     * @param setAdExtensionsToCampaignsRequest722
                    
                     * @param applicationToken723
                    
                     * @param customerAccountId724
                    
                     * @param customerId725
                    
                     * @param developerToken726
                    
                     * @param password727
                    
                     * @param userName728
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse setAdExtensionsToCampaigns(

                            com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest setAdExtensionsToCampaignsRequest722,com.microsoft.adcenter.v8.ApplicationToken applicationToken723,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId724,com.microsoft.adcenter.v8.CustomerId customerId725,com.microsoft.adcenter.v8.DeveloperToken developerToken726,com.microsoft.adcenter.v8.Password password727,com.microsoft.adcenter.v8.UserName userName728)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
              _operationClient.getOptions().setAction("SetAdExtensionsToCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setAdExtensionsToCampaignsRequest722,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAdExtensionsToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAdExtensionsToCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken723!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken723 = toOM(applicationToken723, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementapplicationToken723,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId724!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId724 = toOM(customerAccountId724, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementcustomerAccountId724,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId725!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId725 = toOM(customerId725, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementcustomerId725,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken726!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken726 = toOM(developerToken726, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementdeveloperToken726,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password727!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword727 = toOM(password727, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementpassword727,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName728!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName728 = toOM(userName728, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementuserName728,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetAdExtensionsToCampaigns
                    * @param setAdExtensionsToCampaignsRequest722
                
                    * @param applicationToken723
                
                    * @param customerAccountId724
                
                    * @param customerId725
                
                    * @param developerToken726
                
                    * @param password727
                
                    * @param userName728
                
                */
                public  void startsetAdExtensionsToCampaigns(

                 com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest setAdExtensionsToCampaignsRequest722,com.microsoft.adcenter.v8.ApplicationToken applicationToken723,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId724,
                    com.microsoft.adcenter.v8.CustomerId customerId725,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken726,
                    com.microsoft.adcenter.v8.Password password727,
                    com.microsoft.adcenter.v8.UserName userName728,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[62].getName());
             _operationClient.getOptions().setAction("SetAdExtensionsToCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setAdExtensionsToCampaignsRequest722,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAdExtensionsToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setAdExtensionsToCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken723!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken723 = toOM(applicationToken723, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementapplicationToken723,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId724!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId724 = toOM(customerAccountId724, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementcustomerAccountId724,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId725!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId725 = toOM(customerId725, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementcustomerId725,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken726!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken726 = toOM(developerToken726, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementdeveloperToken726,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password727!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword727 = toOM(password727, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementpassword727,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName728!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName728 = toOM(userName728, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setAdExtensionsToCampaigns")));
                                                    addHeader(omElementuserName728,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetAdExtensionsToCampaigns(
                                        (com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetAdExtensionsToCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetAdExtensionsToCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetAdExtensionsToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetAdExtensionsToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetAdExtensionsToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetAdExtensionsToCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetAdExtensionsToCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetAdExtensionsToCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorsetAdExtensionsToCampaigns(f);
									    }
									} else {
									    callback.receiveErrorsetAdExtensionsToCampaigns(f);
									}
								} else {
								    callback.receiveErrorsetAdExtensionsToCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetAdExtensionsToCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[62].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[62].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteGoals
                     * @param deleteGoalsRequest730
                    
                     * @param applicationToken731
                    
                     * @param customerAccountId732
                    
                     * @param customerId733
                    
                     * @param developerToken734
                    
                     * @param password735
                    
                     * @param userName736
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteGoalsResponse deleteGoals(

                            com.microsoft.adcenter.v8.DeleteGoalsRequest deleteGoalsRequest730,com.microsoft.adcenter.v8.ApplicationToken applicationToken731,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId732,com.microsoft.adcenter.v8.CustomerId customerId733,com.microsoft.adcenter.v8.DeveloperToken developerToken734,com.microsoft.adcenter.v8.Password password735,com.microsoft.adcenter.v8.UserName userName736)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
              _operationClient.getOptions().setAction("DeleteGoals");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteGoalsRequest730,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteGoals"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken731!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken731 = toOM(applicationToken731, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementapplicationToken731,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId732!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId732 = toOM(customerAccountId732, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementcustomerAccountId732,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId733!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId733 = toOM(customerId733, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementcustomerId733,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken734!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken734 = toOM(developerToken734, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementdeveloperToken734,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password735!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword735 = toOM(password735, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementpassword735,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName736!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName736 = toOM(userName736, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementuserName736,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteGoalsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteGoalsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteGoals
                    * @param deleteGoalsRequest730
                
                    * @param applicationToken731
                
                    * @param customerAccountId732
                
                    * @param customerId733
                
                    * @param developerToken734
                
                    * @param password735
                
                    * @param userName736
                
                */
                public  void startdeleteGoals(

                 com.microsoft.adcenter.v8.DeleteGoalsRequest deleteGoalsRequest730,com.microsoft.adcenter.v8.ApplicationToken applicationToken731,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId732,
                    com.microsoft.adcenter.v8.CustomerId customerId733,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken734,
                    com.microsoft.adcenter.v8.Password password735,
                    com.microsoft.adcenter.v8.UserName userName736,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[63].getName());
             _operationClient.getOptions().setAction("DeleteGoals");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteGoalsRequest730,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteGoals")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteGoals"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken731!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken731 = toOM(applicationToken731, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementapplicationToken731,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId732!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId732 = toOM(customerAccountId732, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementcustomerAccountId732,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId733!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId733 = toOM(customerId733, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementcustomerId733,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken734!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken734 = toOM(developerToken734, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementdeveloperToken734,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password735!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword735 = toOM(password735, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementpassword735,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName736!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName736 = toOM(userName736, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteGoals")));
                                                    addHeader(omElementuserName736,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteGoalsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteGoals(
                                        (com.microsoft.adcenter.v8.DeleteGoalsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteGoals(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteGoals"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteGoals((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteGoals((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteGoals_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteGoals(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteGoals(f);
                                            }
									    } else {
										    callback.receiveErrordeleteGoals(f);
									    }
									} else {
									    callback.receiveErrordeleteGoals(f);
									}
								} else {
								    callback.receiveErrordeleteGoals(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteGoals(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[63].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[63].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#pauseKeywords
                     * @param pauseKeywordsRequest738
                    
                     * @param applicationToken739
                    
                     * @param customerAccountId740
                    
                     * @param customerId741
                    
                     * @param developerToken742
                    
                     * @param password743
                    
                     * @param userName744
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.PauseKeywordsResponse pauseKeywords(

                            com.microsoft.adcenter.v8.PauseKeywordsRequest pauseKeywordsRequest738,com.microsoft.adcenter.v8.ApplicationToken applicationToken739,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId740,com.microsoft.adcenter.v8.CustomerId customerId741,com.microsoft.adcenter.v8.DeveloperToken developerToken742,com.microsoft.adcenter.v8.Password password743,com.microsoft.adcenter.v8.UserName userName744)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
              _operationClient.getOptions().setAction("PauseKeywords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseKeywordsRequest738,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseKeywords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken739!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken739 = toOM(applicationToken739, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementapplicationToken739,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId740!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId740 = toOM(customerAccountId740, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementcustomerAccountId740,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId741!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId741 = toOM(customerId741, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementcustomerId741,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken742!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken742 = toOM(developerToken742, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementdeveloperToken742,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password743!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword743 = toOM(password743, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementpassword743,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName744!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName744 = toOM(userName744, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementuserName744,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.PauseKeywordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.PauseKeywordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startpauseKeywords
                    * @param pauseKeywordsRequest738
                
                    * @param applicationToken739
                
                    * @param customerAccountId740
                
                    * @param customerId741
                
                    * @param developerToken742
                
                    * @param password743
                
                    * @param userName744
                
                */
                public  void startpauseKeywords(

                 com.microsoft.adcenter.v8.PauseKeywordsRequest pauseKeywordsRequest738,com.microsoft.adcenter.v8.ApplicationToken applicationToken739,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId740,
                    com.microsoft.adcenter.v8.CustomerId customerId741,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken742,
                    com.microsoft.adcenter.v8.Password password743,
                    com.microsoft.adcenter.v8.UserName userName744,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[64].getName());
             _operationClient.getOptions().setAction("PauseKeywords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseKeywordsRequest738,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseKeywords"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken739!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken739 = toOM(applicationToken739, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementapplicationToken739,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId740!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId740 = toOM(customerAccountId740, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementcustomerAccountId740,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId741!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId741 = toOM(customerId741, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementcustomerId741,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken742!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken742 = toOM(developerToken742, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementdeveloperToken742,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password743!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword743 = toOM(password743, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementpassword743,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName744!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName744 = toOM(userName744, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseKeywords")));
                                                    addHeader(omElementuserName744,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.PauseKeywordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpauseKeywords(
                                        (com.microsoft.adcenter.v8.PauseKeywordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpauseKeywords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseKeywords"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_PauseKeywords_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorpauseKeywords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseKeywords(f);
                                            }
									    } else {
										    callback.receiveErrorpauseKeywords(f);
									    }
									} else {
									    callback.receiveErrorpauseKeywords(f);
									}
								} else {
								    callback.receiveErrorpauseKeywords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpauseKeywords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[64].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[64].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getNegativeKeywordsByCampaignIds
                     * @param getNegativeKeywordsByCampaignIdsRequest746
                    
                     * @param applicationToken747
                    
                     * @param customerAccountId748
                    
                     * @param customerId749
                    
                     * @param developerToken750
                    
                     * @param password751
                    
                     * @param userName752
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse getNegativeKeywordsByCampaignIds(

                            com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest getNegativeKeywordsByCampaignIdsRequest746,com.microsoft.adcenter.v8.ApplicationToken applicationToken747,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId748,com.microsoft.adcenter.v8.CustomerId customerId749,com.microsoft.adcenter.v8.DeveloperToken developerToken750,com.microsoft.adcenter.v8.Password password751,com.microsoft.adcenter.v8.UserName userName752)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
              _operationClient.getOptions().setAction("GetNegativeKeywordsByCampaignIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeKeywordsByCampaignIdsRequest746,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByCampaignIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken747!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken747 = toOM(applicationToken747, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementapplicationToken747,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId748!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId748 = toOM(customerAccountId748, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId748,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId749!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId749 = toOM(customerId749, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementcustomerId749,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken750!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken750 = toOM(developerToken750, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken750,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password751!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword751 = toOM(password751, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementpassword751,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName752!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName752 = toOM(userName752, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementuserName752,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetNegativeKeywordsByCampaignIds
                    * @param getNegativeKeywordsByCampaignIdsRequest746
                
                    * @param applicationToken747
                
                    * @param customerAccountId748
                
                    * @param customerId749
                
                    * @param developerToken750
                
                    * @param password751
                
                    * @param userName752
                
                */
                public  void startgetNegativeKeywordsByCampaignIds(

                 com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest getNegativeKeywordsByCampaignIdsRequest746,com.microsoft.adcenter.v8.ApplicationToken applicationToken747,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId748,
                    com.microsoft.adcenter.v8.CustomerId customerId749,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken750,
                    com.microsoft.adcenter.v8.Password password751,
                    com.microsoft.adcenter.v8.UserName userName752,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[65].getName());
             _operationClient.getOptions().setAction("GetNegativeKeywordsByCampaignIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getNegativeKeywordsByCampaignIdsRequest746,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByCampaignIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getNegativeKeywordsByCampaignIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken747!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken747 = toOM(applicationToken747, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementapplicationToken747,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId748!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId748 = toOM(customerAccountId748, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementcustomerAccountId748,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId749!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId749 = toOM(customerId749, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementcustomerId749,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken750!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken750 = toOM(developerToken750, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementdeveloperToken750,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password751!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword751 = toOM(password751, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementpassword751,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName752!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName752 = toOM(userName752, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getNegativeKeywordsByCampaignIds")));
                                                    addHeader(omElementuserName752,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetNegativeKeywordsByCampaignIds(
                                        (com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetNegativeKeywordsByCampaignIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeKeywordsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetNegativeKeywordsByCampaignIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetNegativeKeywordsByCampaignIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetNegativeKeywordsByCampaignIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
									    }
									} else {
									    callback.receiveErrorgetNegativeKeywordsByCampaignIds(f);
									}
								} else {
								    callback.receiveErrorgetNegativeKeywordsByCampaignIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetNegativeKeywordsByCampaignIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[65].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[65].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateKeywords
                     * @param updateKeywordsRequest754
                    
                     * @param applicationToken755
                    
                     * @param customerAccountId756
                    
                     * @param customerId757
                    
                     * @param developerToken758
                    
                     * @param password759
                    
                     * @param userName760
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateKeywordsResponse updateKeywords(

                            com.microsoft.adcenter.v8.UpdateKeywordsRequest updateKeywordsRequest754,com.microsoft.adcenter.v8.ApplicationToken applicationToken755,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId756,com.microsoft.adcenter.v8.CustomerId customerId757,com.microsoft.adcenter.v8.DeveloperToken developerToken758,com.microsoft.adcenter.v8.Password password759,com.microsoft.adcenter.v8.UserName userName760)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
              _operationClient.getOptions().setAction("UpdateKeywords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateKeywordsRequest754,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateKeywords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken755!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken755 = toOM(applicationToken755, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementapplicationToken755,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId756!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId756 = toOM(customerAccountId756, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementcustomerAccountId756,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId757!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId757 = toOM(customerId757, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementcustomerId757,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken758!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken758 = toOM(developerToken758, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementdeveloperToken758,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password759!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword759 = toOM(password759, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementpassword759,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName760!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName760 = toOM(userName760, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementuserName760,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateKeywordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateKeywordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateKeywords
                    * @param updateKeywordsRequest754
                
                    * @param applicationToken755
                
                    * @param customerAccountId756
                
                    * @param customerId757
                
                    * @param developerToken758
                
                    * @param password759
                
                    * @param userName760
                
                */
                public  void startupdateKeywords(

                 com.microsoft.adcenter.v8.UpdateKeywordsRequest updateKeywordsRequest754,com.microsoft.adcenter.v8.ApplicationToken applicationToken755,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId756,
                    com.microsoft.adcenter.v8.CustomerId customerId757,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken758,
                    com.microsoft.adcenter.v8.Password password759,
                    com.microsoft.adcenter.v8.UserName userName760,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[66].getName());
             _operationClient.getOptions().setAction("UpdateKeywords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateKeywordsRequest754,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateKeywords"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken755!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken755 = toOM(applicationToken755, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementapplicationToken755,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId756!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId756 = toOM(customerAccountId756, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementcustomerAccountId756,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId757!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId757 = toOM(customerId757, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementcustomerId757,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken758!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken758 = toOM(developerToken758, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementdeveloperToken758,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password759!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword759 = toOM(password759, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementpassword759,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName760!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName760 = toOM(userName760, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateKeywords")));
                                                    addHeader(omElementuserName760,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateKeywordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateKeywords(
                                        (com.microsoft.adcenter.v8.UpdateKeywordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateKeywords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateKeywords"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateKeywords_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateKeywords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateKeywords(f);
                                            }
									    } else {
										    callback.receiveErrorupdateKeywords(f);
									    }
									} else {
									    callback.receiveErrorupdateKeywords(f);
									}
								} else {
								    callback.receiveErrorupdateKeywords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateKeywords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[66].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[66].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addKeywords
                     * @param addKeywordsRequest762
                    
                     * @param applicationToken763
                    
                     * @param customerAccountId764
                    
                     * @param customerId765
                    
                     * @param developerToken766
                    
                     * @param password767
                    
                     * @param userName768
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddKeywordsResponse addKeywords(

                            com.microsoft.adcenter.v8.AddKeywordsRequest addKeywordsRequest762,com.microsoft.adcenter.v8.ApplicationToken applicationToken763,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId764,com.microsoft.adcenter.v8.CustomerId customerId765,com.microsoft.adcenter.v8.DeveloperToken developerToken766,com.microsoft.adcenter.v8.Password password767,com.microsoft.adcenter.v8.UserName userName768)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
              _operationClient.getOptions().setAction("AddKeywords");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addKeywordsRequest762,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addKeywords"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken763!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken763 = toOM(applicationToken763, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementapplicationToken763,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId764!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId764 = toOM(customerAccountId764, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementcustomerAccountId764,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId765!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId765 = toOM(customerId765, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementcustomerId765,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken766!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken766 = toOM(developerToken766, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementdeveloperToken766,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password767!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword767 = toOM(password767, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementpassword767,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName768!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName768 = toOM(userName768, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementuserName768,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddKeywordsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddKeywordsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddKeywords
                    * @param addKeywordsRequest762
                
                    * @param applicationToken763
                
                    * @param customerAccountId764
                
                    * @param customerId765
                
                    * @param developerToken766
                
                    * @param password767
                
                    * @param userName768
                
                */
                public  void startaddKeywords(

                 com.microsoft.adcenter.v8.AddKeywordsRequest addKeywordsRequest762,com.microsoft.adcenter.v8.ApplicationToken applicationToken763,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId764,
                    com.microsoft.adcenter.v8.CustomerId customerId765,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken766,
                    com.microsoft.adcenter.v8.Password password767,
                    com.microsoft.adcenter.v8.UserName userName768,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[67].getName());
             _operationClient.getOptions().setAction("AddKeywords");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addKeywordsRequest762,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addKeywords")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addKeywords"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken763!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken763 = toOM(applicationToken763, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementapplicationToken763,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId764!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId764 = toOM(customerAccountId764, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementcustomerAccountId764,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId765!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId765 = toOM(customerId765, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementcustomerId765,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken766!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken766 = toOM(developerToken766, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementdeveloperToken766,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password767!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword767 = toOM(password767, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementpassword767,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName768!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName768 = toOM(userName768, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addKeywords")));
                                                    addHeader(omElementuserName768,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddKeywordsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddKeywords(
                                        (com.microsoft.adcenter.v8.AddKeywordsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddKeywords(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddKeywords"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddKeywords((com.microsoft.adcenter.v8.ICampaignManagementService_AddKeywords_EditorialApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddKeywords(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddKeywords(f);
                                            }
									    } else {
										    callback.receiveErroraddKeywords(f);
									    }
									} else {
									    callback.receiveErroraddKeywords(f);
									}
								} else {
								    callback.receiveErroraddKeywords(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddKeywords(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[67].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[67].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getTargetsInfoFromLibrary
                     * @param getTargetsInfoFromLibraryRequest770
                    
                     * @param applicationToken771
                    
                     * @param customerAccountId772
                    
                     * @param customerId773
                    
                     * @param developerToken774
                    
                     * @param password775
                    
                     * @param userName776
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse getTargetsInfoFromLibrary(

                            com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest getTargetsInfoFromLibraryRequest770,com.microsoft.adcenter.v8.ApplicationToken applicationToken771,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId772,com.microsoft.adcenter.v8.CustomerId customerId773,com.microsoft.adcenter.v8.DeveloperToken developerToken774,com.microsoft.adcenter.v8.Password password775,com.microsoft.adcenter.v8.UserName userName776)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
              _operationClient.getOptions().setAction("GetTargetsInfoFromLibrary");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsInfoFromLibraryRequest770,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsInfoFromLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsInfoFromLibrary"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken771!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken771 = toOM(applicationToken771, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementapplicationToken771,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId772!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId772 = toOM(customerAccountId772, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementcustomerAccountId772,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId773!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId773 = toOM(customerId773, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementcustomerId773,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken774!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken774 = toOM(developerToken774, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementdeveloperToken774,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password775!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword775 = toOM(password775, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementpassword775,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName776!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName776 = toOM(userName776, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementuserName776,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetTargetsInfoFromLibrary
                    * @param getTargetsInfoFromLibraryRequest770
                
                    * @param applicationToken771
                
                    * @param customerAccountId772
                
                    * @param customerId773
                
                    * @param developerToken774
                
                    * @param password775
                
                    * @param userName776
                
                */
                public  void startgetTargetsInfoFromLibrary(

                 com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest getTargetsInfoFromLibraryRequest770,com.microsoft.adcenter.v8.ApplicationToken applicationToken771,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId772,
                    com.microsoft.adcenter.v8.CustomerId customerId773,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken774,
                    com.microsoft.adcenter.v8.Password password775,
                    com.microsoft.adcenter.v8.UserName userName776,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[68].getName());
             _operationClient.getOptions().setAction("GetTargetsInfoFromLibrary");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsInfoFromLibraryRequest770,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsInfoFromLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsInfoFromLibrary"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken771!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken771 = toOM(applicationToken771, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementapplicationToken771,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId772!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId772 = toOM(customerAccountId772, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementcustomerAccountId772,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId773!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId773 = toOM(customerId773, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementcustomerId773,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken774!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken774 = toOM(developerToken774, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementdeveloperToken774,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password775!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword775 = toOM(password775, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementpassword775,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName776!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName776 = toOM(userName776, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsInfoFromLibrary")));
                                                    addHeader(omElementuserName776,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTargetsInfoFromLibrary(
                                        (com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTargetsInfoFromLibrary(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsInfoFromLibrary"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsInfoFromLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsInfoFromLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsInfoFromLibrary_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetTargetsInfoFromLibrary(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsInfoFromLibrary(f);
                                            }
									    } else {
										    callback.receiveErrorgetTargetsInfoFromLibrary(f);
									    }
									} else {
									    callback.receiveErrorgetTargetsInfoFromLibrary(f);
									}
								} else {
								    callback.receiveErrorgetTargetsInfoFromLibrary(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTargetsInfoFromLibrary(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[68].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[68].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#setNegativeKeywordsToCampaigns
                     * @param setNegativeKeywordsToCampaignsRequest778
                    
                     * @param applicationToken779
                    
                     * @param customerAccountId780
                    
                     * @param customerId781
                    
                     * @param developerToken782
                    
                     * @param password783
                    
                     * @param userName784
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse setNegativeKeywordsToCampaigns(

                            com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest setNegativeKeywordsToCampaignsRequest778,com.microsoft.adcenter.v8.ApplicationToken applicationToken779,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId780,com.microsoft.adcenter.v8.CustomerId customerId781,com.microsoft.adcenter.v8.DeveloperToken developerToken782,com.microsoft.adcenter.v8.Password password783,com.microsoft.adcenter.v8.UserName userName784)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
              _operationClient.getOptions().setAction("SetNegativeKeywordsToCampaigns");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeKeywordsToCampaignsRequest778,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToCampaigns"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken779!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken779 = toOM(applicationToken779, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementapplicationToken779,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId780!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId780 = toOM(customerAccountId780, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementcustomerAccountId780,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId781!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId781 = toOM(customerId781, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementcustomerId781,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken782!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken782 = toOM(developerToken782, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementdeveloperToken782,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password783!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword783 = toOM(password783, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementpassword783,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName784!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName784 = toOM(userName784, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementuserName784,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startsetNegativeKeywordsToCampaigns
                    * @param setNegativeKeywordsToCampaignsRequest778
                
                    * @param applicationToken779
                
                    * @param customerAccountId780
                
                    * @param customerId781
                
                    * @param developerToken782
                
                    * @param password783
                
                    * @param userName784
                
                */
                public  void startsetNegativeKeywordsToCampaigns(

                 com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest setNegativeKeywordsToCampaignsRequest778,com.microsoft.adcenter.v8.ApplicationToken applicationToken779,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId780,
                    com.microsoft.adcenter.v8.CustomerId customerId781,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken782,
                    com.microsoft.adcenter.v8.Password password783,
                    com.microsoft.adcenter.v8.UserName userName784,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[69].getName());
             _operationClient.getOptions().setAction("SetNegativeKeywordsToCampaigns");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    setNegativeKeywordsToCampaignsRequest778,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToCampaigns")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "setNegativeKeywordsToCampaigns"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken779!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken779 = toOM(applicationToken779, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementapplicationToken779,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId780!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId780 = toOM(customerAccountId780, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementcustomerAccountId780,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId781!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId781 = toOM(customerId781, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementcustomerId781,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken782!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken782 = toOM(developerToken782, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementdeveloperToken782,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password783!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword783 = toOM(password783, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementpassword783,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName784!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName784 = toOM(userName784, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "setNegativeKeywordsToCampaigns")));
                                                    addHeader(omElementuserName784,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsetNegativeKeywordsToCampaigns(
                                        (com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsetNegativeKeywordsToCampaigns(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SetNegativeKeywordsToCampaigns"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeKeywordsToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsetNegativeKeywordsToCampaigns((com.microsoft.adcenter.v8.ICampaignManagementService_SetNegativeKeywordsToCampaigns_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsetNegativeKeywordsToCampaigns(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
                                            }
									    } else {
										    callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
									    }
									} else {
									    callback.receiveErrorsetNegativeKeywordsToCampaigns(f);
									}
								} else {
								    callback.receiveErrorsetNegativeKeywordsToCampaigns(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsetNegativeKeywordsToCampaigns(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[69].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[69].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdsByAdGroupId
                     * @param getAdsByAdGroupIdRequest786
                    
                     * @param applicationToken787
                    
                     * @param customerAccountId788
                    
                     * @param customerId789
                    
                     * @param developerToken790
                    
                     * @param password791
                    
                     * @param userName792
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse getAdsByAdGroupId(

                            com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest getAdsByAdGroupIdRequest786,com.microsoft.adcenter.v8.ApplicationToken applicationToken787,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId788,com.microsoft.adcenter.v8.CustomerId customerId789,com.microsoft.adcenter.v8.DeveloperToken developerToken790,com.microsoft.adcenter.v8.Password password791,com.microsoft.adcenter.v8.UserName userName792)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
              _operationClient.getOptions().setAction("GetAdsByAdGroupId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByAdGroupIdRequest786,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByAdGroupId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken787!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken787 = toOM(applicationToken787, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementapplicationToken787,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId788!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId788 = toOM(customerAccountId788, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId788,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId789!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId789 = toOM(customerId789, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementcustomerId789,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken790!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken790 = toOM(developerToken790, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken790,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password791!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword791 = toOM(password791, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementpassword791,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName792!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName792 = toOM(userName792, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementuserName792,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdsByAdGroupId
                    * @param getAdsByAdGroupIdRequest786
                
                    * @param applicationToken787
                
                    * @param customerAccountId788
                
                    * @param customerId789
                
                    * @param developerToken790
                
                    * @param password791
                
                    * @param userName792
                
                */
                public  void startgetAdsByAdGroupId(

                 com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest getAdsByAdGroupIdRequest786,com.microsoft.adcenter.v8.ApplicationToken applicationToken787,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId788,
                    com.microsoft.adcenter.v8.CustomerId customerId789,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken790,
                    com.microsoft.adcenter.v8.Password password791,
                    com.microsoft.adcenter.v8.UserName userName792,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[70].getName());
             _operationClient.getOptions().setAction("GetAdsByAdGroupId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdsByAdGroupIdRequest786,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdsByAdGroupId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken787!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken787 = toOM(applicationToken787, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementapplicationToken787,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId788!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId788 = toOM(customerAccountId788, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId788,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId789!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId789 = toOM(customerId789, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementcustomerId789,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken790!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken790 = toOM(developerToken790, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken790,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password791!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword791 = toOM(password791, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementpassword791,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName792!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName792 = toOM(userName792, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdsByAdGroupId")));
                                                    addHeader(omElementuserName792,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdsByAdGroupId(
                                        (com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdsByAdGroupId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdsByAdGroupId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdsByAdGroupId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdsByAdGroupId(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdsByAdGroupId(f);
									    }
									} else {
									    callback.receiveErrorgetAdsByAdGroupId(f);
									}
								} else {
								    callback.receiveErrorgetAdsByAdGroupId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdsByAdGroupId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[70].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[70].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getTargetsByIds
                     * @param getTargetsByIdsRequest794
                    
                     * @param applicationToken795
                    
                     * @param customerAccountId796
                    
                     * @param customerId797
                    
                     * @param developerToken798
                    
                     * @param password799
                    
                     * @param userName800
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetTargetsByIdsResponse getTargetsByIds(

                            com.microsoft.adcenter.v8.GetTargetsByIdsRequest getTargetsByIdsRequest794,com.microsoft.adcenter.v8.ApplicationToken applicationToken795,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId796,com.microsoft.adcenter.v8.CustomerId customerId797,com.microsoft.adcenter.v8.DeveloperToken developerToken798,com.microsoft.adcenter.v8.Password password799,com.microsoft.adcenter.v8.UserName userName800)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
              _operationClient.getOptions().setAction("GetTargetsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByIdsRequest794,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken795!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken795 = toOM(applicationToken795, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementapplicationToken795,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId796!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId796 = toOM(customerAccountId796, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementcustomerAccountId796,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId797!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId797 = toOM(customerId797, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementcustomerId797,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken798!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken798 = toOM(developerToken798, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementdeveloperToken798,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password799!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword799 = toOM(password799, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementpassword799,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName800!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName800 = toOM(userName800, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementuserName800,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetTargetsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetTargetsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetTargetsByIds
                    * @param getTargetsByIdsRequest794
                
                    * @param applicationToken795
                
                    * @param customerAccountId796
                
                    * @param customerId797
                
                    * @param developerToken798
                
                    * @param password799
                
                    * @param userName800
                
                */
                public  void startgetTargetsByIds(

                 com.microsoft.adcenter.v8.GetTargetsByIdsRequest getTargetsByIdsRequest794,com.microsoft.adcenter.v8.ApplicationToken applicationToken795,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId796,
                    com.microsoft.adcenter.v8.CustomerId customerId797,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken798,
                    com.microsoft.adcenter.v8.Password password799,
                    com.microsoft.adcenter.v8.UserName userName800,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[71].getName());
             _operationClient.getOptions().setAction("GetTargetsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getTargetsByIdsRequest794,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getTargetsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken795!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken795 = toOM(applicationToken795, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementapplicationToken795,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId796!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId796 = toOM(customerAccountId796, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementcustomerAccountId796,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId797!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId797 = toOM(customerId797, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementcustomerId797,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken798!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken798 = toOM(developerToken798, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementdeveloperToken798,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password799!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword799 = toOM(password799, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementpassword799,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName800!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName800 = toOM(userName800, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getTargetsByIds")));
                                                    addHeader(omElementuserName800,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetTargetsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetTargetsByIds(
                                        (com.microsoft.adcenter.v8.GetTargetsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetTargetsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetTargetsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetTargetsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetTargetsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetTargetsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetTargetsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetTargetsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetTargetsByIds(f);
									}
								} else {
								    callback.receiveErrorgetTargetsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetTargetsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[71].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[71].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#deleteTargetsFromLibrary
                     * @param deleteTargetsFromLibraryRequest802
                    
                     * @param applicationToken803
                    
                     * @param customerAccountId804
                    
                     * @param customerId805
                    
                     * @param developerToken806
                    
                     * @param password807
                    
                     * @param userName808
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse deleteTargetsFromLibrary(

                            com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest deleteTargetsFromLibraryRequest802,com.microsoft.adcenter.v8.ApplicationToken applicationToken803,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId804,com.microsoft.adcenter.v8.CustomerId customerId805,com.microsoft.adcenter.v8.DeveloperToken developerToken806,com.microsoft.adcenter.v8.Password password807,com.microsoft.adcenter.v8.UserName userName808)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
              _operationClient.getOptions().setAction("DeleteTargetsFromLibrary");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetsFromLibraryRequest802,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetsFromLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetsFromLibrary"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken803!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken803 = toOM(applicationToken803, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementapplicationToken803,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId804!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId804 = toOM(customerAccountId804, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementcustomerAccountId804,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId805!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId805 = toOM(customerId805, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementcustomerId805,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken806!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken806 = toOM(developerToken806, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementdeveloperToken806,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password807!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword807 = toOM(password807, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementpassword807,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName808!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName808 = toOM(userName808, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementuserName808,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startdeleteTargetsFromLibrary
                    * @param deleteTargetsFromLibraryRequest802
                
                    * @param applicationToken803
                
                    * @param customerAccountId804
                
                    * @param customerId805
                
                    * @param developerToken806
                
                    * @param password807
                
                    * @param userName808
                
                */
                public  void startdeleteTargetsFromLibrary(

                 com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest deleteTargetsFromLibraryRequest802,com.microsoft.adcenter.v8.ApplicationToken applicationToken803,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId804,
                    com.microsoft.adcenter.v8.CustomerId customerId805,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken806,
                    com.microsoft.adcenter.v8.Password password807,
                    com.microsoft.adcenter.v8.UserName userName808,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[72].getName());
             _operationClient.getOptions().setAction("DeleteTargetsFromLibrary");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteTargetsFromLibraryRequest802,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetsFromLibrary")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "deleteTargetsFromLibrary"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken803!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken803 = toOM(applicationToken803, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementapplicationToken803,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId804!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId804 = toOM(customerAccountId804, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementcustomerAccountId804,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId805!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId805 = toOM(customerId805, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementcustomerId805,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken806!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken806 = toOM(developerToken806, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementdeveloperToken806,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password807!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword807 = toOM(password807, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementpassword807,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName808!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName808 = toOM(userName808, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "deleteTargetsFromLibrary")));
                                                    addHeader(omElementuserName808,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteTargetsFromLibrary(
                                        (com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteTargetsFromLibrary(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteTargetsFromLibrary"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetsFromLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteTargetsFromLibrary((com.microsoft.adcenter.v8.ICampaignManagementService_DeleteTargetsFromLibrary_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteTargetsFromLibrary(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteTargetsFromLibrary(f);
                                            }
									    } else {
										    callback.receiveErrordeleteTargetsFromLibrary(f);
									    }
									} else {
									    callback.receiveErrordeleteTargetsFromLibrary(f);
									}
								} else {
								    callback.receiveErrordeleteTargetsFromLibrary(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteTargetsFromLibrary(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[72].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[72].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#resumeAdGroups
                     * @param resumeAdGroupsRequest810
                    
                     * @param applicationToken811
                    
                     * @param customerAccountId812
                    
                     * @param customerId813
                    
                     * @param developerToken814
                    
                     * @param password815
                    
                     * @param userName816
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.ResumeAdGroupsResponse resumeAdGroups(

                            com.microsoft.adcenter.v8.ResumeAdGroupsRequest resumeAdGroupsRequest810,com.microsoft.adcenter.v8.ApplicationToken applicationToken811,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId812,com.microsoft.adcenter.v8.CustomerId customerId813,com.microsoft.adcenter.v8.DeveloperToken developerToken814,com.microsoft.adcenter.v8.Password password815,com.microsoft.adcenter.v8.UserName userName816)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
              _operationClient.getOptions().setAction("ResumeAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeAdGroupsRequest810,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken811!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken811 = toOM(applicationToken811, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementapplicationToken811,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId812!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId812 = toOM(customerAccountId812, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementcustomerAccountId812,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId813!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId813 = toOM(customerId813, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementcustomerId813,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken814!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken814 = toOM(developerToken814, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementdeveloperToken814,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password815!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword815 = toOM(password815, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementpassword815,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName816!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName816 = toOM(userName816, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementuserName816,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.ResumeAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.ResumeAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startresumeAdGroups
                    * @param resumeAdGroupsRequest810
                
                    * @param applicationToken811
                
                    * @param customerAccountId812
                
                    * @param customerId813
                
                    * @param developerToken814
                
                    * @param password815
                
                    * @param userName816
                
                */
                public  void startresumeAdGroups(

                 com.microsoft.adcenter.v8.ResumeAdGroupsRequest resumeAdGroupsRequest810,com.microsoft.adcenter.v8.ApplicationToken applicationToken811,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId812,
                    com.microsoft.adcenter.v8.CustomerId customerId813,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken814,
                    com.microsoft.adcenter.v8.Password password815,
                    com.microsoft.adcenter.v8.UserName userName816,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[73].getName());
             _operationClient.getOptions().setAction("ResumeAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeAdGroupsRequest810,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken811!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken811 = toOM(applicationToken811, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementapplicationToken811,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId812!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId812 = toOM(customerAccountId812, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementcustomerAccountId812,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId813!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId813 = toOM(customerId813, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementcustomerId813,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken814!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken814 = toOM(developerToken814, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementdeveloperToken814,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password815!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword815 = toOM(password815, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementpassword815,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName816!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName816 = toOM(userName816, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAdGroups")));
                                                    addHeader(omElementuserName816,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.ResumeAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultresumeAdGroups(
                                        (com.microsoft.adcenter.v8.ResumeAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorresumeAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorresumeAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrorresumeAdGroups(f);
									    }
									} else {
									    callback.receiveErrorresumeAdGroups(f);
									}
								} else {
								    callback.receiveErrorresumeAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorresumeAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[73].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[73].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getCampaignsByIds
                     * @param getCampaignsByIdsRequest818
                    
                     * @param applicationToken819
                    
                     * @param customerAccountId820
                    
                     * @param customerId821
                    
                     * @param developerToken822
                    
                     * @param password823
                    
                     * @param userName824
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetCampaignsByIdsResponse getCampaignsByIds(

                            com.microsoft.adcenter.v8.GetCampaignsByIdsRequest getCampaignsByIdsRequest818,com.microsoft.adcenter.v8.ApplicationToken applicationToken819,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId820,com.microsoft.adcenter.v8.CustomerId customerId821,com.microsoft.adcenter.v8.DeveloperToken developerToken822,com.microsoft.adcenter.v8.Password password823,com.microsoft.adcenter.v8.UserName userName824)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
              _operationClient.getOptions().setAction("GetCampaignsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignsByIdsRequest818,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken819!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken819 = toOM(applicationToken819, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementapplicationToken819,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId820!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId820 = toOM(customerAccountId820, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementcustomerAccountId820,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId821!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId821 = toOM(customerId821, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementcustomerId821,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken822!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken822 = toOM(developerToken822, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementdeveloperToken822,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password823!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword823 = toOM(password823, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementpassword823,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName824!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName824 = toOM(userName824, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementuserName824,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetCampaignsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetCampaignsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetCampaignsByIds
                    * @param getCampaignsByIdsRequest818
                
                    * @param applicationToken819
                
                    * @param customerAccountId820
                
                    * @param customerId821
                
                    * @param developerToken822
                
                    * @param password823
                
                    * @param userName824
                
                */
                public  void startgetCampaignsByIds(

                 com.microsoft.adcenter.v8.GetCampaignsByIdsRequest getCampaignsByIdsRequest818,com.microsoft.adcenter.v8.ApplicationToken applicationToken819,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId820,
                    com.microsoft.adcenter.v8.CustomerId customerId821,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken822,
                    com.microsoft.adcenter.v8.Password password823,
                    com.microsoft.adcenter.v8.UserName userName824,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[74].getName());
             _operationClient.getOptions().setAction("GetCampaignsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCampaignsByIdsRequest818,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getCampaignsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken819!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken819 = toOM(applicationToken819, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementapplicationToken819,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId820!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId820 = toOM(customerAccountId820, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementcustomerAccountId820,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId821!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId821 = toOM(customerId821, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementcustomerId821,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken822!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken822 = toOM(developerToken822, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementdeveloperToken822,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password823!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword823 = toOM(password823, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementpassword823,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName824!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName824 = toOM(userName824, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getCampaignsByIds")));
                                                    addHeader(omElementuserName824,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetCampaignsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCampaignsByIds(
                                        (com.microsoft.adcenter.v8.GetCampaignsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCampaignsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCampaignsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCampaignsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetCampaignsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCampaignsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCampaignsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetCampaignsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetCampaignsByIds(f);
									}
								} else {
								    callback.receiveErrorgetCampaignsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCampaignsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[74].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[74].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#resumeSitePlacements
                     * @param resumeSitePlacementsRequest826
                    
                     * @param applicationToken827
                    
                     * @param customerAccountId828
                    
                     * @param customerId829
                    
                     * @param developerToken830
                    
                     * @param password831
                    
                     * @param userName832
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.ResumeSitePlacementsResponse resumeSitePlacements(

                            com.microsoft.adcenter.v8.ResumeSitePlacementsRequest resumeSitePlacementsRequest826,com.microsoft.adcenter.v8.ApplicationToken applicationToken827,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId828,com.microsoft.adcenter.v8.CustomerId customerId829,com.microsoft.adcenter.v8.DeveloperToken developerToken830,com.microsoft.adcenter.v8.Password password831,com.microsoft.adcenter.v8.UserName userName832)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
              _operationClient.getOptions().setAction("ResumeSitePlacements");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeSitePlacementsRequest826,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeSitePlacements"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken827!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken827 = toOM(applicationToken827, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementapplicationToken827,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId828!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId828 = toOM(customerAccountId828, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementcustomerAccountId828,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId829!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId829 = toOM(customerId829, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementcustomerId829,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken830!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken830 = toOM(developerToken830, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementdeveloperToken830,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password831!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword831 = toOM(password831, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementpassword831,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName832!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName832 = toOM(userName832, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementuserName832,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.ResumeSitePlacementsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.ResumeSitePlacementsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startresumeSitePlacements
                    * @param resumeSitePlacementsRequest826
                
                    * @param applicationToken827
                
                    * @param customerAccountId828
                
                    * @param customerId829
                
                    * @param developerToken830
                
                    * @param password831
                
                    * @param userName832
                
                */
                public  void startresumeSitePlacements(

                 com.microsoft.adcenter.v8.ResumeSitePlacementsRequest resumeSitePlacementsRequest826,com.microsoft.adcenter.v8.ApplicationToken applicationToken827,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId828,
                    com.microsoft.adcenter.v8.CustomerId customerId829,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken830,
                    com.microsoft.adcenter.v8.Password password831,
                    com.microsoft.adcenter.v8.UserName userName832,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[75].getName());
             _operationClient.getOptions().setAction("ResumeSitePlacements");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeSitePlacementsRequest826,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeSitePlacements"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken827!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken827 = toOM(applicationToken827, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementapplicationToken827,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId828!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId828 = toOM(customerAccountId828, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementcustomerAccountId828,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId829!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId829 = toOM(customerId829, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementcustomerId829,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken830!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken830 = toOM(developerToken830, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementdeveloperToken830,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password831!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword831 = toOM(password831, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementpassword831,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName832!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName832 = toOM(userName832, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeSitePlacements")));
                                                    addHeader(omElementuserName832,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.ResumeSitePlacementsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultresumeSitePlacements(
                                        (com.microsoft.adcenter.v8.ResumeSitePlacementsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorresumeSitePlacements(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeSitePlacements"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeSitePlacements_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorresumeSitePlacements(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeSitePlacements(f);
                                            }
									    } else {
										    callback.receiveErrorresumeSitePlacements(f);
									    }
									} else {
									    callback.receiveErrorresumeSitePlacements(f);
									}
								} else {
								    callback.receiveErrorresumeSitePlacements(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorresumeSitePlacements(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[75].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[75].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getKeywordsByIds
                     * @param getKeywordsByIdsRequest834
                    
                     * @param applicationToken835
                    
                     * @param customerAccountId836
                    
                     * @param customerId837
                    
                     * @param developerToken838
                    
                     * @param password839
                    
                     * @param userName840
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetKeywordsByIdsResponse getKeywordsByIds(

                            com.microsoft.adcenter.v8.GetKeywordsByIdsRequest getKeywordsByIdsRequest834,com.microsoft.adcenter.v8.ApplicationToken applicationToken835,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId836,com.microsoft.adcenter.v8.CustomerId customerId837,com.microsoft.adcenter.v8.DeveloperToken developerToken838,com.microsoft.adcenter.v8.Password password839,com.microsoft.adcenter.v8.UserName userName840)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
              _operationClient.getOptions().setAction("GetKeywordsByIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByIdsRequest834,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken835!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken835 = toOM(applicationToken835, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementapplicationToken835,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId836!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId836 = toOM(customerAccountId836, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementcustomerAccountId836,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId837!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId837 = toOM(customerId837, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementcustomerId837,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken838!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken838 = toOM(developerToken838, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementdeveloperToken838,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password839!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword839 = toOM(password839, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementpassword839,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName840!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName840 = toOM(userName840, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementuserName840,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetKeywordsByIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetKeywordsByIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetKeywordsByIds
                    * @param getKeywordsByIdsRequest834
                
                    * @param applicationToken835
                
                    * @param customerAccountId836
                
                    * @param customerId837
                
                    * @param developerToken838
                
                    * @param password839
                
                    * @param userName840
                
                */
                public  void startgetKeywordsByIds(

                 com.microsoft.adcenter.v8.GetKeywordsByIdsRequest getKeywordsByIdsRequest834,com.microsoft.adcenter.v8.ApplicationToken applicationToken835,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId836,
                    com.microsoft.adcenter.v8.CustomerId customerId837,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken838,
                    com.microsoft.adcenter.v8.Password password839,
                    com.microsoft.adcenter.v8.UserName userName840,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[76].getName());
             _operationClient.getOptions().setAction("GetKeywordsByIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getKeywordsByIdsRequest834,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getKeywordsByIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken835!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken835 = toOM(applicationToken835, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementapplicationToken835,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId836!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId836 = toOM(customerAccountId836, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementcustomerAccountId836,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId837!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId837 = toOM(customerId837, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementcustomerId837,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken838!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken838 = toOM(developerToken838, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementdeveloperToken838,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password839!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword839 = toOM(password839, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementpassword839,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName840!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName840 = toOM(userName840, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getKeywordsByIds")));
                                                    addHeader(omElementuserName840,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetKeywordsByIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetKeywordsByIds(
                                        (com.microsoft.adcenter.v8.GetKeywordsByIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetKeywordsByIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetKeywordsByIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetKeywordsByIds((com.microsoft.adcenter.v8.ICampaignManagementService_GetKeywordsByIds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetKeywordsByIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetKeywordsByIds(f);
                                            }
									    } else {
										    callback.receiveErrorgetKeywordsByIds(f);
									    }
									} else {
									    callback.receiveErrorgetKeywordsByIds(f);
									}
								} else {
								    callback.receiveErrorgetKeywordsByIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetKeywordsByIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[76].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[76].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#resumeAds
                     * @param resumeAdsRequest842
                    
                     * @param applicationToken843
                    
                     * @param customerAccountId844
                    
                     * @param customerId845
                    
                     * @param developerToken846
                    
                     * @param password847
                    
                     * @param userName848
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.ResumeAdsResponse resumeAds(

                            com.microsoft.adcenter.v8.ResumeAdsRequest resumeAdsRequest842,com.microsoft.adcenter.v8.ApplicationToken applicationToken843,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId844,com.microsoft.adcenter.v8.CustomerId customerId845,com.microsoft.adcenter.v8.DeveloperToken developerToken846,com.microsoft.adcenter.v8.Password password847,com.microsoft.adcenter.v8.UserName userName848)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
              _operationClient.getOptions().setAction("ResumeAds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeAdsRequest842,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken843!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken843 = toOM(applicationToken843, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementapplicationToken843,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId844!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId844 = toOM(customerAccountId844, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementcustomerAccountId844,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId845!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId845 = toOM(customerId845, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementcustomerId845,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken846!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken846 = toOM(developerToken846, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementdeveloperToken846,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password847!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword847 = toOM(password847, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementpassword847,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName848!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName848 = toOM(userName848, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementuserName848,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.ResumeAdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.ResumeAdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startresumeAds
                    * @param resumeAdsRequest842
                
                    * @param applicationToken843
                
                    * @param customerAccountId844
                
                    * @param customerId845
                
                    * @param developerToken846
                
                    * @param password847
                
                    * @param userName848
                
                */
                public  void startresumeAds(

                 com.microsoft.adcenter.v8.ResumeAdsRequest resumeAdsRequest842,com.microsoft.adcenter.v8.ApplicationToken applicationToken843,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId844,
                    com.microsoft.adcenter.v8.CustomerId customerId845,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken846,
                    com.microsoft.adcenter.v8.Password password847,
                    com.microsoft.adcenter.v8.UserName userName848,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[77].getName());
             _operationClient.getOptions().setAction("ResumeAds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    resumeAdsRequest842,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "resumeAds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken843!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken843 = toOM(applicationToken843, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementapplicationToken843,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId844!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId844 = toOM(customerAccountId844, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementcustomerAccountId844,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId845!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId845 = toOM(customerId845, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementcustomerId845,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken846!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken846 = toOM(developerToken846, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementdeveloperToken846,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password847!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword847 = toOM(password847, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementpassword847,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName848!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName848 = toOM(userName848, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "resumeAds")));
                                                    addHeader(omElementuserName848,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.ResumeAdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultresumeAds(
                                        (com.microsoft.adcenter.v8.ResumeAdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorresumeAds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"ResumeAds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeAds((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorresumeAds((com.microsoft.adcenter.v8.ICampaignManagementService_ResumeAds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorresumeAds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorresumeAds(f);
                                            }
									    } else {
										    callback.receiveErrorresumeAds(f);
									    }
									} else {
									    callback.receiveErrorresumeAds(f);
									}
								} else {
								    callback.receiveErrorresumeAds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorresumeAds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[77].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[77].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addAdExtensions
                     * @param addAdExtensionsRequest850
                    
                     * @param applicationToken851
                    
                     * @param customerAccountId852
                    
                     * @param customerId853
                    
                     * @param developerToken854
                    
                     * @param password855
                    
                     * @param userName856
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddAdExtensionsResponse addAdExtensions(

                            com.microsoft.adcenter.v8.AddAdExtensionsRequest addAdExtensionsRequest850,com.microsoft.adcenter.v8.ApplicationToken applicationToken851,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId852,com.microsoft.adcenter.v8.CustomerId customerId853,com.microsoft.adcenter.v8.DeveloperToken developerToken854,com.microsoft.adcenter.v8.Password password855,com.microsoft.adcenter.v8.UserName userName856)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
              _operationClient.getOptions().setAction("AddAdExtensions");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdExtensionsRequest850,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdExtensions"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken851!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken851 = toOM(applicationToken851, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementapplicationToken851,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId852!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId852 = toOM(customerAccountId852, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementcustomerAccountId852,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId853!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId853 = toOM(customerId853, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementcustomerId853,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken854!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken854 = toOM(developerToken854, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementdeveloperToken854,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password855!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword855 = toOM(password855, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementpassword855,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName856!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName856 = toOM(userName856, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementuserName856,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddAdExtensionsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddAdExtensionsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddAdExtensions
                    * @param addAdExtensionsRequest850
                
                    * @param applicationToken851
                
                    * @param customerAccountId852
                
                    * @param customerId853
                
                    * @param developerToken854
                
                    * @param password855
                
                    * @param userName856
                
                */
                public  void startaddAdExtensions(

                 com.microsoft.adcenter.v8.AddAdExtensionsRequest addAdExtensionsRequest850,com.microsoft.adcenter.v8.ApplicationToken applicationToken851,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId852,
                    com.microsoft.adcenter.v8.CustomerId customerId853,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken854,
                    com.microsoft.adcenter.v8.Password password855,
                    com.microsoft.adcenter.v8.UserName userName856,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[78].getName());
             _operationClient.getOptions().setAction("AddAdExtensions");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAdExtensionsRequest850,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdExtensions")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addAdExtensions"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken851!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken851 = toOM(applicationToken851, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementapplicationToken851,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId852!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId852 = toOM(customerAccountId852, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementcustomerAccountId852,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId853!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId853 = toOM(customerId853, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementcustomerId853,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken854!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken854 = toOM(developerToken854, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementdeveloperToken854,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password855!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword855 = toOM(password855, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementpassword855,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName856!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName856 = toOM(userName856, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addAdExtensions")));
                                                    addHeader(omElementuserName856,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddAdExtensionsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddAdExtensions(
                                        (com.microsoft.adcenter.v8.AddAdExtensionsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddAdExtensions(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAdExtensions"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAdExtensions((com.microsoft.adcenter.v8.ICampaignManagementService_AddAdExtensions_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddAdExtensions(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAdExtensions(f);
                                            }
									    } else {
										    callback.receiveErroraddAdExtensions(f);
									    }
									} else {
									    callback.receiveErroraddAdExtensions(f);
									}
								} else {
								    callback.receiveErroraddAdExtensions(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddAdExtensions(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[78].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[78].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateSitePlacements
                     * @param updateSitePlacementsRequest858
                    
                     * @param applicationToken859
                    
                     * @param customerAccountId860
                    
                     * @param customerId861
                    
                     * @param developerToken862
                    
                     * @param password863
                    
                     * @param userName864
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateSitePlacementsResponse updateSitePlacements(

                            com.microsoft.adcenter.v8.UpdateSitePlacementsRequest updateSitePlacementsRequest858,com.microsoft.adcenter.v8.ApplicationToken applicationToken859,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId860,com.microsoft.adcenter.v8.CustomerId customerId861,com.microsoft.adcenter.v8.DeveloperToken developerToken862,com.microsoft.adcenter.v8.Password password863,com.microsoft.adcenter.v8.UserName userName864)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
              _operationClient.getOptions().setAction("UpdateSitePlacements");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateSitePlacementsRequest858,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateSitePlacements"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken859!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken859 = toOM(applicationToken859, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementapplicationToken859,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId860!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId860 = toOM(customerAccountId860, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementcustomerAccountId860,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId861!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId861 = toOM(customerId861, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementcustomerId861,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken862!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken862 = toOM(developerToken862, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementdeveloperToken862,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password863!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword863 = toOM(password863, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementpassword863,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName864!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName864 = toOM(userName864, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementuserName864,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateSitePlacementsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateSitePlacementsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateSitePlacements
                    * @param updateSitePlacementsRequest858
                
                    * @param applicationToken859
                
                    * @param customerAccountId860
                
                    * @param customerId861
                
                    * @param developerToken862
                
                    * @param password863
                
                    * @param userName864
                
                */
                public  void startupdateSitePlacements(

                 com.microsoft.adcenter.v8.UpdateSitePlacementsRequest updateSitePlacementsRequest858,com.microsoft.adcenter.v8.ApplicationToken applicationToken859,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId860,
                    com.microsoft.adcenter.v8.CustomerId customerId861,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken862,
                    com.microsoft.adcenter.v8.Password password863,
                    com.microsoft.adcenter.v8.UserName userName864,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[79].getName());
             _operationClient.getOptions().setAction("UpdateSitePlacements");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateSitePlacementsRequest858,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateSitePlacements"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken859!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken859 = toOM(applicationToken859, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementapplicationToken859,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId860!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId860 = toOM(customerAccountId860, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementcustomerAccountId860,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId861!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId861 = toOM(customerId861, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementcustomerId861,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken862!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken862 = toOM(developerToken862, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementdeveloperToken862,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password863!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword863 = toOM(password863, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementpassword863,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName864!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName864 = toOM(userName864, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateSitePlacements")));
                                                    addHeader(omElementuserName864,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateSitePlacementsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateSitePlacements(
                                        (com.microsoft.adcenter.v8.UpdateSitePlacementsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateSitePlacements(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateSitePlacements"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateSitePlacements_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateSitePlacements(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateSitePlacements(f);
                                            }
									    } else {
										    callback.receiveErrorupdateSitePlacements(f);
									    }
									} else {
									    callback.receiveErrorupdateSitePlacements(f);
									}
								} else {
								    callback.receiveErrorupdateSitePlacements(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateSitePlacements(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[79].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[79].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getPlacementDetailsForUrls
                     * @param getPlacementDetailsForUrlsRequest866
                    
                     * @param applicationToken867
                    
                     * @param customerAccountId868
                    
                     * @param customerId869
                    
                     * @param developerToken870
                    
                     * @param password871
                    
                     * @param userName872
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse getPlacementDetailsForUrls(

                            com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest getPlacementDetailsForUrlsRequest866,com.microsoft.adcenter.v8.ApplicationToken applicationToken867,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId868,com.microsoft.adcenter.v8.CustomerId customerId869,com.microsoft.adcenter.v8.DeveloperToken developerToken870,com.microsoft.adcenter.v8.Password password871,com.microsoft.adcenter.v8.UserName userName872)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
              _operationClient.getOptions().setAction("GetPlacementDetailsForUrls");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlacementDetailsForUrlsRequest866,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getPlacementDetailsForUrls")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getPlacementDetailsForUrls"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken867!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken867 = toOM(applicationToken867, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementapplicationToken867,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId868!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId868 = toOM(customerAccountId868, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementcustomerAccountId868,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId869!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId869 = toOM(customerId869, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementcustomerId869,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken870!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken870 = toOM(developerToken870, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementdeveloperToken870,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password871!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword871 = toOM(password871, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementpassword871,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName872!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName872 = toOM(userName872, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementuserName872,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetPlacementDetailsForUrls
                    * @param getPlacementDetailsForUrlsRequest866
                
                    * @param applicationToken867
                
                    * @param customerAccountId868
                
                    * @param customerId869
                
                    * @param developerToken870
                
                    * @param password871
                
                    * @param userName872
                
                */
                public  void startgetPlacementDetailsForUrls(

                 com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest getPlacementDetailsForUrlsRequest866,com.microsoft.adcenter.v8.ApplicationToken applicationToken867,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId868,
                    com.microsoft.adcenter.v8.CustomerId customerId869,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken870,
                    com.microsoft.adcenter.v8.Password password871,
                    com.microsoft.adcenter.v8.UserName userName872,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[80].getName());
             _operationClient.getOptions().setAction("GetPlacementDetailsForUrls");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPlacementDetailsForUrlsRequest866,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getPlacementDetailsForUrls")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getPlacementDetailsForUrls"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken867!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken867 = toOM(applicationToken867, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementapplicationToken867,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId868!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId868 = toOM(customerAccountId868, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementcustomerAccountId868,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId869!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId869 = toOM(customerId869, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementcustomerId869,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken870!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken870 = toOM(developerToken870, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementdeveloperToken870,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password871!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword871 = toOM(password871, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementpassword871,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName872!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName872 = toOM(userName872, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getPlacementDetailsForUrls")));
                                                    addHeader(omElementuserName872,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPlacementDetailsForUrls(
                                        (com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPlacementDetailsForUrls(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPlacementDetailsForUrls"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetPlacementDetailsForUrls((com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetPlacementDetailsForUrls((com.microsoft.adcenter.v8.ICampaignManagementService_GetPlacementDetailsForUrls_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetPlacementDetailsForUrls(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPlacementDetailsForUrls(f);
                                            }
									    } else {
										    callback.receiveErrorgetPlacementDetailsForUrls(f);
									    }
									} else {
									    callback.receiveErrorgetPlacementDetailsForUrls(f);
									}
								} else {
								    callback.receiveErrorgetPlacementDetailsForUrls(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPlacementDetailsForUrls(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[80].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[80].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#pauseAds
                     * @param pauseAdsRequest874
                    
                     * @param applicationToken875
                    
                     * @param customerAccountId876
                    
                     * @param customerId877
                    
                     * @param developerToken878
                    
                     * @param password879
                    
                     * @param userName880
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.PauseAdsResponse pauseAds(

                            com.microsoft.adcenter.v8.PauseAdsRequest pauseAdsRequest874,com.microsoft.adcenter.v8.ApplicationToken applicationToken875,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId876,com.microsoft.adcenter.v8.CustomerId customerId877,com.microsoft.adcenter.v8.DeveloperToken developerToken878,com.microsoft.adcenter.v8.Password password879,com.microsoft.adcenter.v8.UserName userName880)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
              _operationClient.getOptions().setAction("PauseAds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseAdsRequest874,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken875!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken875 = toOM(applicationToken875, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementapplicationToken875,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId876!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId876 = toOM(customerAccountId876, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementcustomerAccountId876,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId877!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId877 = toOM(customerId877, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementcustomerId877,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken878!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken878 = toOM(developerToken878, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementdeveloperToken878,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password879!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword879 = toOM(password879, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementpassword879,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName880!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName880 = toOM(userName880, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementuserName880,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.PauseAdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.PauseAdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startpauseAds
                    * @param pauseAdsRequest874
                
                    * @param applicationToken875
                
                    * @param customerAccountId876
                
                    * @param customerId877
                
                    * @param developerToken878
                
                    * @param password879
                
                    * @param userName880
                
                */
                public  void startpauseAds(

                 com.microsoft.adcenter.v8.PauseAdsRequest pauseAdsRequest874,com.microsoft.adcenter.v8.ApplicationToken applicationToken875,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId876,
                    com.microsoft.adcenter.v8.CustomerId customerId877,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken878,
                    com.microsoft.adcenter.v8.Password password879,
                    com.microsoft.adcenter.v8.UserName userName880,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[81].getName());
             _operationClient.getOptions().setAction("PauseAds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    pauseAdsRequest874,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "pauseAds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken875!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken875 = toOM(applicationToken875, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementapplicationToken875,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId876!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId876 = toOM(customerAccountId876, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementcustomerAccountId876,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId877!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId877 = toOM(customerId877, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementcustomerId877,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken878!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken878 = toOM(developerToken878, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementdeveloperToken878,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password879!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword879 = toOM(password879, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementpassword879,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName880!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName880 = toOM(userName880, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "pauseAds")));
                                                    addHeader(omElementuserName880,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.PauseAdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultpauseAds(
                                        (com.microsoft.adcenter.v8.PauseAdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorpauseAds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"PauseAds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseAds((com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorpauseAds((com.microsoft.adcenter.v8.ICampaignManagementService_PauseAds_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorpauseAds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorpauseAds(f);
                                            }
									    } else {
										    callback.receiveErrorpauseAds(f);
									    }
									} else {
									    callback.receiveErrorpauseAds(f);
									}
								} else {
								    callback.receiveErrorpauseAds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorpauseAds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[81].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[81].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getSitePlacementsByAdGroupId
                     * @param getSitePlacementsByAdGroupIdRequest882
                    
                     * @param applicationToken883
                    
                     * @param customerAccountId884
                    
                     * @param customerId885
                    
                     * @param developerToken886
                    
                     * @param password887
                    
                     * @param userName888
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse getSitePlacementsByAdGroupId(

                            com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest getSitePlacementsByAdGroupIdRequest882,com.microsoft.adcenter.v8.ApplicationToken applicationToken883,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId884,com.microsoft.adcenter.v8.CustomerId customerId885,com.microsoft.adcenter.v8.DeveloperToken developerToken886,com.microsoft.adcenter.v8.Password password887,com.microsoft.adcenter.v8.UserName userName888)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
              _operationClient.getOptions().setAction("GetSitePlacementsByAdGroupId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getSitePlacementsByAdGroupIdRequest882,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByAdGroupId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken883!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken883 = toOM(applicationToken883, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementapplicationToken883,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId884!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId884 = toOM(customerAccountId884, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId884,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId885!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId885 = toOM(customerId885, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementcustomerId885,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken886!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken886 = toOM(developerToken886, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken886,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password887!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword887 = toOM(password887, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementpassword887,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName888!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName888 = toOM(userName888, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementuserName888,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetSitePlacementsByAdGroupId
                    * @param getSitePlacementsByAdGroupIdRequest882
                
                    * @param applicationToken883
                
                    * @param customerAccountId884
                
                    * @param customerId885
                
                    * @param developerToken886
                
                    * @param password887
                
                    * @param userName888
                
                */
                public  void startgetSitePlacementsByAdGroupId(

                 com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest getSitePlacementsByAdGroupIdRequest882,com.microsoft.adcenter.v8.ApplicationToken applicationToken883,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId884,
                    com.microsoft.adcenter.v8.CustomerId customerId885,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken886,
                    com.microsoft.adcenter.v8.Password password887,
                    com.microsoft.adcenter.v8.UserName userName888,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[82].getName());
             _operationClient.getOptions().setAction("GetSitePlacementsByAdGroupId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getSitePlacementsByAdGroupIdRequest882,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByAdGroupId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getSitePlacementsByAdGroupId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken883!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken883 = toOM(applicationToken883, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementapplicationToken883,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId884!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId884 = toOM(customerAccountId884, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementcustomerAccountId884,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId885!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId885 = toOM(customerId885, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementcustomerId885,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken886!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken886 = toOM(developerToken886, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementdeveloperToken886,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password887!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword887 = toOM(password887, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementpassword887,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName888!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName888 = toOM(userName888, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getSitePlacementsByAdGroupId")));
                                                    addHeader(omElementuserName888,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetSitePlacementsByAdGroupId(
                                        (com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetSitePlacementsByAdGroupId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetSitePlacementsByAdGroupId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetSitePlacementsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetSitePlacementsByAdGroupId((com.microsoft.adcenter.v8.ICampaignManagementService_GetSitePlacementsByAdGroupId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetSitePlacementsByAdGroupId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetSitePlacementsByAdGroupId(f);
                                            }
									    } else {
										    callback.receiveErrorgetSitePlacementsByAdGroupId(f);
									    }
									} else {
									    callback.receiveErrorgetSitePlacementsByAdGroupId(f);
									}
								} else {
								    callback.receiveErrorgetSitePlacementsByAdGroupId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetSitePlacementsByAdGroupId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[82].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[82].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateBusinesses
                     * @param updateBusinessesRequest890
                    
                     * @param applicationToken891
                    
                     * @param customerAccountId892
                    
                     * @param customerId893
                    
                     * @param developerToken894
                    
                     * @param password895
                    
                     * @param userName896
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateBusinessesResponse updateBusinesses(

                            com.microsoft.adcenter.v8.UpdateBusinessesRequest updateBusinessesRequest890,com.microsoft.adcenter.v8.ApplicationToken applicationToken891,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId892,com.microsoft.adcenter.v8.CustomerId customerId893,com.microsoft.adcenter.v8.DeveloperToken developerToken894,com.microsoft.adcenter.v8.Password password895,com.microsoft.adcenter.v8.UserName userName896)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
              _operationClient.getOptions().setAction("UpdateBusinesses");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateBusinessesRequest890,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateBusinesses"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken891!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken891 = toOM(applicationToken891, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementapplicationToken891,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId892!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId892 = toOM(customerAccountId892, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementcustomerAccountId892,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId893!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId893 = toOM(customerId893, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementcustomerId893,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken894!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken894 = toOM(developerToken894, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementdeveloperToken894,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password895!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword895 = toOM(password895, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementpassword895,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName896!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName896 = toOM(userName896, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementuserName896,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateBusinessesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateBusinessesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateBusinesses
                    * @param updateBusinessesRequest890
                
                    * @param applicationToken891
                
                    * @param customerAccountId892
                
                    * @param customerId893
                
                    * @param developerToken894
                
                    * @param password895
                
                    * @param userName896
                
                */
                public  void startupdateBusinesses(

                 com.microsoft.adcenter.v8.UpdateBusinessesRequest updateBusinessesRequest890,com.microsoft.adcenter.v8.ApplicationToken applicationToken891,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId892,
                    com.microsoft.adcenter.v8.CustomerId customerId893,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken894,
                    com.microsoft.adcenter.v8.Password password895,
                    com.microsoft.adcenter.v8.UserName userName896,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[83].getName());
             _operationClient.getOptions().setAction("UpdateBusinesses");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateBusinessesRequest890,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateBusinesses")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateBusinesses"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken891!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken891 = toOM(applicationToken891, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementapplicationToken891,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId892!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId892 = toOM(customerAccountId892, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementcustomerAccountId892,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId893!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId893 = toOM(customerId893, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementcustomerId893,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken894!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken894 = toOM(developerToken894, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementdeveloperToken894,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password895!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword895 = toOM(password895, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementpassword895,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName896!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName896 = toOM(userName896, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateBusinesses")));
                                                    addHeader(omElementuserName896,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateBusinessesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateBusinesses(
                                        (com.microsoft.adcenter.v8.UpdateBusinessesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateBusinesses(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateBusinesses"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateBusinesses((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateBusinesses_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateBusinesses(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateBusinesses(f);
                                            }
									    } else {
										    callback.receiveErrorupdateBusinesses(f);
									    }
									} else {
									    callback.receiveErrorupdateBusinesses(f);
									}
								} else {
								    callback.receiveErrorupdateBusinesses(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateBusinesses(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[83].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[83].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#addSitePlacements
                     * @param addSitePlacementsRequest898
                    
                     * @param applicationToken899
                    
                     * @param customerAccountId900
                    
                     * @param customerId901
                    
                     * @param developerToken902
                    
                     * @param password903
                    
                     * @param userName904
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.AddSitePlacementsResponse addSitePlacements(

                            com.microsoft.adcenter.v8.AddSitePlacementsRequest addSitePlacementsRequest898,com.microsoft.adcenter.v8.ApplicationToken applicationToken899,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId900,com.microsoft.adcenter.v8.CustomerId customerId901,com.microsoft.adcenter.v8.DeveloperToken developerToken902,com.microsoft.adcenter.v8.Password password903,com.microsoft.adcenter.v8.UserName userName904)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
              _operationClient.getOptions().setAction("AddSitePlacements");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addSitePlacementsRequest898,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addSitePlacements"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken899!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken899 = toOM(applicationToken899, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementapplicationToken899,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId900!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId900 = toOM(customerAccountId900, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementcustomerAccountId900,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId901!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId901 = toOM(customerId901, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementcustomerId901,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken902!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken902 = toOM(developerToken902, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementdeveloperToken902,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password903!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword903 = toOM(password903, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementpassword903,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName904!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName904 = toOM(userName904, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementuserName904,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.AddSitePlacementsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.AddSitePlacementsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startaddSitePlacements
                    * @param addSitePlacementsRequest898
                
                    * @param applicationToken899
                
                    * @param customerAccountId900
                
                    * @param customerId901
                
                    * @param developerToken902
                
                    * @param password903
                
                    * @param userName904
                
                */
                public  void startaddSitePlacements(

                 com.microsoft.adcenter.v8.AddSitePlacementsRequest addSitePlacementsRequest898,com.microsoft.adcenter.v8.ApplicationToken applicationToken899,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId900,
                    com.microsoft.adcenter.v8.CustomerId customerId901,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken902,
                    com.microsoft.adcenter.v8.Password password903,
                    com.microsoft.adcenter.v8.UserName userName904,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[84].getName());
             _operationClient.getOptions().setAction("AddSitePlacements");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addSitePlacementsRequest898,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addSitePlacements")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "addSitePlacements"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken899!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken899 = toOM(applicationToken899, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementapplicationToken899,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId900!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId900 = toOM(customerAccountId900, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementcustomerAccountId900,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId901!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId901 = toOM(customerId901, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementcustomerId901,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken902!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken902 = toOM(developerToken902, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementdeveloperToken902,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password903!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword903 = toOM(password903, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementpassword903,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName904!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName904 = toOM(userName904, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "addSitePlacements")));
                                                    addHeader(omElementuserName904,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.AddSitePlacementsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddSitePlacements(
                                        (com.microsoft.adcenter.v8.AddSitePlacementsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddSitePlacements(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddSitePlacements"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddSitePlacements((com.microsoft.adcenter.v8.ICampaignManagementService_AddSitePlacements_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddSitePlacements(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddSitePlacements(f);
                                            }
									    } else {
										    callback.receiveErroraddSitePlacements(f);
									    }
									} else {
									    callback.receiveErroraddSitePlacements(f);
									}
								} else {
								    callback.receiveErroraddSitePlacements(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddSitePlacements(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[84].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[84].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getAdGroupsByCampaignId
                     * @param getAdGroupsByCampaignIdRequest906
                    
                     * @param applicationToken907
                    
                     * @param customerAccountId908
                    
                     * @param customerId909
                    
                     * @param developerToken910
                    
                     * @param password911
                    
                     * @param userName912
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse getAdGroupsByCampaignId(

                            com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest getAdGroupsByCampaignIdRequest906,com.microsoft.adcenter.v8.ApplicationToken applicationToken907,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId908,com.microsoft.adcenter.v8.CustomerId customerId909,com.microsoft.adcenter.v8.DeveloperToken developerToken910,com.microsoft.adcenter.v8.Password password911,com.microsoft.adcenter.v8.UserName userName912)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
              _operationClient.getOptions().setAction("GetAdGroupsByCampaignId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdGroupsByCampaignIdRequest906,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByCampaignId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByCampaignId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken907!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken907 = toOM(applicationToken907, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementapplicationToken907,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId908!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId908 = toOM(customerAccountId908, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementcustomerAccountId908,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId909!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId909 = toOM(customerId909, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementcustomerId909,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken910!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken910 = toOM(developerToken910, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementdeveloperToken910,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password911!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword911 = toOM(password911, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementpassword911,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName912!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName912 = toOM(userName912, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementuserName912,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetAdGroupsByCampaignId
                    * @param getAdGroupsByCampaignIdRequest906
                
                    * @param applicationToken907
                
                    * @param customerAccountId908
                
                    * @param customerId909
                
                    * @param developerToken910
                
                    * @param password911
                
                    * @param userName912
                
                */
                public  void startgetAdGroupsByCampaignId(

                 com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest getAdGroupsByCampaignIdRequest906,com.microsoft.adcenter.v8.ApplicationToken applicationToken907,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId908,
                    com.microsoft.adcenter.v8.CustomerId customerId909,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken910,
                    com.microsoft.adcenter.v8.Password password911,
                    com.microsoft.adcenter.v8.UserName userName912,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[85].getName());
             _operationClient.getOptions().setAction("GetAdGroupsByCampaignId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAdGroupsByCampaignIdRequest906,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByCampaignId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getAdGroupsByCampaignId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken907!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken907 = toOM(applicationToken907, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementapplicationToken907,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId908!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId908 = toOM(customerAccountId908, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementcustomerAccountId908,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId909!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId909 = toOM(customerId909, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementcustomerId909,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken910!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken910 = toOM(developerToken910, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementdeveloperToken910,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password911!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword911 = toOM(password911, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementpassword911,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName912!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName912 = toOM(userName912, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getAdGroupsByCampaignId")));
                                                    addHeader(omElementuserName912,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAdGroupsByCampaignId(
                                        (com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAdGroupsByCampaignId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAdGroupsByCampaignId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdGroupsByCampaignId((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAdGroupsByCampaignId((com.microsoft.adcenter.v8.ICampaignManagementService_GetAdGroupsByCampaignId_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAdGroupsByCampaignId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAdGroupsByCampaignId(f);
                                            }
									    } else {
										    callback.receiveErrorgetAdGroupsByCampaignId(f);
									    }
									} else {
									    callback.receiveErrorgetAdGroupsByCampaignId(f);
									}
								} else {
								    callback.receiveErrorgetAdGroupsByCampaignId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAdGroupsByCampaignId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[85].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[85].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#getBusinessesInfo
                     * @param getBusinessesInfoRequest914
                    
                     * @param applicationToken915
                    
                     * @param customerAccountId916
                    
                     * @param customerId917
                    
                     * @param developerToken918
                    
                     * @param password919
                    
                     * @param userName920
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.GetBusinessesInfoResponse getBusinessesInfo(

                            com.microsoft.adcenter.v8.GetBusinessesInfoRequest getBusinessesInfoRequest914,com.microsoft.adcenter.v8.ApplicationToken applicationToken915,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId916,com.microsoft.adcenter.v8.CustomerId customerId917,com.microsoft.adcenter.v8.DeveloperToken developerToken918,com.microsoft.adcenter.v8.Password password919,com.microsoft.adcenter.v8.UserName userName920)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
              _operationClient.getOptions().setAction("GetBusinessesInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getBusinessesInfoRequest914,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken915!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken915 = toOM(applicationToken915, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementapplicationToken915,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId916!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId916 = toOM(customerAccountId916, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementcustomerAccountId916,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId917!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId917 = toOM(customerId917, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementcustomerId917,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken918!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken918 = toOM(developerToken918, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementdeveloperToken918,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password919!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword919 = toOM(password919, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementpassword919,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName920!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName920 = toOM(userName920, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementuserName920,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.GetBusinessesInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.GetBusinessesInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startgetBusinessesInfo
                    * @param getBusinessesInfoRequest914
                
                    * @param applicationToken915
                
                    * @param customerAccountId916
                
                    * @param customerId917
                
                    * @param developerToken918
                
                    * @param password919
                
                    * @param userName920
                
                */
                public  void startgetBusinessesInfo(

                 com.microsoft.adcenter.v8.GetBusinessesInfoRequest getBusinessesInfoRequest914,com.microsoft.adcenter.v8.ApplicationToken applicationToken915,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId916,
                    com.microsoft.adcenter.v8.CustomerId customerId917,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken918,
                    com.microsoft.adcenter.v8.Password password919,
                    com.microsoft.adcenter.v8.UserName userName920,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[86].getName());
             _operationClient.getOptions().setAction("GetBusinessesInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getBusinessesInfoRequest914,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "getBusinessesInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken915!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken915 = toOM(applicationToken915, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementapplicationToken915,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId916!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId916 = toOM(customerAccountId916, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementcustomerAccountId916,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId917!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId917 = toOM(customerId917, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementcustomerId917,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken918!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken918 = toOM(developerToken918, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementdeveloperToken918,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password919!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword919 = toOM(password919, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementpassword919,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName920!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName920 = toOM(userName920, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "getBusinessesInfo")));
                                                    addHeader(omElementuserName920,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.GetBusinessesInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetBusinessesInfo(
                                        (com.microsoft.adcenter.v8.GetBusinessesInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetBusinessesInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetBusinessesInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetBusinessesInfo((com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetBusinessesInfo((com.microsoft.adcenter.v8.ICampaignManagementService_GetBusinessesInfo_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetBusinessesInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetBusinessesInfo(f);
                                            }
									    } else {
										    callback.receiveErrorgetBusinessesInfo(f);
									    }
									} else {
									    callback.receiveErrorgetBusinessesInfo(f);
									}
								} else {
								    callback.receiveErrorgetBusinessesInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetBusinessesInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[86].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[86].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.v8.CampaignManagementService#updateAdGroups
                     * @param updateAdGroupsRequest922
                    
                     * @param applicationToken923
                    
                     * @param customerAccountId924
                    
                     * @param customerId925
                    
                     * @param developerToken926
                    
                     * @param password927
                    
                     * @param userName928
                    
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.v8.UpdateAdGroupsResponse updateAdGroups(

                            com.microsoft.adcenter.v8.UpdateAdGroupsRequest updateAdGroupsRequest922,com.microsoft.adcenter.v8.ApplicationToken applicationToken923,com.microsoft.adcenter.v8.CustomerAccountId customerAccountId924,com.microsoft.adcenter.v8.CustomerId customerId925,com.microsoft.adcenter.v8.DeveloperToken developerToken926,com.microsoft.adcenter.v8.Password password927,com.microsoft.adcenter.v8.UserName userName928)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
              _operationClient.getOptions().setAction("UpdateAdGroups");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAdGroupsRequest922,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAdGroups"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken923!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken923 = toOM(applicationToken923, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementapplicationToken923,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerAccountId924!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId924 = toOM(customerAccountId924, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementcustomerAccountId924,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (customerId925!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementcustomerId925 = toOM(customerId925, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementcustomerId925,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken926!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken926 = toOM(developerToken926, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementdeveloperToken926,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password927!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword927 = toOM(password927, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementpassword927,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName928!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName928 = toOM(userName928, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementuserName928,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.v8.UpdateAdGroupsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.v8.UpdateAdGroupsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.v8.CampaignManagementService#startupdateAdGroups
                    * @param updateAdGroupsRequest922
                
                    * @param applicationToken923
                
                    * @param customerAccountId924
                
                    * @param customerId925
                
                    * @param developerToken926
                
                    * @param password927
                
                    * @param userName928
                
                */
                public  void startupdateAdGroups(

                 com.microsoft.adcenter.v8.UpdateAdGroupsRequest updateAdGroupsRequest922,com.microsoft.adcenter.v8.ApplicationToken applicationToken923,
                    com.microsoft.adcenter.v8.CustomerAccountId customerAccountId924,
                    com.microsoft.adcenter.v8.CustomerId customerId925,
                    com.microsoft.adcenter.v8.DeveloperToken developerToken926,
                    com.microsoft.adcenter.v8.Password password927,
                    com.microsoft.adcenter.v8.UserName userName928,
                    

                  final com.microsoft.adcenter.v8.CampaignManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[87].getName());
             _operationClient.getOptions().setAction("UpdateAdGroups");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAdGroupsRequest922,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAdGroups")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8",
                                                    "updateAdGroups"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken923!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken923 = toOM(applicationToken923, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementapplicationToken923,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerAccountId924!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerAccountId924 = toOM(customerAccountId924, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementcustomerAccountId924,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (customerId925!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementcustomerId925 = toOM(customerId925, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementcustomerId925,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken926!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken926 = toOM(developerToken926, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementdeveloperToken926,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password927!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword927 = toOM(password927, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementpassword927,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName928!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName928 = toOM(userName928, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/v8", "updateAdGroups")));
                                                    addHeader(omElementuserName928,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.v8.UpdateAdGroupsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateAdGroups(
                                        (com.microsoft.adcenter.v8.UpdateAdGroupsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateAdGroups(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAdGroups"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateAdGroups((com.microsoft.adcenter.v8.ICampaignManagementService_UpdateAdGroups_ApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateAdGroups(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAdGroups(f);
                                            }
									    } else {
										    callback.receiveErrorupdateAdGroups(f);
									    }
									} else {
									    callback.receiveErrorupdateAdGroups(f);
									}
								} else {
								    callback.receiveErrorupdateAdGroups(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateAdGroups(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[87].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[87].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    ////////////////////////////////////////////////////////////////////////
    
    private static org.apache.neethi.Policy getPolicy (java.lang.String policyString) {
    	return org.apache.neethi.PolicyEngine.getPolicy(org.apache.axiom.om.OMXMLBuilderFactory.createOMBuilder(
    	        new java.io.StringReader(policyString)).getDocument().getXMLStreamReader(false));
    }
    
    /////////////////////////////////////////////////////////////////////////

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //https://adcenterapi.microsoft.com/Api/Advertiser/V8/CampaignManagement/CampaignManagementService.svc
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adapi.AdApiFaultDetailE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adapi.AdApiFaultDetailE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ApiFaultDetailE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ApiFaultDetailE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ApplicationToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ApplicationToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.CustomerAccountId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.CustomerAccountId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.CustomerId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.CustomerId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeveloperToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeveloperToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.Password param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.Password.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UserName param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UserName.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.TrackingId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.TrackingId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteKeywordsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteKeywordsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteKeywordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteKeywordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateGoalsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateGoalsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateGoalsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateGoalsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateTargetRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateTargetResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNormalizedStringsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNormalizedStringsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNormalizedStringsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNormalizedStringsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteSitePlacementsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteSitePlacementsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteSitePlacementsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteSitePlacementsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetTargetToAdGroupRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetTargetToAdGroupRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetTargetToAdGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetTargetToAdGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseSitePlacementsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseSitePlacementsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseSitePlacementsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseSitePlacementsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddBusinessesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddBusinessesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddBusinessesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddBusinessesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeKeywordsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeKeywordsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeKeywordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeKeywordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddGoalsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddGoalsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddGoalsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddGoalsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetDownloadStatusRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetDownloadStatusRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetDownloadStatusResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetDownloadStatusResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetTargetToCampaignRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetTargetToCampaignRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetTargetToCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetTargetToCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteBusinessesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteBusinessesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteBusinessesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteBusinessesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetAnalyticsTypeRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetAnalyticsTypeRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetAnalyticsTypeResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetAnalyticsTypeResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.EditorialApiFaultDetailE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.EditorialApiFaultDetailE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetGoalsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetGoalsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetGoalsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetGoalsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddTargetRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddTargetRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddTargetResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddTargetResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddTargetsToLibraryRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddTargetsToLibraryRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddTargetsToLibraryResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddTargetsToLibraryResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAnalyticsTypeRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAnalyticsTypeRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAnalyticsTypeResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAnalyticsTypeResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetBusinessesByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetBusinessesByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateAdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateAdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateAdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateAdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteGoalsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteGoalsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteGoalsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteGoalsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseKeywordsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseKeywordsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseKeywordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseKeywordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateKeywordsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateKeywordsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateKeywordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateKeywordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddKeywordsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddKeywordsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddKeywordsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddKeywordsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetTargetsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetCampaignsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeSitePlacementsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeSitePlacementsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeSitePlacementsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeSitePlacementsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetKeywordsByIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeAdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeAdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.ResumeAdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.ResumeAdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdExtensionsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdExtensionsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddAdExtensionsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddAdExtensionsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateSitePlacementsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateSitePlacementsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateSitePlacementsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateSitePlacementsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseAdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseAdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.PauseAdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.PauseAdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateBusinessesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateBusinessesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateBusinessesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateBusinessesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddSitePlacementsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddSitePlacementsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.AddSitePlacementsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.AddSitePlacementsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetBusinessesInfoRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesInfoRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.GetBusinessesInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateAdGroupsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateAdGroupsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.v8.UpdateAdGroupsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.v8.UpdateAdGroupsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteAdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteAdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteTargetRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteKeywordsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteKeywordsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateGoalsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateGoalsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateTargetRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetNormalizedStringsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetNormalizedStringsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteSitePlacementsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteSitePlacementsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetTargetToAdGroupRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetTargetToAdGroupRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.PauseSitePlacementsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.PauseSitePlacementsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddBusinessesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddBusinessesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.PauseCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.PauseCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.ResumeKeywordsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.ResumeKeywordsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddGoalsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddGoalsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetDownloadStatusRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetDownloadStatusRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetTargetToCampaignRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetTargetToCampaignRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.ResumeCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.ResumeCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.PauseAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.PauseAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteBusinessesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteBusinessesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetAnalyticsTypeRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetAnalyticsTypeRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddAdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddAdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetGoalsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetGoalsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddTargetRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddTargetRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddTargetsToLibraryRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddTargetsToLibraryRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAnalyticsTypeRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAnalyticsTypeRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetBusinessesByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateAdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateAdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteGoalsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteGoalsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.PauseKeywordsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.PauseKeywordsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateKeywordsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateKeywordsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddKeywordsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddKeywordsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetTargetsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetTargetsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.ResumeAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.ResumeAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetCampaignsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetCampaignsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.ResumeSitePlacementsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.ResumeSitePlacementsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetKeywordsByIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetKeywordsByIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.ResumeAdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.ResumeAdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddAdExtensionsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddAdExtensionsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateSitePlacementsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateSitePlacementsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.PauseAdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.PauseAdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateBusinessesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateBusinessesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.AddSitePlacementsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.AddSitePlacementsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.GetBusinessesInfoRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.GetBusinessesInfoRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.v8.UpdateAdGroupsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.v8.UpdateAdGroupsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.microsoft.adcenter.v8.DeleteAdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteAdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteKeywordsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteKeywordsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteKeywordsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteKeywordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateGoalsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateGoalsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateGoalsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateGoalsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateTargetRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateTargetRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateTargetResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateTargetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetSitePlacementsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetSitePlacementsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByAdGroupIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeKeywordsToAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNormalizedStringsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNormalizedStringsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNormalizedStringsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNormalizedStringsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteSitePlacementsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteSitePlacementsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteSitePlacementsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteSitePlacementsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetTargetToAdGroupRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetTargetToAdGroupRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetTargetToAdGroupResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetTargetToAdGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SubmitAdGroupForApprovalRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SubmitAdGroupForApprovalResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetByAdGroupIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetByAdGroupIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseSitePlacementsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseSitePlacementsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseSitePlacementsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseSitePlacementsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdEditorialReasonsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByCampaignIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByCampaignIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddBusinessesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddBusinessesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddBusinessesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddBusinessesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByEditorialStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordEditorialReasonsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetFromAdGroupRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetFromAdGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DownloadCampaignHierarchyRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DownloadCampaignHierarchyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeKeywordsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeKeywordsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeKeywordsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeKeywordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdExtensionsFromCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeSitesToCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateDeviceOSTargetsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateDeviceOSTargetsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByEditorialStatusRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByEditorialStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddGoalsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddGoalsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddGoalsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddGoalsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AnalyticsApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetDownloadStatusRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetDownloadStatusRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetDownloadStatusResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetDownloadStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetTargetToCampaignRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetTargetToCampaignRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetTargetToCampaignResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetTargetToCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateTargetsInLibraryRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateTargetsInLibraryResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteBusinessesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteBusinessesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteBusinessesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteBusinessesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetAnalyticsTypeRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetAnalyticsTypeRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetAnalyticsTypeResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetAnalyticsTypeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeSitesByAdGroupIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignsByAccountIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignsByAccountIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetCampaignAdExtensionsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetCampaignAdExtensionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAccountMigrationStatusesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAccountMigrationStatusesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetDeviceOSTargetsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetGoalsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetGoalsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetGoalsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetGoalsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdExtensionsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdExtensionsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByAdGroupIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeSitesToAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeSitesByCampaignIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddTargetRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddTargetRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddTargetResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddTargetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdGroupsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdGroupsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddTargetsToLibraryRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddTargetsToLibraryRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddTargetsToLibraryResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddTargetsToLibraryResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAnalyticsTypeRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAnalyticsTypeRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAnalyticsTypeResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAnalyticsTypeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdExtensionsByCampaignIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetBusinessesByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetBusinessesByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetBusinessesByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetBusinessesByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetFromCampaignRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetFromCampaignResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeKeywordsByAdGroupIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateAdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateAdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateAdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateAdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignAdExtensionsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignAdExtensionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetAdExtensionsToCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteGoalsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteGoalsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteGoalsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteGoalsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseKeywordsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseKeywordsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseKeywordsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseKeywordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetNegativeKeywordsByCampaignIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateKeywordsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateKeywordsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateKeywordsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateKeywordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddKeywordsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddKeywordsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddKeywordsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddKeywordsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.EditorialApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.EditorialApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsInfoFromLibraryResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.SetNegativeKeywordsToCampaignsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByAdGroupIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdsByAdGroupIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetTargetsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetTargetsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetsFromLibraryRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeleteTargetsFromLibraryResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetCampaignsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetCampaignsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeSitePlacementsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeSitePlacementsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeSitePlacementsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeSitePlacementsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetKeywordsByIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetKeywordsByIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeAdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeAdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ResumeAdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ResumeAdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdExtensionsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdExtensionsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddAdExtensionsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddAdExtensionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateSitePlacementsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateSitePlacementsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateSitePlacementsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateSitePlacementsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetPlacementDetailsForUrlsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseAdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseAdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.PauseAdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.PauseAdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetSitePlacementsByAdGroupIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateBusinessesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateBusinessesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateBusinessesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateBusinessesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddSitePlacementsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddSitePlacementsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.AddSitePlacementsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.AddSitePlacementsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetAdGroupsByCampaignIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetBusinessesInfoRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetBusinessesInfoRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.GetBusinessesInfoResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.GetBusinessesInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateAdGroupsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateAdGroupsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UpdateAdGroupsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UpdateAdGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerAccountId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerAccountId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.CustomerId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.CustomerId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.v8.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.v8.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   