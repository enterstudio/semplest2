
/**
 * CustomerManagementServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.6.2  Built on : Apr 17, 2012 (05:33:49 IST)
 */
        package com.microsoft.adcenter.api.customermanagement;

        

        /*
        *  CustomerManagementServiceStub java implementation
        */

        
        public class CustomerManagementServiceStub extends org.apache.axis2.client.Stub
        implements CustomerManagementService{
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

        private static int counter = 0;

        private static synchronized java.lang.String getUniqueSuffix(){
            // reset the counter if it is greater than 99999
            if (counter > 99999){
                counter = 0;
            }
            counter = counter + 1; 
            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
        }

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("CustomerManagementService" + getUniqueSuffix());
     addAnonymousOperations();

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[33];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[0]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[1]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[2]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[3]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[4]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[5]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[6]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[7]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[8]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[9]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[10]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[11]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[12]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[13]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[14]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[15]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[16]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[17]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[18]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[19]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[20]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[21]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[22]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[23]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[24]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[25]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[26]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[27]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[28]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[29]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[30]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[31]=__operation;
            
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser"));
	    _service.addOperation(__operation);
	    

	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_OUT_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    (__operation).getMessage(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE).getPolicySubject().attachPolicy(getPolicy("<wsp:Policy wsu:Id=\"BasicHttpBinding_ICustomerManagementService_policy\" xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"><wsp:ExactlyOne><wsp:All><sp:TransportBinding xmlns:sp=\"http://schemas.xmlsoap.org/ws/2005/07/securitypolicy\"><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:TransportToken><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:HttpsToken RequireClientCertificate=\"false\"></sp:HttpsToken></wsp:Policy></sp:TransportToken><sp:AlgorithmSuite><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Basic256/></wsp:Policy></sp:AlgorithmSuite><sp:Layout><wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"><sp:Strict/></wsp:Policy></sp:Layout></wsp:Policy></sp:TransportBinding></wsp:All></wsp:ExactlyOne></wsp:Policy>"));
	    
	    
            _operations[32]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCurrentUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCurrentUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCurrentUser"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCurrentUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCurrentUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCurrentUser"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "CancelRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "CancelRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "CancelRequestToManageAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "CancelRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "CancelRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "CancelRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpgradeCustomerToAgency"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpgradeCustomerToAgency"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpgradeCustomerToAgency"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpgradeCustomerToAgency"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpgradeCustomerToAgency"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpgradeCustomerToAgency"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteCustomer"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteCustomer"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUser"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUser"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccessibleCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccessibleCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccessibleCustomer"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccessibleCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccessibleCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccessibleCustomer"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateAccount"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateAccount"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SignupCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SignupCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SignupCustomer"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SignupCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SignupCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SignupCustomer"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToManageAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteUser"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteUser"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPilotFeaturesCountries"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPilotFeaturesCountries"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetPilotFeaturesCountries"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetPilotFeaturesCountries"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetPilotFeaturesCountries"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetPilotFeaturesCountries"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountsInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountsInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccountsInfo"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccountsInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccountsInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccountsInfo"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccountsOrCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccountsOrCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "FindAccountsOrCustomersInfo"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccountsOrCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccountsOrCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "FindAccountsOrCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomersInfo"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomersInfo"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddPrepayAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddPrepayAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddPrepayAccount"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddPrepayAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddPrepayAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddPrepayAccount"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetAccount"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetAccount"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToStopManagingAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToStopManagingAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "SendRequestToStopManagingAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToStopManagingAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToStopManagingAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "SendRequestToStopManagingAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AcceptRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AcceptRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AcceptRequestToManageAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AcceptRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AcceptRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AcceptRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccountsInfos"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccountsInfos"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccountsInfos"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccountsInfos"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccountsInfos"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccountsInfos"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapCustomerIdToExternalCustomerId"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddAccount"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddAccount"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomerPilotFeature"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomerPilotFeature"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomerPilotFeature"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomerPilotFeature"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomerPilotFeature"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomerPilotFeature"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUsersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUsersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUsersInfo"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUsersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUsersInfo"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUsersInfo"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetUser"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetUser"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetCustomer"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetCustomer"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "GetRequestToManageAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "GetRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUserRoles"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUserRoles"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateUserRoles"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUserRoles"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUserRoles"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateUserRoles"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeleteAccount"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteAccount"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeleteAccount"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "UpdateCustomer"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateCustomer"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "UpdateCustomer"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeclineRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeclineRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "DeclineRequestToManageAccounts"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeclineRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeclineRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "DeclineRequestToManageAccounts"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "MapAccountIdToExternalAccountIds"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adapi.microsoft.com","AdApiFaultDetail"), "AddUser"),"com.microsoft.adapi.AdApiFaultDetailE");
           
              faultExceptionNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage");
              faultExceptionClassNameMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddUser"),"com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage");
              faultMessageMap.put(new org.apache.axis2.client.FaultMapKey(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement/Exception","ApiFault"), "AddUser"),"com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE");
           


    }

    /**
      *Constructor that takes in a configContext
      */

    public CustomerManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public CustomerManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
        _service.applyPolicy();
        
	
        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public CustomerManagementServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"https://sharedservices.adcenterapi.microsoft.com/Api/CustomerManagement/v8/CustomerManagementService.svc" );
                
    }

    /**
     * Default Constructor
     */
    public CustomerManagementServiceStub() throws org.apache.axis2.AxisFault {
        
                    this("https://sharedservices.adcenterapi.microsoft.com/Api/CustomerManagement/v8/CustomerManagementService.svc" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public CustomerManagementServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getCurrentUser
                     * @param getCurrentUserRequest326
                    
                     * @param applicationToken327
                    
                     * @param developerToken328
                    
                     * @param password329
                    
                     * @param userName330
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse getCurrentUser(

                            com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest getCurrentUserRequest326,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken327,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken328,com.microsoft.adcenter.api.customermanagement.Password password329,com.microsoft.adcenter.api.customermanagement.UserName userName330)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("GetCurrentUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentUserRequest326,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCurrentUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCurrentUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken327!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken327 = toOM(applicationToken327, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementapplicationToken327,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken328!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken328 = toOM(developerToken328, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementdeveloperToken328,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password329!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword329 = toOM(password329, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementpassword329,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName330!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName330 = toOM(userName330, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementuserName330,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetCurrentUser
                    * @param getCurrentUserRequest326
                
                    * @param applicationToken327
                
                    * @param developerToken328
                
                    * @param password329
                
                    * @param userName330
                
                */
                public  void startgetCurrentUser(

                 com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest getCurrentUserRequest326,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken327,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken328,
                    com.microsoft.adcenter.api.customermanagement.Password password329,
                    com.microsoft.adcenter.api.customermanagement.UserName userName330,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("GetCurrentUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCurrentUserRequest326,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCurrentUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCurrentUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken327!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken327 = toOM(applicationToken327, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementapplicationToken327,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken328!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken328 = toOM(developerToken328, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementdeveloperToken328,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password329!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword329 = toOM(password329, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementpassword329,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName330!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName330 = toOM(userName330, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCurrentUser")));
                                                    addHeader(omElementuserName330,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCurrentUser(
                                        (com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCurrentUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCurrentUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCurrentUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetCurrentUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCurrentUser_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCurrentUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCurrentUser(f);
                                            }
									    } else {
										    callback.receiveErrorgetCurrentUser(f);
									    }
									} else {
									    callback.receiveErrorgetCurrentUser(f);
									}
								} else {
								    callback.receiveErrorgetCurrentUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCurrentUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#cancelRequestToManageAccounts
                     * @param cancelRequestToManageAccountsRequest332
                    
                     * @param applicationToken333
                    
                     * @param developerToken334
                    
                     * @param password335
                    
                     * @param userName336
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse cancelRequestToManageAccounts(

                            com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest cancelRequestToManageAccountsRequest332,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken333,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken334,com.microsoft.adcenter.api.customermanagement.Password password335,com.microsoft.adcenter.api.customermanagement.UserName userName336)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
              _operationClient.getOptions().setAction("CancelRequestToManageAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    cancelRequestToManageAccountsRequest332,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "cancelRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "cancelRequestToManageAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken333!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken333 = toOM(applicationToken333, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken333,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken334!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken334 = toOM(developerToken334, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken334,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password335!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword335 = toOM(password335, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementpassword335,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName336!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName336 = toOM(userName336, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementuserName336,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startcancelRequestToManageAccounts
                    * @param cancelRequestToManageAccountsRequest332
                
                    * @param applicationToken333
                
                    * @param developerToken334
                
                    * @param password335
                
                    * @param userName336
                
                */
                public  void startcancelRequestToManageAccounts(

                 com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest cancelRequestToManageAccountsRequest332,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken333,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken334,
                    com.microsoft.adcenter.api.customermanagement.Password password335,
                    com.microsoft.adcenter.api.customermanagement.UserName userName336,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
             _operationClient.getOptions().setAction("CancelRequestToManageAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    cancelRequestToManageAccountsRequest332,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "cancelRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "cancelRequestToManageAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken333!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken333 = toOM(applicationToken333, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken333,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken334!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken334 = toOM(developerToken334, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken334,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password335!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword335 = toOM(password335, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementpassword335,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName336!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName336 = toOM(userName336, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "cancelRequestToManageAccounts")));
                                                    addHeader(omElementuserName336,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultcancelRequestToManageAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorcancelRequestToManageAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"CancelRequestToManageAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorcancelRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrorcancelRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_CancelRequestToManageAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorcancelRequestToManageAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorcancelRequestToManageAccounts(f);
                                            }
									    } else {
										    callback.receiveErrorcancelRequestToManageAccounts(f);
									    }
									} else {
									    callback.receiveErrorcancelRequestToManageAccounts(f);
									}
								} else {
								    callback.receiveErrorcancelRequestToManageAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorcancelRequestToManageAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[1].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#upgradeCustomerToAgency
                     * @param upgradeCustomerToAgencyRequest338
                    
                     * @param applicationToken339
                    
                     * @param developerToken340
                    
                     * @param password341
                    
                     * @param userName342
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse upgradeCustomerToAgency(

                            com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest upgradeCustomerToAgencyRequest338,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken339,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken340,com.microsoft.adcenter.api.customermanagement.Password password341,com.microsoft.adcenter.api.customermanagement.UserName userName342)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
              _operationClient.getOptions().setAction("UpgradeCustomerToAgency");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    upgradeCustomerToAgencyRequest338,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "upgradeCustomerToAgency")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "upgradeCustomerToAgency"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken339!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken339 = toOM(applicationToken339, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementapplicationToken339,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken340!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken340 = toOM(developerToken340, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementdeveloperToken340,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password341!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword341 = toOM(password341, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementpassword341,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName342!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName342 = toOM(userName342, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementuserName342,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startupgradeCustomerToAgency
                    * @param upgradeCustomerToAgencyRequest338
                
                    * @param applicationToken339
                
                    * @param developerToken340
                
                    * @param password341
                
                    * @param userName342
                
                */
                public  void startupgradeCustomerToAgency(

                 com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest upgradeCustomerToAgencyRequest338,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken339,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken340,
                    com.microsoft.adcenter.api.customermanagement.Password password341,
                    com.microsoft.adcenter.api.customermanagement.UserName userName342,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
             _operationClient.getOptions().setAction("UpgradeCustomerToAgency");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    upgradeCustomerToAgencyRequest338,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "upgradeCustomerToAgency")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "upgradeCustomerToAgency"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken339!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken339 = toOM(applicationToken339, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementapplicationToken339,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken340!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken340 = toOM(developerToken340, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementdeveloperToken340,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password341!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword341 = toOM(password341, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementpassword341,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName342!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName342 = toOM(userName342, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "upgradeCustomerToAgency")));
                                                    addHeader(omElementuserName342,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupgradeCustomerToAgency(
                                        (com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupgradeCustomerToAgency(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpgradeCustomerToAgency"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupgradeCustomerToAgency((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage){
														callback.receiveErrorupgradeCustomerToAgency((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpgradeCustomerToAgency_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupgradeCustomerToAgency(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupgradeCustomerToAgency(f);
                                            }
									    } else {
										    callback.receiveErrorupgradeCustomerToAgency(f);
									    }
									} else {
									    callback.receiveErrorupgradeCustomerToAgency(f);
									}
								} else {
								    callback.receiveErrorupgradeCustomerToAgency(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupgradeCustomerToAgency(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[2].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#deleteCustomer
                     * @param deleteCustomerRequest344
                    
                     * @param applicationToken345
                    
                     * @param developerToken346
                    
                     * @param password347
                    
                     * @param userName348
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse deleteCustomer(

                            com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest deleteCustomerRequest344,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken345,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken346,com.microsoft.adcenter.api.customermanagement.Password password347,com.microsoft.adcenter.api.customermanagement.UserName userName348)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
              _operationClient.getOptions().setAction("DeleteCustomer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteCustomerRequest344,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteCustomer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken345!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken345 = toOM(applicationToken345, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementapplicationToken345,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken346!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken346 = toOM(developerToken346, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementdeveloperToken346,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password347!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword347 = toOM(password347, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementpassword347,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName348!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName348 = toOM(userName348, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementuserName348,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startdeleteCustomer
                    * @param deleteCustomerRequest344
                
                    * @param applicationToken345
                
                    * @param developerToken346
                
                    * @param password347
                
                    * @param userName348
                
                */
                public  void startdeleteCustomer(

                 com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest deleteCustomerRequest344,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken345,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken346,
                    com.microsoft.adcenter.api.customermanagement.Password password347,
                    com.microsoft.adcenter.api.customermanagement.UserName userName348,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
             _operationClient.getOptions().setAction("DeleteCustomer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteCustomerRequest344,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteCustomer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken345!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken345 = toOM(applicationToken345, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementapplicationToken345,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken346!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken346 = toOM(developerToken346, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementdeveloperToken346,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password347!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword347 = toOM(password347, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementpassword347,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName348!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName348 = toOM(userName348, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteCustomer")));
                                                    addHeader(omElementuserName348,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteCustomer(
                                        (com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteCustomer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteCustomer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage){
														callback.receiveErrordeleteCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteCustomer_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteCustomer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteCustomer(f);
                                            }
									    } else {
										    callback.receiveErrordeleteCustomer(f);
									    }
									} else {
									    callback.receiveErrordeleteCustomer(f);
									}
								} else {
								    callback.receiveErrordeleteCustomer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteCustomer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[3].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[3].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#updateUser
                     * @param updateUserRequest350
                    
                     * @param applicationToken351
                    
                     * @param developerToken352
                    
                     * @param password353
                    
                     * @param userName354
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.UpdateUserResponse updateUser(

                            com.microsoft.adcenter.api.customermanagement.UpdateUserRequest updateUserRequest350,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken351,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken352,com.microsoft.adcenter.api.customermanagement.Password password353,com.microsoft.adcenter.api.customermanagement.UserName userName354)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
              _operationClient.getOptions().setAction("UpdateUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateUserRequest350,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken351!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken351 = toOM(applicationToken351, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementapplicationToken351,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken352!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken352 = toOM(developerToken352, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementdeveloperToken352,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password353!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword353 = toOM(password353, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementpassword353,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName354!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName354 = toOM(userName354, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementuserName354,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.UpdateUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.UpdateUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startupdateUser
                    * @param updateUserRequest350
                
                    * @param applicationToken351
                
                    * @param developerToken352
                
                    * @param password353
                
                    * @param userName354
                
                */
                public  void startupdateUser(

                 com.microsoft.adcenter.api.customermanagement.UpdateUserRequest updateUserRequest350,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken351,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken352,
                    com.microsoft.adcenter.api.customermanagement.Password password353,
                    com.microsoft.adcenter.api.customermanagement.UserName userName354,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
             _operationClient.getOptions().setAction("UpdateUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateUserRequest350,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken351!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken351 = toOM(applicationToken351, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementapplicationToken351,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken352!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken352 = toOM(developerToken352, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementdeveloperToken352,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password353!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword353 = toOM(password353, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementpassword353,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName354!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName354 = toOM(userName354, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUser")));
                                                    addHeader(omElementuserName354,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.UpdateUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateUser(
                                        (com.microsoft.adcenter.api.customermanagement.UpdateUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage){
														callback.receiveErrorupdateUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUser_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUser(f);
                                            }
									    } else {
										    callback.receiveErrorupdateUser(f);
									    }
									} else {
									    callback.receiveErrorupdateUser(f);
									}
								} else {
								    callback.receiveErrorupdateUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[4].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[4].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getAccessibleCustomer
                     * @param getAccessibleCustomerRequest356
                    
                     * @param applicationToken357
                    
                     * @param developerToken358
                    
                     * @param password359
                    
                     * @param userName360
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse getAccessibleCustomer(

                            com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest getAccessibleCustomerRequest356,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken357,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken358,com.microsoft.adcenter.api.customermanagement.Password password359,com.microsoft.adcenter.api.customermanagement.UserName userName360)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
              _operationClient.getOptions().setAction("GetAccessibleCustomer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccessibleCustomerRequest356,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccessibleCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccessibleCustomer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken357!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken357 = toOM(applicationToken357, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementapplicationToken357,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken358!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken358 = toOM(developerToken358, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementdeveloperToken358,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password359!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword359 = toOM(password359, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementpassword359,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName360!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName360 = toOM(userName360, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementuserName360,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetAccessibleCustomer
                    * @param getAccessibleCustomerRequest356
                
                    * @param applicationToken357
                
                    * @param developerToken358
                
                    * @param password359
                
                    * @param userName360
                
                */
                public  void startgetAccessibleCustomer(

                 com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest getAccessibleCustomerRequest356,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken357,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken358,
                    com.microsoft.adcenter.api.customermanagement.Password password359,
                    com.microsoft.adcenter.api.customermanagement.UserName userName360,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
             _operationClient.getOptions().setAction("GetAccessibleCustomer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccessibleCustomerRequest356,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccessibleCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccessibleCustomer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken357!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken357 = toOM(applicationToken357, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementapplicationToken357,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken358!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken358 = toOM(developerToken358, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementdeveloperToken358,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password359!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword359 = toOM(password359, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementpassword359,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName360!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName360 = toOM(userName360, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccessibleCustomer")));
                                                    addHeader(omElementuserName360,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAccessibleCustomer(
                                        (com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAccessibleCustomer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccessibleCustomer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAccessibleCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetAccessibleCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccessibleCustomer_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAccessibleCustomer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccessibleCustomer(f);
                                            }
									    } else {
										    callback.receiveErrorgetAccessibleCustomer(f);
									    }
									} else {
									    callback.receiveErrorgetAccessibleCustomer(f);
									}
								} else {
								    callback.receiveErrorgetAccessibleCustomer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAccessibleCustomer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[5].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[5].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#findAccounts
                     * @param findAccountsRequest362
                    
                     * @param applicationToken363
                    
                     * @param developerToken364
                    
                     * @param password365
                    
                     * @param userName366
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.FindAccountsResponse findAccounts(

                            com.microsoft.adcenter.api.customermanagement.FindAccountsRequest findAccountsRequest362,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken363,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken364,com.microsoft.adcenter.api.customermanagement.Password password365,com.microsoft.adcenter.api.customermanagement.UserName userName366)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
              _operationClient.getOptions().setAction("FindAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    findAccountsRequest362,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken363!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken363 = toOM(applicationToken363, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementapplicationToken363,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken364!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken364 = toOM(developerToken364, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementdeveloperToken364,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password365!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword365 = toOM(password365, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementpassword365,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName366!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName366 = toOM(userName366, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementuserName366,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.FindAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.FindAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startfindAccounts
                    * @param findAccountsRequest362
                
                    * @param applicationToken363
                
                    * @param developerToken364
                
                    * @param password365
                
                    * @param userName366
                
                */
                public  void startfindAccounts(

                 com.microsoft.adcenter.api.customermanagement.FindAccountsRequest findAccountsRequest362,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken363,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken364,
                    com.microsoft.adcenter.api.customermanagement.Password password365,
                    com.microsoft.adcenter.api.customermanagement.UserName userName366,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
             _operationClient.getOptions().setAction("FindAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    findAccountsRequest362,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken363!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken363 = toOM(applicationToken363, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementapplicationToken363,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken364!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken364 = toOM(developerToken364, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementdeveloperToken364,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password365!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword365 = toOM(password365, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementpassword365,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName366!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName366 = toOM(userName366, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccounts")));
                                                    addHeader(omElementuserName366,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.FindAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultfindAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.FindAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorfindAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorfindAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrorfindAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorfindAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccounts(f);
                                            }
									    } else {
										    callback.receiveErrorfindAccounts(f);
									    }
									} else {
									    callback.receiveErrorfindAccounts(f);
									}
								} else {
								    callback.receiveErrorfindAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorfindAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[6].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[6].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#updateAccount
                     * @param updateAccountRequest368
                    
                     * @param applicationToken369
                    
                     * @param developerToken370
                    
                     * @param password371
                    
                     * @param userName372
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse updateAccount(

                            com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest updateAccountRequest368,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken369,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken370,com.microsoft.adcenter.api.customermanagement.Password password371,com.microsoft.adcenter.api.customermanagement.UserName userName372)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
              _operationClient.getOptions().setAction("UpdateAccount");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAccountRequest368,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateAccount"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken369!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken369 = toOM(applicationToken369, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementapplicationToken369,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken370!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken370 = toOM(developerToken370, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementdeveloperToken370,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password371!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword371 = toOM(password371, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementpassword371,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName372!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName372 = toOM(userName372, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementuserName372,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startupdateAccount
                    * @param updateAccountRequest368
                
                    * @param applicationToken369
                
                    * @param developerToken370
                
                    * @param password371
                
                    * @param userName372
                
                */
                public  void startupdateAccount(

                 com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest updateAccountRequest368,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken369,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken370,
                    com.microsoft.adcenter.api.customermanagement.Password password371,
                    com.microsoft.adcenter.api.customermanagement.UserName userName372,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
             _operationClient.getOptions().setAction("UpdateAccount");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateAccountRequest368,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateAccount"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken369!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken369 = toOM(applicationToken369, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementapplicationToken369,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken370!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken370 = toOM(developerToken370, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementdeveloperToken370,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password371!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword371 = toOM(password371, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementpassword371,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName372!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName372 = toOM(userName372, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateAccount")));
                                                    addHeader(omElementuserName372,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateAccount(
                                        (com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateAccount(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateAccount"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage){
														callback.receiveErrorupdateAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateAccount_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateAccount(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateAccount(f);
                                            }
									    } else {
										    callback.receiveErrorupdateAccount(f);
									    }
									} else {
									    callback.receiveErrorupdateAccount(f);
									}
								} else {
								    callback.receiveErrorupdateAccount(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateAccount(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[7].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[7].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#signupCustomer
                     * @param signupCustomerRequest374
                    
                     * @param applicationToken375
                    
                     * @param developerToken376
                    
                     * @param password377
                    
                     * @param userName378
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse signupCustomer(

                            com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest signupCustomerRequest374,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken375,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken376,com.microsoft.adcenter.api.customermanagement.Password password377,com.microsoft.adcenter.api.customermanagement.UserName userName378)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
              _operationClient.getOptions().setAction("SignupCustomer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    signupCustomerRequest374,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "signupCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "signupCustomer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken375!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken375 = toOM(applicationToken375, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementapplicationToken375,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken376!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken376 = toOM(developerToken376, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementdeveloperToken376,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password377!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword377 = toOM(password377, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementpassword377,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName378!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName378 = toOM(userName378, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementuserName378,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startsignupCustomer
                    * @param signupCustomerRequest374
                
                    * @param applicationToken375
                
                    * @param developerToken376
                
                    * @param password377
                
                    * @param userName378
                
                */
                public  void startsignupCustomer(

                 com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest signupCustomerRequest374,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken375,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken376,
                    com.microsoft.adcenter.api.customermanagement.Password password377,
                    com.microsoft.adcenter.api.customermanagement.UserName userName378,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
             _operationClient.getOptions().setAction("SignupCustomer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    signupCustomerRequest374,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "signupCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "signupCustomer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken375!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken375 = toOM(applicationToken375, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementapplicationToken375,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken376!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken376 = toOM(developerToken376, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementdeveloperToken376,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password377!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword377 = toOM(password377, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementpassword377,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName378!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName378 = toOM(userName378, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "signupCustomer")));
                                                    addHeader(omElementuserName378,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsignupCustomer(
                                        (com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsignupCustomer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SignupCustomer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsignupCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage){
														callback.receiveErrorsignupCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SignupCustomer_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsignupCustomer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsignupCustomer(f);
                                            }
									    } else {
										    callback.receiveErrorsignupCustomer(f);
									    }
									} else {
									    callback.receiveErrorsignupCustomer(f);
									}
								} else {
								    callback.receiveErrorsignupCustomer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsignupCustomer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[8].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[8].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#sendRequestToManageAccounts
                     * @param sendRequestToManageAccountsRequest380
                    
                     * @param applicationToken381
                    
                     * @param developerToken382
                    
                     * @param password383
                    
                     * @param userName384
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse sendRequestToManageAccounts(

                            com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest sendRequestToManageAccountsRequest380,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken381,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken382,com.microsoft.adcenter.api.customermanagement.Password password383,com.microsoft.adcenter.api.customermanagement.UserName userName384)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
              _operationClient.getOptions().setAction("SendRequestToManageAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendRequestToManageAccountsRequest380,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToManageAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken381!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken381 = toOM(applicationToken381, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken381,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken382!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken382 = toOM(developerToken382, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken382,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password383!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword383 = toOM(password383, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementpassword383,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName384!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName384 = toOM(userName384, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementuserName384,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startsendRequestToManageAccounts
                    * @param sendRequestToManageAccountsRequest380
                
                    * @param applicationToken381
                
                    * @param developerToken382
                
                    * @param password383
                
                    * @param userName384
                
                */
                public  void startsendRequestToManageAccounts(

                 com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest sendRequestToManageAccountsRequest380,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken381,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken382,
                    com.microsoft.adcenter.api.customermanagement.Password password383,
                    com.microsoft.adcenter.api.customermanagement.UserName userName384,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
             _operationClient.getOptions().setAction("SendRequestToManageAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendRequestToManageAccountsRequest380,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToManageAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken381!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken381 = toOM(applicationToken381, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken381,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken382!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken382 = toOM(developerToken382, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken382,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password383!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword383 = toOM(password383, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementpassword383,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName384!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName384 = toOM(userName384, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToManageAccounts")));
                                                    addHeader(omElementuserName384,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendRequestToManageAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendRequestToManageAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToManageAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsendRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrorsendRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToManageAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsendRequestToManageAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToManageAccounts(f);
                                            }
									    } else {
										    callback.receiveErrorsendRequestToManageAccounts(f);
									    }
									} else {
									    callback.receiveErrorsendRequestToManageAccounts(f);
									}
								} else {
								    callback.receiveErrorsendRequestToManageAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendRequestToManageAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[9].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[9].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#deleteUser
                     * @param deleteUserRequest386
                    
                     * @param applicationToken387
                    
                     * @param developerToken388
                    
                     * @param password389
                    
                     * @param userName390
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.DeleteUserResponse deleteUser(

                            com.microsoft.adcenter.api.customermanagement.DeleteUserRequest deleteUserRequest386,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken387,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken388,com.microsoft.adcenter.api.customermanagement.Password password389,com.microsoft.adcenter.api.customermanagement.UserName userName390)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
              _operationClient.getOptions().setAction("DeleteUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteUserRequest386,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken387!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken387 = toOM(applicationToken387, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementapplicationToken387,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken388!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken388 = toOM(developerToken388, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementdeveloperToken388,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password389!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword389 = toOM(password389, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementpassword389,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName390!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName390 = toOM(userName390, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementuserName390,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.DeleteUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.DeleteUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startdeleteUser
                    * @param deleteUserRequest386
                
                    * @param applicationToken387
                
                    * @param developerToken388
                
                    * @param password389
                
                    * @param userName390
                
                */
                public  void startdeleteUser(

                 com.microsoft.adcenter.api.customermanagement.DeleteUserRequest deleteUserRequest386,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken387,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken388,
                    com.microsoft.adcenter.api.customermanagement.Password password389,
                    com.microsoft.adcenter.api.customermanagement.UserName userName390,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
             _operationClient.getOptions().setAction("DeleteUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteUserRequest386,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken387!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken387 = toOM(applicationToken387, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementapplicationToken387,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken388!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken388 = toOM(developerToken388, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementdeveloperToken388,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password389!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword389 = toOM(password389, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementpassword389,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName390!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName390 = toOM(userName390, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteUser")));
                                                    addHeader(omElementuserName390,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.DeleteUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteUser(
                                        (com.microsoft.adcenter.api.customermanagement.DeleteUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage){
														callback.receiveErrordeleteUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteUser_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteUser(f);
                                            }
									    } else {
										    callback.receiveErrordeleteUser(f);
									    }
									} else {
									    callback.receiveErrordeleteUser(f);
									}
								} else {
								    callback.receiveErrordeleteUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[10].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[10].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getPilotFeaturesCountries
                     * @param getPilotFeaturesCountriesRequest392
                    
                     * @param applicationToken393
                    
                     * @param developerToken394
                    
                     * @param password395
                    
                     * @param userName396
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse getPilotFeaturesCountries(

                            com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest getPilotFeaturesCountriesRequest392,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken393,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken394,com.microsoft.adcenter.api.customermanagement.Password password395,com.microsoft.adcenter.api.customermanagement.UserName userName396)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
              _operationClient.getOptions().setAction("GetPilotFeaturesCountries");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPilotFeaturesCountriesRequest392,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getPilotFeaturesCountries")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getPilotFeaturesCountries"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken393!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken393 = toOM(applicationToken393, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementapplicationToken393,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken394!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken394 = toOM(developerToken394, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementdeveloperToken394,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password395!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword395 = toOM(password395, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementpassword395,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName396!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName396 = toOM(userName396, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementuserName396,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetPilotFeaturesCountries
                    * @param getPilotFeaturesCountriesRequest392
                
                    * @param applicationToken393
                
                    * @param developerToken394
                
                    * @param password395
                
                    * @param userName396
                
                */
                public  void startgetPilotFeaturesCountries(

                 com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest getPilotFeaturesCountriesRequest392,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken393,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken394,
                    com.microsoft.adcenter.api.customermanagement.Password password395,
                    com.microsoft.adcenter.api.customermanagement.UserName userName396,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[11].getName());
             _operationClient.getOptions().setAction("GetPilotFeaturesCountries");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getPilotFeaturesCountriesRequest392,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getPilotFeaturesCountries")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getPilotFeaturesCountries"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken393!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken393 = toOM(applicationToken393, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementapplicationToken393,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken394!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken394 = toOM(developerToken394, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementdeveloperToken394,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password395!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword395 = toOM(password395, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementpassword395,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName396!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName396 = toOM(userName396, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getPilotFeaturesCountries")));
                                                    addHeader(omElementuserName396,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetPilotFeaturesCountries(
                                        (com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetPilotFeaturesCountries(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetPilotFeaturesCountries"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetPilotFeaturesCountries((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetPilotFeaturesCountries((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetPilotFeaturesCountries_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetPilotFeaturesCountries(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetPilotFeaturesCountries(f);
                                            }
									    } else {
										    callback.receiveErrorgetPilotFeaturesCountries(f);
									    }
									} else {
									    callback.receiveErrorgetPilotFeaturesCountries(f);
									}
								} else {
								    callback.receiveErrorgetPilotFeaturesCountries(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetPilotFeaturesCountries(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[11].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[11].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getAccountsInfo
                     * @param getAccountsInfoRequest398
                    
                     * @param applicationToken399
                    
                     * @param developerToken400
                    
                     * @param password401
                    
                     * @param userName402
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse getAccountsInfo(

                            com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest getAccountsInfoRequest398,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken399,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken400,com.microsoft.adcenter.api.customermanagement.Password password401,com.microsoft.adcenter.api.customermanagement.UserName userName402)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
              _operationClient.getOptions().setAction("GetAccountsInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountsInfoRequest398,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccountsInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccountsInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken399!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken399 = toOM(applicationToken399, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementapplicationToken399,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken400!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken400 = toOM(developerToken400, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementdeveloperToken400,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password401!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword401 = toOM(password401, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementpassword401,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName402!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName402 = toOM(userName402, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementuserName402,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetAccountsInfo
                    * @param getAccountsInfoRequest398
                
                    * @param applicationToken399
                
                    * @param developerToken400
                
                    * @param password401
                
                    * @param userName402
                
                */
                public  void startgetAccountsInfo(

                 com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest getAccountsInfoRequest398,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken399,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken400,
                    com.microsoft.adcenter.api.customermanagement.Password password401,
                    com.microsoft.adcenter.api.customermanagement.UserName userName402,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[12].getName());
             _operationClient.getOptions().setAction("GetAccountsInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountsInfoRequest398,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccountsInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccountsInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken399!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken399 = toOM(applicationToken399, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementapplicationToken399,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken400!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken400 = toOM(developerToken400, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementdeveloperToken400,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password401!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword401 = toOM(password401, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementpassword401,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName402!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName402 = toOM(userName402, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccountsInfo")));
                                                    addHeader(omElementuserName402,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAccountsInfo(
                                        (com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAccountsInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccountsInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAccountsInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetAccountsInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccountsInfo_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAccountsInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccountsInfo(f);
                                            }
									    } else {
										    callback.receiveErrorgetAccountsInfo(f);
									    }
									} else {
									    callback.receiveErrorgetAccountsInfo(f);
									}
								} else {
								    callback.receiveErrorgetAccountsInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAccountsInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[12].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[12].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#findAccountsOrCustomersInfo
                     * @param findAccountsOrCustomersInfoRequest404
                    
                     * @param applicationToken405
                    
                     * @param developerToken406
                    
                     * @param password407
                    
                     * @param userName408
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse findAccountsOrCustomersInfo(

                            com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest findAccountsOrCustomersInfoRequest404,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken405,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken406,com.microsoft.adcenter.api.customermanagement.Password password407,com.microsoft.adcenter.api.customermanagement.UserName userName408)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
              _operationClient.getOptions().setAction("FindAccountsOrCustomersInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    findAccountsOrCustomersInfoRequest404,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccountsOrCustomersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccountsOrCustomersInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken405!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken405 = toOM(applicationToken405, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementapplicationToken405,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken406!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken406 = toOM(developerToken406, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementdeveloperToken406,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password407!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword407 = toOM(password407, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementpassword407,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName408!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName408 = toOM(userName408, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementuserName408,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startfindAccountsOrCustomersInfo
                    * @param findAccountsOrCustomersInfoRequest404
                
                    * @param applicationToken405
                
                    * @param developerToken406
                
                    * @param password407
                
                    * @param userName408
                
                */
                public  void startfindAccountsOrCustomersInfo(

                 com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest findAccountsOrCustomersInfoRequest404,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken405,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken406,
                    com.microsoft.adcenter.api.customermanagement.Password password407,
                    com.microsoft.adcenter.api.customermanagement.UserName userName408,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[13].getName());
             _operationClient.getOptions().setAction("FindAccountsOrCustomersInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    findAccountsOrCustomersInfoRequest404,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccountsOrCustomersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "findAccountsOrCustomersInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken405!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken405 = toOM(applicationToken405, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementapplicationToken405,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken406!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken406 = toOM(developerToken406, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementdeveloperToken406,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password407!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword407 = toOM(password407, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementpassword407,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName408!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName408 = toOM(userName408, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "findAccountsOrCustomersInfo")));
                                                    addHeader(omElementuserName408,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultfindAccountsOrCustomersInfo(
                                        (com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorfindAccountsOrCustomersInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"FindAccountsOrCustomersInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorfindAccountsOrCustomersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage){
														callback.receiveErrorfindAccountsOrCustomersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_FindAccountsOrCustomersInfo_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorfindAccountsOrCustomersInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorfindAccountsOrCustomersInfo(f);
                                            }
									    } else {
										    callback.receiveErrorfindAccountsOrCustomersInfo(f);
									    }
									} else {
									    callback.receiveErrorfindAccountsOrCustomersInfo(f);
									}
								} else {
								    callback.receiveErrorfindAccountsOrCustomersInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorfindAccountsOrCustomersInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[13].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[13].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getCustomersInfo
                     * @param getCustomersInfoRequest410
                    
                     * @param applicationToken411
                    
                     * @param developerToken412
                    
                     * @param password413
                    
                     * @param userName414
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse getCustomersInfo(

                            com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest getCustomersInfoRequest410,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken411,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken412,com.microsoft.adcenter.api.customermanagement.Password password413,com.microsoft.adcenter.api.customermanagement.UserName userName414)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
              _operationClient.getOptions().setAction("GetCustomersInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomersInfoRequest410,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomersInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken411!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken411 = toOM(applicationToken411, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementapplicationToken411,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken412!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken412 = toOM(developerToken412, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementdeveloperToken412,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password413!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword413 = toOM(password413, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementpassword413,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName414!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName414 = toOM(userName414, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementuserName414,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetCustomersInfo
                    * @param getCustomersInfoRequest410
                
                    * @param applicationToken411
                
                    * @param developerToken412
                
                    * @param password413
                
                    * @param userName414
                
                */
                public  void startgetCustomersInfo(

                 com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest getCustomersInfoRequest410,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken411,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken412,
                    com.microsoft.adcenter.api.customermanagement.Password password413,
                    com.microsoft.adcenter.api.customermanagement.UserName userName414,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[14].getName());
             _operationClient.getOptions().setAction("GetCustomersInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomersInfoRequest410,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomersInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken411!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken411 = toOM(applicationToken411, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementapplicationToken411,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken412!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken412 = toOM(developerToken412, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementdeveloperToken412,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password413!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword413 = toOM(password413, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementpassword413,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName414!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName414 = toOM(userName414, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomersInfo")));
                                                    addHeader(omElementuserName414,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomersInfo(
                                        (com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomersInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomersInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCustomersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetCustomersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomersInfo_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCustomersInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomersInfo(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomersInfo(f);
									    }
									} else {
									    callback.receiveErrorgetCustomersInfo(f);
									}
								} else {
								    callback.receiveErrorgetCustomersInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomersInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[14].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[14].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#addPrepayAccount
                     * @param addPrepayAccountRequest416
                    
                     * @param applicationToken417
                    
                     * @param developerToken418
                    
                     * @param password419
                    
                     * @param userName420
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse addPrepayAccount(

                            com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest addPrepayAccountRequest416,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken417,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken418,com.microsoft.adcenter.api.customermanagement.Password password419,com.microsoft.adcenter.api.customermanagement.UserName userName420)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
              _operationClient.getOptions().setAction("AddPrepayAccount");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addPrepayAccountRequest416,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addPrepayAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addPrepayAccount"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken417!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken417 = toOM(applicationToken417, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementapplicationToken417,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken418!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken418 = toOM(developerToken418, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementdeveloperToken418,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password419!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword419 = toOM(password419, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementpassword419,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName420!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName420 = toOM(userName420, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementuserName420,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startaddPrepayAccount
                    * @param addPrepayAccountRequest416
                
                    * @param applicationToken417
                
                    * @param developerToken418
                
                    * @param password419
                
                    * @param userName420
                
                */
                public  void startaddPrepayAccount(

                 com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest addPrepayAccountRequest416,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken417,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken418,
                    com.microsoft.adcenter.api.customermanagement.Password password419,
                    com.microsoft.adcenter.api.customermanagement.UserName userName420,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[15].getName());
             _operationClient.getOptions().setAction("AddPrepayAccount");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addPrepayAccountRequest416,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addPrepayAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addPrepayAccount"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken417!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken417 = toOM(applicationToken417, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementapplicationToken417,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken418!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken418 = toOM(developerToken418, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementdeveloperToken418,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password419!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword419 = toOM(password419, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementpassword419,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName420!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName420 = toOM(userName420, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addPrepayAccount")));
                                                    addHeader(omElementuserName420,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddPrepayAccount(
                                        (com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddPrepayAccount(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddPrepayAccount"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddPrepayAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage){
														callback.receiveErroraddPrepayAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddPrepayAccount_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddPrepayAccount(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddPrepayAccount(f);
                                            }
									    } else {
										    callback.receiveErroraddPrepayAccount(f);
									    }
									} else {
									    callback.receiveErroraddPrepayAccount(f);
									}
								} else {
								    callback.receiveErroraddPrepayAccount(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddPrepayAccount(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[15].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[15].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getAccount
                     * @param getAccountRequest422
                    
                     * @param applicationToken423
                    
                     * @param developerToken424
                    
                     * @param password425
                    
                     * @param userName426
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetAccountResponse getAccount(

                            com.microsoft.adcenter.api.customermanagement.GetAccountRequest getAccountRequest422,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken423,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken424,com.microsoft.adcenter.api.customermanagement.Password password425,com.microsoft.adcenter.api.customermanagement.UserName userName426)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
              _operationClient.getOptions().setAction("GetAccount");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountRequest422,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccount"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken423!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken423 = toOM(applicationToken423, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementapplicationToken423,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken424!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken424 = toOM(developerToken424, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementdeveloperToken424,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password425!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword425 = toOM(password425, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementpassword425,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName426!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName426 = toOM(userName426, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementuserName426,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetAccountResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetAccountResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetAccount
                    * @param getAccountRequest422
                
                    * @param applicationToken423
                
                    * @param developerToken424
                
                    * @param password425
                
                    * @param userName426
                
                */
                public  void startgetAccount(

                 com.microsoft.adcenter.api.customermanagement.GetAccountRequest getAccountRequest422,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken423,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken424,
                    com.microsoft.adcenter.api.customermanagement.Password password425,
                    com.microsoft.adcenter.api.customermanagement.UserName userName426,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[16].getName());
             _operationClient.getOptions().setAction("GetAccount");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getAccountRequest422,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getAccount"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken423!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken423 = toOM(applicationToken423, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementapplicationToken423,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken424!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken424 = toOM(developerToken424, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementdeveloperToken424,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password425!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword425 = toOM(password425, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementpassword425,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName426!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName426 = toOM(userName426, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getAccount")));
                                                    addHeader(omElementuserName426,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetAccountResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetAccount(
                                        (com.microsoft.adcenter.api.customermanagement.GetAccountResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetAccount(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetAccount"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetAccount_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetAccount(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetAccount(f);
                                            }
									    } else {
										    callback.receiveErrorgetAccount(f);
									    }
									} else {
									    callback.receiveErrorgetAccount(f);
									}
								} else {
								    callback.receiveErrorgetAccount(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetAccount(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[16].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[16].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#sendRequestToStopManagingAccounts
                     * @param sendRequestToStopManagingAccountsRequest428
                    
                     * @param applicationToken429
                    
                     * @param developerToken430
                    
                     * @param password431
                    
                     * @param userName432
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse sendRequestToStopManagingAccounts(

                            com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest sendRequestToStopManagingAccountsRequest428,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken429,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken430,com.microsoft.adcenter.api.customermanagement.Password password431,com.microsoft.adcenter.api.customermanagement.UserName userName432)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
              _operationClient.getOptions().setAction("SendRequestToStopManagingAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendRequestToStopManagingAccountsRequest428,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToStopManagingAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToStopManagingAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken429!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken429 = toOM(applicationToken429, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementapplicationToken429,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken430!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken430 = toOM(developerToken430, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementdeveloperToken430,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password431!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword431 = toOM(password431, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementpassword431,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName432!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName432 = toOM(userName432, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementuserName432,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startsendRequestToStopManagingAccounts
                    * @param sendRequestToStopManagingAccountsRequest428
                
                    * @param applicationToken429
                
                    * @param developerToken430
                
                    * @param password431
                
                    * @param userName432
                
                */
                public  void startsendRequestToStopManagingAccounts(

                 com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest sendRequestToStopManagingAccountsRequest428,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken429,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken430,
                    com.microsoft.adcenter.api.customermanagement.Password password431,
                    com.microsoft.adcenter.api.customermanagement.UserName userName432,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[17].getName());
             _operationClient.getOptions().setAction("SendRequestToStopManagingAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    sendRequestToStopManagingAccountsRequest428,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToStopManagingAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "sendRequestToStopManagingAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken429!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken429 = toOM(applicationToken429, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementapplicationToken429,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken430!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken430 = toOM(developerToken430, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementdeveloperToken430,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password431!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword431 = toOM(password431, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementpassword431,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName432!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName432 = toOM(userName432, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "sendRequestToStopManagingAccounts")));
                                                    addHeader(omElementuserName432,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultsendRequestToStopManagingAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorsendRequestToStopManagingAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"SendRequestToStopManagingAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorsendRequestToStopManagingAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrorsendRequestToStopManagingAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_SendRequestToStopManagingAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorsendRequestToStopManagingAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorsendRequestToStopManagingAccounts(f);
                                            }
									    } else {
										    callback.receiveErrorsendRequestToStopManagingAccounts(f);
									    }
									} else {
									    callback.receiveErrorsendRequestToStopManagingAccounts(f);
									}
								} else {
								    callback.receiveErrorsendRequestToStopManagingAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorsendRequestToStopManagingAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[17].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[17].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#acceptRequestToManageAccounts
                     * @param acceptRequestToManageAccountsRequest434
                    
                     * @param applicationToken435
                    
                     * @param developerToken436
                    
                     * @param password437
                    
                     * @param userName438
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse acceptRequestToManageAccounts(

                            com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest acceptRequestToManageAccountsRequest434,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken435,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken436,com.microsoft.adcenter.api.customermanagement.Password password437,com.microsoft.adcenter.api.customermanagement.UserName userName438)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
              _operationClient.getOptions().setAction("AcceptRequestToManageAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    acceptRequestToManageAccountsRequest434,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "acceptRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "acceptRequestToManageAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken435!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken435 = toOM(applicationToken435, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken435,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken436!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken436 = toOM(developerToken436, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken436,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password437!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword437 = toOM(password437, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementpassword437,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName438!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName438 = toOM(userName438, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementuserName438,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startacceptRequestToManageAccounts
                    * @param acceptRequestToManageAccountsRequest434
                
                    * @param applicationToken435
                
                    * @param developerToken436
                
                    * @param password437
                
                    * @param userName438
                
                */
                public  void startacceptRequestToManageAccounts(

                 com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest acceptRequestToManageAccountsRequest434,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken435,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken436,
                    com.microsoft.adcenter.api.customermanagement.Password password437,
                    com.microsoft.adcenter.api.customermanagement.UserName userName438,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[18].getName());
             _operationClient.getOptions().setAction("AcceptRequestToManageAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    acceptRequestToManageAccountsRequest434,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "acceptRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "acceptRequestToManageAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken435!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken435 = toOM(applicationToken435, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken435,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken436!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken436 = toOM(developerToken436, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken436,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password437!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword437 = toOM(password437, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementpassword437,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName438!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName438 = toOM(userName438, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "acceptRequestToManageAccounts")));
                                                    addHeader(omElementuserName438,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultacceptRequestToManageAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroracceptRequestToManageAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AcceptRequestToManageAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroracceptRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErroracceptRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AcceptRequestToManageAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroracceptRequestToManageAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroracceptRequestToManageAccounts(f);
                                            }
									    } else {
										    callback.receiveErroracceptRequestToManageAccounts(f);
									    }
									} else {
									    callback.receiveErroracceptRequestToManageAccounts(f);
									}
								} else {
								    callback.receiveErroracceptRequestToManageAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroracceptRequestToManageAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[18].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[18].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getRequestToManageAccountsInfos
                     * @param getRequestToManageAccountsInfosRequest440
                    
                     * @param applicationToken441
                    
                     * @param developerToken442
                    
                     * @param password443
                    
                     * @param userName444
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse getRequestToManageAccountsInfos(

                            com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest getRequestToManageAccountsInfosRequest440,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken441,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken442,com.microsoft.adcenter.api.customermanagement.Password password443,com.microsoft.adcenter.api.customermanagement.UserName userName444)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
              _operationClient.getOptions().setAction("GetRequestToManageAccountsInfos");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRequestToManageAccountsInfosRequest440,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccountsInfos")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccountsInfos"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken441!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken441 = toOM(applicationToken441, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementapplicationToken441,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken442!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken442 = toOM(developerToken442, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementdeveloperToken442,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password443!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword443 = toOM(password443, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementpassword443,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName444!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName444 = toOM(userName444, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementuserName444,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetRequestToManageAccountsInfos
                    * @param getRequestToManageAccountsInfosRequest440
                
                    * @param applicationToken441
                
                    * @param developerToken442
                
                    * @param password443
                
                    * @param userName444
                
                */
                public  void startgetRequestToManageAccountsInfos(

                 com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest getRequestToManageAccountsInfosRequest440,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken441,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken442,
                    com.microsoft.adcenter.api.customermanagement.Password password443,
                    com.microsoft.adcenter.api.customermanagement.UserName userName444,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[19].getName());
             _operationClient.getOptions().setAction("GetRequestToManageAccountsInfos");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRequestToManageAccountsInfosRequest440,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccountsInfos")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccountsInfos"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken441!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken441 = toOM(applicationToken441, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementapplicationToken441,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken442!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken442 = toOM(developerToken442, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementdeveloperToken442,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password443!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword443 = toOM(password443, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementpassword443,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName444!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName444 = toOM(userName444, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccountsInfos")));
                                                    addHeader(omElementuserName444,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRequestToManageAccountsInfos(
                                        (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRequestToManageAccountsInfos(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccountsInfos"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetRequestToManageAccountsInfos((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetRequestToManageAccountsInfos((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccountsInfos_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetRequestToManageAccountsInfos(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccountsInfos(f);
                                            }
									    } else {
										    callback.receiveErrorgetRequestToManageAccountsInfos(f);
									    }
									} else {
									    callback.receiveErrorgetRequestToManageAccountsInfos(f);
									}
								} else {
								    callback.receiveErrorgetRequestToManageAccountsInfos(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRequestToManageAccountsInfos(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[19].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[19].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#mapCustomerIdToExternalCustomerId
                     * @param mapCustomerIdToExternalCustomerIdRequest446
                    
                     * @param applicationToken447
                    
                     * @param developerToken448
                    
                     * @param password449
                    
                     * @param userName450
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse mapCustomerIdToExternalCustomerId(

                            com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest mapCustomerIdToExternalCustomerIdRequest446,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken447,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken448,com.microsoft.adcenter.api.customermanagement.Password password449,com.microsoft.adcenter.api.customermanagement.UserName userName450)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
              _operationClient.getOptions().setAction("MapCustomerIdToExternalCustomerId");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mapCustomerIdToExternalCustomerIdRequest446,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapCustomerIdToExternalCustomerId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapCustomerIdToExternalCustomerId"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken447!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken447 = toOM(applicationToken447, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementapplicationToken447,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken448!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken448 = toOM(developerToken448, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementdeveloperToken448,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password449!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword449 = toOM(password449, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementpassword449,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName450!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName450 = toOM(userName450, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementuserName450,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startmapCustomerIdToExternalCustomerId
                    * @param mapCustomerIdToExternalCustomerIdRequest446
                
                    * @param applicationToken447
                
                    * @param developerToken448
                
                    * @param password449
                
                    * @param userName450
                
                */
                public  void startmapCustomerIdToExternalCustomerId(

                 com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest mapCustomerIdToExternalCustomerIdRequest446,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken447,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken448,
                    com.microsoft.adcenter.api.customermanagement.Password password449,
                    com.microsoft.adcenter.api.customermanagement.UserName userName450,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[20].getName());
             _operationClient.getOptions().setAction("MapCustomerIdToExternalCustomerId");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mapCustomerIdToExternalCustomerIdRequest446,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapCustomerIdToExternalCustomerId")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapCustomerIdToExternalCustomerId"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken447!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken447 = toOM(applicationToken447, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementapplicationToken447,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken448!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken448 = toOM(developerToken448, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementdeveloperToken448,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password449!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword449 = toOM(password449, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementpassword449,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName450!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName450 = toOM(userName450, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapCustomerIdToExternalCustomerId")));
                                                    addHeader(omElementuserName450,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultmapCustomerIdToExternalCustomerId(
                                        (com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrormapCustomerIdToExternalCustomerId(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapCustomerIdToExternalCustomerId"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrormapCustomerIdToExternalCustomerId((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage){
														callback.receiveErrormapCustomerIdToExternalCustomerId((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapCustomerIdToExternalCustomerId_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrormapCustomerIdToExternalCustomerId(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapCustomerIdToExternalCustomerId(f);
                                            }
									    } else {
										    callback.receiveErrormapCustomerIdToExternalCustomerId(f);
									    }
									} else {
									    callback.receiveErrormapCustomerIdToExternalCustomerId(f);
									}
								} else {
								    callback.receiveErrormapCustomerIdToExternalCustomerId(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrormapCustomerIdToExternalCustomerId(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[20].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[20].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#addAccount
                     * @param addAccountRequest452
                    
                     * @param applicationToken453
                    
                     * @param developerToken454
                    
                     * @param password455
                    
                     * @param userName456
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.AddAccountResponse addAccount(

                            com.microsoft.adcenter.api.customermanagement.AddAccountRequest addAccountRequest452,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken453,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken454,com.microsoft.adcenter.api.customermanagement.Password password455,com.microsoft.adcenter.api.customermanagement.UserName userName456)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
              _operationClient.getOptions().setAction("AddAccount");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAccountRequest452,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addAccount"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken453!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken453 = toOM(applicationToken453, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementapplicationToken453,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken454!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken454 = toOM(developerToken454, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementdeveloperToken454,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password455!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword455 = toOM(password455, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementpassword455,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName456!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName456 = toOM(userName456, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementuserName456,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.AddAccountResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.AddAccountResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startaddAccount
                    * @param addAccountRequest452
                
                    * @param applicationToken453
                
                    * @param developerToken454
                
                    * @param password455
                
                    * @param userName456
                
                */
                public  void startaddAccount(

                 com.microsoft.adcenter.api.customermanagement.AddAccountRequest addAccountRequest452,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken453,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken454,
                    com.microsoft.adcenter.api.customermanagement.Password password455,
                    com.microsoft.adcenter.api.customermanagement.UserName userName456,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[21].getName());
             _operationClient.getOptions().setAction("AddAccount");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addAccountRequest452,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addAccount"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken453!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken453 = toOM(applicationToken453, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementapplicationToken453,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken454!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken454 = toOM(developerToken454, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementdeveloperToken454,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password455!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword455 = toOM(password455, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementpassword455,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName456!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName456 = toOM(userName456, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addAccount")));
                                                    addHeader(omElementuserName456,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.AddAccountResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddAccount(
                                        (com.microsoft.adcenter.api.customermanagement.AddAccountResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddAccount(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddAccount"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage){
														callback.receiveErroraddAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddAccount_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddAccount(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddAccount(f);
                                            }
									    } else {
										    callback.receiveErroraddAccount(f);
									    }
									} else {
									    callback.receiveErroraddAccount(f);
									}
								} else {
								    callback.receiveErroraddAccount(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddAccount(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[21].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[21].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getCustomerPilotFeature
                     * @param getCustomerPilotFeatureRequest458
                    
                     * @param applicationToken459
                    
                     * @param developerToken460
                    
                     * @param password461
                    
                     * @param userName462
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse getCustomerPilotFeature(

                            com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest getCustomerPilotFeatureRequest458,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken459,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken460,com.microsoft.adcenter.api.customermanagement.Password password461,com.microsoft.adcenter.api.customermanagement.UserName userName462)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
              _operationClient.getOptions().setAction("GetCustomerPilotFeature");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerPilotFeatureRequest458,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomerPilotFeature")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomerPilotFeature"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken459!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken459 = toOM(applicationToken459, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementapplicationToken459,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken460!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken460 = toOM(developerToken460, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementdeveloperToken460,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password461!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword461 = toOM(password461, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementpassword461,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName462!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName462 = toOM(userName462, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementuserName462,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetCustomerPilotFeature
                    * @param getCustomerPilotFeatureRequest458
                
                    * @param applicationToken459
                
                    * @param developerToken460
                
                    * @param password461
                
                    * @param userName462
                
                */
                public  void startgetCustomerPilotFeature(

                 com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest getCustomerPilotFeatureRequest458,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken459,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken460,
                    com.microsoft.adcenter.api.customermanagement.Password password461,
                    com.microsoft.adcenter.api.customermanagement.UserName userName462,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[22].getName());
             _operationClient.getOptions().setAction("GetCustomerPilotFeature");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerPilotFeatureRequest458,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomerPilotFeature")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomerPilotFeature"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken459!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken459 = toOM(applicationToken459, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementapplicationToken459,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken460!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken460 = toOM(developerToken460, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementdeveloperToken460,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password461!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword461 = toOM(password461, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementpassword461,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName462!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName462 = toOM(userName462, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomerPilotFeature")));
                                                    addHeader(omElementuserName462,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomerPilotFeature(
                                        (com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomerPilotFeature(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomerPilotFeature"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCustomerPilotFeature((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetCustomerPilotFeature((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomerPilotFeature_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCustomerPilotFeature(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomerPilotFeature(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomerPilotFeature(f);
									    }
									} else {
									    callback.receiveErrorgetCustomerPilotFeature(f);
									}
								} else {
								    callback.receiveErrorgetCustomerPilotFeature(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomerPilotFeature(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[22].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[22].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getUsersInfo
                     * @param getUsersInfoRequest464
                    
                     * @param applicationToken465
                    
                     * @param developerToken466
                    
                     * @param password467
                    
                     * @param userName468
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse getUsersInfo(

                            com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest getUsersInfoRequest464,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken465,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken466,com.microsoft.adcenter.api.customermanagement.Password password467,com.microsoft.adcenter.api.customermanagement.UserName userName468)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
              _operationClient.getOptions().setAction("GetUsersInfo");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getUsersInfoRequest464,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUsersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUsersInfo"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken465!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken465 = toOM(applicationToken465, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementapplicationToken465,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken466!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken466 = toOM(developerToken466, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementdeveloperToken466,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password467!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword467 = toOM(password467, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementpassword467,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName468!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName468 = toOM(userName468, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementuserName468,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetUsersInfo
                    * @param getUsersInfoRequest464
                
                    * @param applicationToken465
                
                    * @param developerToken466
                
                    * @param password467
                
                    * @param userName468
                
                */
                public  void startgetUsersInfo(

                 com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest getUsersInfoRequest464,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken465,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken466,
                    com.microsoft.adcenter.api.customermanagement.Password password467,
                    com.microsoft.adcenter.api.customermanagement.UserName userName468,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[23].getName());
             _operationClient.getOptions().setAction("GetUsersInfo");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getUsersInfoRequest464,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUsersInfo")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUsersInfo"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken465!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken465 = toOM(applicationToken465, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementapplicationToken465,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken466!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken466 = toOM(developerToken466, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementdeveloperToken466,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password467!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword467 = toOM(password467, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementpassword467,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName468!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName468 = toOM(userName468, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUsersInfo")));
                                                    addHeader(omElementuserName468,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetUsersInfo(
                                        (com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetUsersInfo(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUsersInfo"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetUsersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetUsersInfo((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUsersInfo_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetUsersInfo(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUsersInfo(f);
                                            }
									    } else {
										    callback.receiveErrorgetUsersInfo(f);
									    }
									} else {
									    callback.receiveErrorgetUsersInfo(f);
									}
								} else {
								    callback.receiveErrorgetUsersInfo(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetUsersInfo(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[23].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[23].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getUser
                     * @param getUserRequest470
                    
                     * @param applicationToken471
                    
                     * @param developerToken472
                    
                     * @param password473
                    
                     * @param userName474
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetUserResponse getUser(

                            com.microsoft.adcenter.api.customermanagement.GetUserRequest getUserRequest470,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken471,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken472,com.microsoft.adcenter.api.customermanagement.Password password473,com.microsoft.adcenter.api.customermanagement.UserName userName474)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
              _operationClient.getOptions().setAction("GetUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getUserRequest470,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken471!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken471 = toOM(applicationToken471, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementapplicationToken471,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken472!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken472 = toOM(developerToken472, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementdeveloperToken472,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password473!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword473 = toOM(password473, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementpassword473,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName474!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName474 = toOM(userName474, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementuserName474,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetUser
                    * @param getUserRequest470
                
                    * @param applicationToken471
                
                    * @param developerToken472
                
                    * @param password473
                
                    * @param userName474
                
                */
                public  void startgetUser(

                 com.microsoft.adcenter.api.customermanagement.GetUserRequest getUserRequest470,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken471,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken472,
                    com.microsoft.adcenter.api.customermanagement.Password password473,
                    com.microsoft.adcenter.api.customermanagement.UserName userName474,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[24].getName());
             _operationClient.getOptions().setAction("GetUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getUserRequest470,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken471!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken471 = toOM(applicationToken471, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementapplicationToken471,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken472!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken472 = toOM(developerToken472, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementdeveloperToken472,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password473!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword473 = toOM(password473, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementpassword473,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName474!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName474 = toOM(userName474, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getUser")));
                                                    addHeader(omElementuserName474,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetUser(
                                        (com.microsoft.adcenter.api.customermanagement.GetUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetUser_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetUser(f);
                                            }
									    } else {
										    callback.receiveErrorgetUser(f);
									    }
									} else {
									    callback.receiveErrorgetUser(f);
									}
								} else {
								    callback.receiveErrorgetUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[24].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[24].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getCustomer
                     * @param getCustomerRequest476
                    
                     * @param applicationToken477
                    
                     * @param developerToken478
                    
                     * @param password479
                    
                     * @param userName480
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetCustomerResponse getCustomer(

                            com.microsoft.adcenter.api.customermanagement.GetCustomerRequest getCustomerRequest476,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken477,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken478,com.microsoft.adcenter.api.customermanagement.Password password479,com.microsoft.adcenter.api.customermanagement.UserName userName480)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
              _operationClient.getOptions().setAction("GetCustomer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerRequest476,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken477!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken477 = toOM(applicationToken477, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementapplicationToken477,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken478!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken478 = toOM(developerToken478, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementdeveloperToken478,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password479!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword479 = toOM(password479, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementpassword479,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName480!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName480 = toOM(userName480, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementuserName480,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetCustomerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetCustomerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetCustomer
                    * @param getCustomerRequest476
                
                    * @param applicationToken477
                
                    * @param developerToken478
                
                    * @param password479
                
                    * @param userName480
                
                */
                public  void startgetCustomer(

                 com.microsoft.adcenter.api.customermanagement.GetCustomerRequest getCustomerRequest476,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken477,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken478,
                    com.microsoft.adcenter.api.customermanagement.Password password479,
                    com.microsoft.adcenter.api.customermanagement.UserName userName480,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[25].getName());
             _operationClient.getOptions().setAction("GetCustomer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getCustomerRequest476,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getCustomer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken477!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken477 = toOM(applicationToken477, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementapplicationToken477,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken478!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken478 = toOM(developerToken478, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementdeveloperToken478,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password479!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword479 = toOM(password479, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementpassword479,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName480!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName480 = toOM(userName480, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getCustomer")));
                                                    addHeader(omElementuserName480,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetCustomerResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetCustomer(
                                        (com.microsoft.adcenter.api.customermanagement.GetCustomerResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetCustomer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetCustomer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetCustomer_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetCustomer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetCustomer(f);
                                            }
									    } else {
										    callback.receiveErrorgetCustomer(f);
									    }
									} else {
									    callback.receiveErrorgetCustomer(f);
									}
								} else {
								    callback.receiveErrorgetCustomer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetCustomer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[25].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[25].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#getRequestToManageAccounts
                     * @param getRequestToManageAccountsRequest482
                    
                     * @param applicationToken483
                    
                     * @param developerToken484
                    
                     * @param password485
                    
                     * @param userName486
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse getRequestToManageAccounts(

                            com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest getRequestToManageAccountsRequest482,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken483,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken484,com.microsoft.adcenter.api.customermanagement.Password password485,com.microsoft.adcenter.api.customermanagement.UserName userName486)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
              _operationClient.getOptions().setAction("GetRequestToManageAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRequestToManageAccountsRequest482,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken483!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken483 = toOM(applicationToken483, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken483,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken484!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken484 = toOM(developerToken484, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken484,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password485!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword485 = toOM(password485, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementpassword485,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName486!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName486 = toOM(userName486, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementuserName486,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startgetRequestToManageAccounts
                    * @param getRequestToManageAccountsRequest482
                
                    * @param applicationToken483
                
                    * @param developerToken484
                
                    * @param password485
                
                    * @param userName486
                
                */
                public  void startgetRequestToManageAccounts(

                 com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest getRequestToManageAccountsRequest482,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken483,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken484,
                    com.microsoft.adcenter.api.customermanagement.Password password485,
                    com.microsoft.adcenter.api.customermanagement.UserName userName486,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[26].getName());
             _operationClient.getOptions().setAction("GetRequestToManageAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    getRequestToManageAccountsRequest482,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "getRequestToManageAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken483!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken483 = toOM(applicationToken483, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken483,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken484!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken484 = toOM(developerToken484, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken484,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password485!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword485 = toOM(password485, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementpassword485,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName486!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName486 = toOM(userName486, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "getRequestToManageAccounts")));
                                                    addHeader(omElementuserName486,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultgetRequestToManageAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorgetRequestToManageAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"GetRequestToManageAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorgetRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrorgetRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_GetRequestToManageAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorgetRequestToManageAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorgetRequestToManageAccounts(f);
                                            }
									    } else {
										    callback.receiveErrorgetRequestToManageAccounts(f);
									    }
									} else {
									    callback.receiveErrorgetRequestToManageAccounts(f);
									}
								} else {
								    callback.receiveErrorgetRequestToManageAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorgetRequestToManageAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[26].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[26].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#updateUserRoles
                     * @param updateUserRolesRequest488
                    
                     * @param applicationToken489
                    
                     * @param developerToken490
                    
                     * @param password491
                    
                     * @param userName492
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse updateUserRoles(

                            com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest updateUserRolesRequest488,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken489,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken490,com.microsoft.adcenter.api.customermanagement.Password password491,com.microsoft.adcenter.api.customermanagement.UserName userName492)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
              _operationClient.getOptions().setAction("UpdateUserRoles");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateUserRolesRequest488,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUserRoles")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUserRoles"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken489!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken489 = toOM(applicationToken489, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementapplicationToken489,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken490!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken490 = toOM(developerToken490, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementdeveloperToken490,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password491!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword491 = toOM(password491, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementpassword491,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName492!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName492 = toOM(userName492, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementuserName492,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startupdateUserRoles
                    * @param updateUserRolesRequest488
                
                    * @param applicationToken489
                
                    * @param developerToken490
                
                    * @param password491
                
                    * @param userName492
                
                */
                public  void startupdateUserRoles(

                 com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest updateUserRolesRequest488,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken489,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken490,
                    com.microsoft.adcenter.api.customermanagement.Password password491,
                    com.microsoft.adcenter.api.customermanagement.UserName userName492,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[27].getName());
             _operationClient.getOptions().setAction("UpdateUserRoles");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateUserRolesRequest488,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUserRoles")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateUserRoles"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken489!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken489 = toOM(applicationToken489, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementapplicationToken489,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken490!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken490 = toOM(developerToken490, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementdeveloperToken490,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password491!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword491 = toOM(password491, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementpassword491,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName492!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName492 = toOM(userName492, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateUserRoles")));
                                                    addHeader(omElementuserName492,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateUserRoles(
                                        (com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateUserRoles(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateUserRoles"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateUserRoles((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage){
														callback.receiveErrorupdateUserRoles((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateUserRoles_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateUserRoles(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateUserRoles(f);
                                            }
									    } else {
										    callback.receiveErrorupdateUserRoles(f);
									    }
									} else {
									    callback.receiveErrorupdateUserRoles(f);
									}
								} else {
								    callback.receiveErrorupdateUserRoles(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateUserRoles(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[27].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[27].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#deleteAccount
                     * @param deleteAccountRequest494
                    
                     * @param applicationToken495
                    
                     * @param developerToken496
                    
                     * @param password497
                    
                     * @param userName498
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse deleteAccount(

                            com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest deleteAccountRequest494,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken495,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken496,com.microsoft.adcenter.api.customermanagement.Password password497,com.microsoft.adcenter.api.customermanagement.UserName userName498)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
              _operationClient.getOptions().setAction("DeleteAccount");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAccountRequest494,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteAccount"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken495!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken495 = toOM(applicationToken495, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementapplicationToken495,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken496!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken496 = toOM(developerToken496, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementdeveloperToken496,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password497!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword497 = toOM(password497, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementpassword497,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName498!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName498 = toOM(userName498, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementuserName498,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startdeleteAccount
                    * @param deleteAccountRequest494
                
                    * @param applicationToken495
                
                    * @param developerToken496
                
                    * @param password497
                
                    * @param userName498
                
                */
                public  void startdeleteAccount(

                 com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest deleteAccountRequest494,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken495,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken496,
                    com.microsoft.adcenter.api.customermanagement.Password password497,
                    com.microsoft.adcenter.api.customermanagement.UserName userName498,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[28].getName());
             _operationClient.getOptions().setAction("DeleteAccount");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    deleteAccountRequest494,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteAccount")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "deleteAccount"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken495!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken495 = toOM(applicationToken495, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementapplicationToken495,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken496!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken496 = toOM(developerToken496, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementdeveloperToken496,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password497!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword497 = toOM(password497, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementpassword497,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName498!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName498 = toOM(userName498, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "deleteAccount")));
                                                    addHeader(omElementuserName498,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeleteAccount(
                                        (com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeleteAccount(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeleteAccount"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeleteAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage){
														callback.receiveErrordeleteAccount((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeleteAccount_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeleteAccount(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeleteAccount(f);
                                            }
									    } else {
										    callback.receiveErrordeleteAccount(f);
									    }
									} else {
									    callback.receiveErrordeleteAccount(f);
									}
								} else {
								    callback.receiveErrordeleteAccount(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeleteAccount(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[28].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[28].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#updateCustomer
                     * @param updateCustomerRequest500
                    
                     * @param applicationToken501
                    
                     * @param developerToken502
                    
                     * @param password503
                    
                     * @param userName504
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse updateCustomer(

                            com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest updateCustomerRequest500,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken501,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken502,com.microsoft.adcenter.api.customermanagement.Password password503,com.microsoft.adcenter.api.customermanagement.UserName userName504)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
              _operationClient.getOptions().setAction("UpdateCustomer");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomerRequest500,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateCustomer"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken501!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken501 = toOM(applicationToken501, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementapplicationToken501,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken502!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken502 = toOM(developerToken502, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementdeveloperToken502,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password503!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword503 = toOM(password503, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementpassword503,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName504!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName504 = toOM(userName504, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementuserName504,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startupdateCustomer
                    * @param updateCustomerRequest500
                
                    * @param applicationToken501
                
                    * @param developerToken502
                
                    * @param password503
                
                    * @param userName504
                
                */
                public  void startupdateCustomer(

                 com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest updateCustomerRequest500,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken501,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken502,
                    com.microsoft.adcenter.api.customermanagement.Password password503,
                    com.microsoft.adcenter.api.customermanagement.UserName userName504,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[29].getName());
             _operationClient.getOptions().setAction("UpdateCustomer");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    updateCustomerRequest500,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateCustomer")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "updateCustomer"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken501!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken501 = toOM(applicationToken501, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementapplicationToken501,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken502!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken502 = toOM(developerToken502, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementdeveloperToken502,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password503!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword503 = toOM(password503, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementpassword503,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName504!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName504 = toOM(userName504, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "updateCustomer")));
                                                    addHeader(omElementuserName504,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultupdateCustomer(
                                        (com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorupdateCustomer(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"UpdateCustomer"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrorupdateCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage){
														callback.receiveErrorupdateCustomer((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_UpdateCustomer_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrorupdateCustomer(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorupdateCustomer(f);
                                            }
									    } else {
										    callback.receiveErrorupdateCustomer(f);
									    }
									} else {
									    callback.receiveErrorupdateCustomer(f);
									}
								} else {
								    callback.receiveErrorupdateCustomer(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrorupdateCustomer(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[29].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[29].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#declineRequestToManageAccounts
                     * @param declineRequestToManageAccountsRequest506
                    
                     * @param applicationToken507
                    
                     * @param developerToken508
                    
                     * @param password509
                    
                     * @param userName510
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse declineRequestToManageAccounts(

                            com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest declineRequestToManageAccountsRequest506,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken507,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken508,com.microsoft.adcenter.api.customermanagement.Password password509,com.microsoft.adcenter.api.customermanagement.UserName userName510)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
              _operationClient.getOptions().setAction("DeclineRequestToManageAccounts");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    declineRequestToManageAccountsRequest506,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "declineRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "declineRequestToManageAccounts"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken507!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken507 = toOM(applicationToken507, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken507,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken508!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken508 = toOM(developerToken508, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken508,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password509!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword509 = toOM(password509, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementpassword509,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName510!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName510 = toOM(userName510, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementuserName510,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startdeclineRequestToManageAccounts
                    * @param declineRequestToManageAccountsRequest506
                
                    * @param applicationToken507
                
                    * @param developerToken508
                
                    * @param password509
                
                    * @param userName510
                
                */
                public  void startdeclineRequestToManageAccounts(

                 com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest declineRequestToManageAccountsRequest506,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken507,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken508,
                    com.microsoft.adcenter.api.customermanagement.Password password509,
                    com.microsoft.adcenter.api.customermanagement.UserName userName510,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[30].getName());
             _operationClient.getOptions().setAction("DeclineRequestToManageAccounts");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    declineRequestToManageAccountsRequest506,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "declineRequestToManageAccounts")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "declineRequestToManageAccounts"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken507!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken507 = toOM(applicationToken507, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementapplicationToken507,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken508!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken508 = toOM(developerToken508, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementdeveloperToken508,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password509!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword509 = toOM(password509, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementpassword509,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName510!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName510 = toOM(userName510, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "declineRequestToManageAccounts")));
                                                    addHeader(omElementuserName510,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultdeclineRequestToManageAccounts(
                                        (com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrordeclineRequestToManageAccounts(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"DeclineRequestToManageAccounts"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrordeclineRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage){
														callback.receiveErrordeclineRequestToManageAccounts((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_DeclineRequestToManageAccounts_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrordeclineRequestToManageAccounts(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrordeclineRequestToManageAccounts(f);
                                            }
									    } else {
										    callback.receiveErrordeclineRequestToManageAccounts(f);
									    }
									} else {
									    callback.receiveErrordeclineRequestToManageAccounts(f);
									}
								} else {
								    callback.receiveErrordeclineRequestToManageAccounts(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrordeclineRequestToManageAccounts(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[30].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[30].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#mapAccountIdToExternalAccountIds
                     * @param mapAccountIdToExternalAccountIdsRequest512
                    
                     * @param applicationToken513
                    
                     * @param developerToken514
                    
                     * @param password515
                    
                     * @param userName516
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse mapAccountIdToExternalAccountIds(

                            com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest mapAccountIdToExternalAccountIdsRequest512,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken513,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken514,com.microsoft.adcenter.api.customermanagement.Password password515,com.microsoft.adcenter.api.customermanagement.UserName userName516)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
              _operationClient.getOptions().setAction("MapAccountIdToExternalAccountIds");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mapAccountIdToExternalAccountIdsRequest512,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapAccountIdToExternalAccountIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapAccountIdToExternalAccountIds"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken513!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken513 = toOM(applicationToken513, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementapplicationToken513,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken514!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken514 = toOM(developerToken514, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementdeveloperToken514,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password515!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword515 = toOM(password515, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementpassword515,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName516!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName516 = toOM(userName516, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementuserName516,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startmapAccountIdToExternalAccountIds
                    * @param mapAccountIdToExternalAccountIdsRequest512
                
                    * @param applicationToken513
                
                    * @param developerToken514
                
                    * @param password515
                
                    * @param userName516
                
                */
                public  void startmapAccountIdToExternalAccountIds(

                 com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest mapAccountIdToExternalAccountIdsRequest512,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken513,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken514,
                    com.microsoft.adcenter.api.customermanagement.Password password515,
                    com.microsoft.adcenter.api.customermanagement.UserName userName516,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[31].getName());
             _operationClient.getOptions().setAction("MapAccountIdToExternalAccountIds");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    mapAccountIdToExternalAccountIdsRequest512,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapAccountIdToExternalAccountIds")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "mapAccountIdToExternalAccountIds"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken513!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken513 = toOM(applicationToken513, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementapplicationToken513,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken514!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken514 = toOM(developerToken514, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementdeveloperToken514,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password515!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword515 = toOM(password515, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementpassword515,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName516!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName516 = toOM(userName516, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "mapAccountIdToExternalAccountIds")));
                                                    addHeader(omElementuserName516,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultmapAccountIdToExternalAccountIds(
                                        (com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrormapAccountIdToExternalAccountIds(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"MapAccountIdToExternalAccountIds"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErrormapAccountIdToExternalAccountIds((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage){
														callback.receiveErrormapAccountIdToExternalAccountIds((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_MapAccountIdToExternalAccountIds_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErrormapAccountIdToExternalAccountIds(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrormapAccountIdToExternalAccountIds(f);
                                            }
									    } else {
										    callback.receiveErrormapAccountIdToExternalAccountIds(f);
									    }
									} else {
									    callback.receiveErrormapAccountIdToExternalAccountIds(f);
									}
								} else {
								    callback.receiveErrormapAccountIdToExternalAccountIds(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErrormapAccountIdToExternalAccountIds(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[31].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[31].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                
                    /**
                     * Auto generated method signature
                     * 
                     * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#addUser
                     * @param addUserRequest518
                    
                     * @param applicationToken519
                    
                     * @param developerToken520
                    
                     * @param password521
                    
                     * @param userName522
                    
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage : 
                     * @throws com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage : 
                     */

                    

                            public  com.microsoft.adcenter.api.customermanagement.AddUserResponse addUser(

                            com.microsoft.adcenter.api.customermanagement.AddUserRequest addUserRequest518,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken519,com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken520,com.microsoft.adcenter.api.customermanagement.Password password521,com.microsoft.adcenter.api.customermanagement.UserName userName522)
                        

                    throws java.rmi.RemoteException
                    
                    
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage
                        ,com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage{
              org.apache.axis2.context.MessageContext _messageContext = null;
              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
              _operationClient.getOptions().setAction("AddUser");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addUserRequest518,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addUser"));
                                                
                                               env.build();
                                    
                                        // add the children only if the parameter is not null
                                        if (applicationToken519!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementapplicationToken519 = toOM(applicationToken519, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementapplicationToken519,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (developerToken520!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken520 = toOM(developerToken520, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementdeveloperToken520,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (password521!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementpassword521 = toOM(password521, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementpassword521,env);
                                                
                                        }
                                    
                                        // add the children only if the parameter is not null
                                        if (userName522!=null){
                                            
                                                    org.apache.axiom.om.OMElement omElementuserName522 = toOM(userName522, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementuserName522,env);
                                                
                                        }
                                    
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.microsoft.adcenter.api.customermanagement.AddUserResponse.class,
                                              getEnvelopeNamespaces(_returnEnv));

                               
                                        return (com.microsoft.adcenter.api.customermanagement.AddUserResponse)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"))){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"));
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                        java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"));
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage)ex;
                        }
                        
                        if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage){
                          throw (com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage)ex;
                        }
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
            } finally {
                if (_messageContext.getTransportOut() != null) {
                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                }
            }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * 
                * @see com.microsoft.adcenter.api.customermanagement.CustomerManagementService#startaddUser
                    * @param addUserRequest518
                
                    * @param applicationToken519
                
                    * @param developerToken520
                
                    * @param password521
                
                    * @param userName522
                
                */
                public  void startaddUser(

                 com.microsoft.adcenter.api.customermanagement.AddUserRequest addUserRequest518,com.microsoft.adcenter.api.customermanagement.ApplicationToken applicationToken519,
                    com.microsoft.adcenter.api.customermanagement.DeveloperToken developerToken520,
                    com.microsoft.adcenter.api.customermanagement.Password password521,
                    com.microsoft.adcenter.api.customermanagement.UserName userName522,
                    

                  final com.microsoft.adcenter.api.customermanagement.CustomerManagementServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[32].getName());
             _operationClient.getOptions().setAction("AddUser");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    addUserRequest518,
                                                    optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addUser")), new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement",
                                                    "addUser"));
                                                
                                         // add the soap_headers only if they are not null
                                        if (applicationToken519!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementapplicationToken519 = toOM(applicationToken519, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementapplicationToken519,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (developerToken520!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementdeveloperToken520 = toOM(developerToken520, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementdeveloperToken520,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (password521!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementpassword521 = toOM(password521, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementpassword521,env);
                                                
                                        }
                                    
                                         // add the soap_headers only if they are not null
                                        if (userName522!=null){
                                           
                                                    org.apache.axiom.om.OMElement omElementuserName522 = toOM(userName522, optimizeContent(new javax.xml.namespace.QName("https://adcenter.microsoft.com/api/customermanagement", "addUser")));
                                                    addHeader(omElementuserName522,env);
                                                
                                        }
                                    
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.microsoft.adcenter.api.customermanagement.AddUserResponse.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultaddUser(
                                        (com.microsoft.adcenter.api.customermanagement.AddUserResponse)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErroraddUser(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"))){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"));
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.reflect.Constructor constructor = exceptionClass.getConstructor(String.class);
                                                    java.lang.Exception ex = (java.lang.Exception) constructor.newInstance(f.getMessage());
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"AddUser"));
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage){
														callback.receiveErroraddUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_AdApiFaultDetailFault_FaultMessage)ex);
											            return;
										            }
										            
													if (ex instanceof com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage){
														callback.receiveErroraddUser((com.microsoft.adcenter.api.customermanagement.ICustomerManagementService_AddUser_ApiFaultFault_FaultMessage)ex);
											            return;
										            }
										            
					
										            callback.receiveErroraddUser(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErroraddUser(f);
                                            }
									    } else {
										    callback.receiveErroraddUser(f);
									    }
									} else {
									    callback.receiveErroraddUser(f);
									}
								} else {
								    callback.receiveErroraddUser(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                try {
                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                                } catch (org.apache.axis2.AxisFault axisFault) {
                                    callback.receiveErroraddUser(axisFault);
                                }
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[32].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[32].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    ////////////////////////////////////////////////////////////////////////
    
    private static org.apache.neethi.Policy getPolicy (java.lang.String policyString) {
    	return org.apache.neethi.PolicyEngine.getPolicy(org.apache.axiom.om.OMXMLBuilderFactory.createOMBuilder(
    	        new java.io.StringReader(policyString)).getDocument().getXMLStreamReader(false));
    }
    
    /////////////////////////////////////////////////////////////////////////

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //https://sharedservices.adcenterapi.microsoft.com/Api/CustomerManagement/v8/CustomerManagementService.svc
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adapi.AdApiFaultDetailE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adapi.AdApiFaultDetailE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.ApplicationToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.ApplicationToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeveloperToken param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeveloperToken.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.Password param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.Password.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UserName param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UserName.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.TrackingId param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.TrackingId.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateUserRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.FindAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.FindAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteUserRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteUserRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccountRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetAccountResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddAccountRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddAccountRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddAccountResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddAccountResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetUserRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUserRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomerRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetCustomerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddUserRequest param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddUserRequest.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.microsoft.adcenter.api.customermanagement.AddUserResponse param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddUserResponse.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.UpdateUserRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.FindAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.DeleteUserRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteUserRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetAccountRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetAccountRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.AddAccountRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddAccountRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetUserRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetUserRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetCustomerRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetCustomerRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             
                                    
                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.microsoft.adcenter.api.customermanagement.AddUserRequest param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
                                        throws org.apache.axis2.AxisFault{

                                             
                                                    try{

                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                            emptyEnvelope.getBody().addChild(param.getOMElement(com.microsoft.adcenter.api.customermanagement.AddUserRequest.MY_QNAME,factory));
                                                            return emptyEnvelope;
                                                        } catch(org.apache.axis2.databinding.ADBException e){
                                                            throw org.apache.axis2.AxisFault.makeFault(e);
                                                        }
                                                

                                        }
                                
                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCurrentUserRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCurrentUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.CancelRequestToManageAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpgradeCustomerToAgencyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteCustomerRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteCustomerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateUserRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateUserRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateUserResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccessibleCustomerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.FindAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.FindAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.FindAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.FindAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateAccountRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateAccountResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SignupCustomerRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SignupCustomerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SendRequestToManageAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteUserRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteUserRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteUserResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetPilotFeaturesCountriesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccountsInfoRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccountsInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.FindAccountsOrCustomersInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomersInfoRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomersInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddPrepayAccountRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddPrepayAccountResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccountRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccountRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetAccountResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetAccountResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.SendRequestToStopManagingAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AcceptRequestToManageAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsInfosResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.MapCustomerIdToExternalCustomerIdResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddAccountRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddAccountRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddAccountResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddAccountResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomerPilotFeatureResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetUsersInfoRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetUsersInfoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetUserRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetUserRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetUserResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomerRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomerRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetCustomerResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetCustomerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.GetRequestToManageAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateUserRolesRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateUserRolesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteAccountRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeleteAccountResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateCustomerRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UpdateCustomerResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeclineRequestToManageAccountsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.MapAccountIdToExternalAccountIdsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddUserRequest.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddUserRequest.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.AddUserResponse.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.AddUserResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adapi.AdApiFaultDetailE.class.equals(type)){
                
                           return com.microsoft.adapi.AdApiFaultDetailE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.exception.ApiFaultE.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.ApplicationToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.ApplicationToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.DeveloperToken.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.DeveloperToken.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.Password.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.Password.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.UserName.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.UserName.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.microsoft.adcenter.api.customermanagement.TrackingId.class.equals(type)){
                
                           return com.microsoft.adcenter.api.customermanagement.TrackingId.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   