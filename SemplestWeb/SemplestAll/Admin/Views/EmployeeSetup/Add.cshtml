@model Semplest.Admin.Models.EmployeeSetupWithRolesModel
@section NavBar {
    <script src="@Url.Content("~/Scripts/PanelBar.js")" type="text/javascript"></script>
}
@section Title{
Add Employee:
}
@section headscript{
    <script src="@Url.Content("~/Scripts/jquery.maskedinput-1.3.js")" type="text/javascript"></script>
    <script type="text/jscript">
        $(document).ready(function () {
            $("#EmployeeSetup_HireDate").kendoDatePicker();
        });


        jQuery(function ($) {

            $("#EmployeeSetup_MiddleInitial").mask("a");

        });


    </script>
}
@section Links{
    @Html.Partial("TopMenu")
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.FirstName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.FirstName, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.FirstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.MiddleInitial)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.MiddleInitial, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.MiddleInitial)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.LastName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.LastName, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.Email)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.Email, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.Email)
        </div>
        <div class="editor-label">
            <label>
                Hire Date:</label>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.HireDate, new { @class = "k-textbox" })
        </div>
        <div class="editor-label">
            <label>
                Role</label>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(r => r.SelectedRoleID, Model.Roles)
        </div>
        <div class="editor-label">
            <label>
                Employee Type</label>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(r => r.SelectedEmployeeTypeID, Model.EmployeeTypes)
        </div>
        
        <div class="editor-label">
            <label>
                Reporting To</label>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(r => r.SelectedReportingToID, Model.ReportingTo)
        </div>
        <br />
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.UserID)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EmployeeSetup.UserID, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.UserID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeSetup.UserPassword)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.EmployeeSetup.UserPassword, new { @class = "k-textbox" })
            @Html.ValidationMessageFor(model => model.EmployeeSetup.UserPassword)
        </div>
        <br />
        <div class="editor-label">
            Status
        </div>
        <div class="editor-field">
            Active
            @Html.RadioButtonFor(model => model.EmployeeSetup.isActive, "True", new { @checked = "checked" })
            Inactive
            @Html.RadioButtonFor(model => model.EmployeeSetup.isActive, "False")
        </div>
    </fieldset>   
    
    <p>
        <input type="submit"  name="command" value="Save" class="k-button" /> <input type="submit"  name="command" value="Cancel" class="k-button cancel" />
    </p>
}
<div>
   @* @Html.ActionLink("Back to List", "Index")*@
</div>
