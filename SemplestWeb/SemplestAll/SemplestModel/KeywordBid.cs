//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class KeywordBid
    {
        #region Primitive Properties
    
        public virtual int KeywordBidPK
        {
            get;
            set;
        }
    
        public virtual int KeywordFK
        {
            get { return _keywordFK; }
            set
            {
                if (_keywordFK != value)
                {
                    if (PromotionKeywordAssociation != null && PromotionKeywordAssociation.KeywordFK != value)
                    {
                        PromotionKeywordAssociation = null;
                    }
                    _keywordFK = value;
                }
            }
        }
        private int _keywordFK;
    
        public virtual int AdvertisingEngineFK
        {
            get { return _advertisingEngineFK; }
            set
            {
                if (_advertisingEngineFK != value)
                {
                    if (AdvertisingEngine != null && AdvertisingEngine.AdvertisingEnginePK != value)
                    {
                        AdvertisingEngine = null;
                    }
                    _advertisingEngineFK = value;
                }
            }
        }
        private int _advertisingEngineFK;
    
        public virtual int PromotionFK
        {
            get { return _promotionFK; }
            set
            {
                if (_promotionFK != value)
                {
                    if (PromotionKeywordAssociation != null && PromotionKeywordAssociation.PromotionFK != value)
                    {
                        PromotionKeywordAssociation = null;
                    }
                    _promotionFK = value;
                }
            }
        }
        private int _promotionFK;
    
        public virtual System.DateTime StartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> EndDate
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual int BidTypeFK
        {
            get { return _bidTypeFK; }
            set
            {
                if (_bidTypeFK != value)
                {
                    if (BidType != null && BidType.BidTypePK != value)
                    {
                        BidType = null;
                    }
                    _bidTypeFK = value;
                }
            }
        }
        private int _bidTypeFK;
    
        public virtual int MicroBidAmount
        {
            get;
            set;
        }
    
        public virtual Nullable<long> KeywordAdEngineID
        {
            get;
            set;
        }
    
        public virtual string CompetitionType
        {
            get;
            set;
        }
    
        public virtual bool IsDefaultValue
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual AdvertisingEngine AdvertisingEngine
        {
            get { return _advertisingEngine; }
            set
            {
                if (!ReferenceEquals(_advertisingEngine, value))
                {
                    var previousValue = _advertisingEngine;
                    _advertisingEngine = value;
                    FixupAdvertisingEngine(previousValue);
                }
            }
        }
        private AdvertisingEngine _advertisingEngine;
    
        public virtual ICollection<AdvertisingEngineReportData> AdvertisingEngineReportDatas
        {
            get
            {
                if (_advertisingEngineReportDatas == null)
                {
                    var newCollection = new FixupCollection<AdvertisingEngineReportData>();
                    newCollection.CollectionChanged += FixupAdvertisingEngineReportDatas;
                    _advertisingEngineReportDatas = newCollection;
                }
                return _advertisingEngineReportDatas;
            }
            set
            {
                if (!ReferenceEquals(_advertisingEngineReportDatas, value))
                {
                    var previousValue = _advertisingEngineReportDatas as FixupCollection<AdvertisingEngineReportData>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdvertisingEngineReportDatas;
                    }
                    _advertisingEngineReportDatas = value;
                    var newValue = value as FixupCollection<AdvertisingEngineReportData>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdvertisingEngineReportDatas;
                    }
                }
            }
        }
        private ICollection<AdvertisingEngineReportData> _advertisingEngineReportDatas;
    
        public virtual BidType BidType
        {
            get { return _bidType; }
            set
            {
                if (!ReferenceEquals(_bidType, value))
                {
                    var previousValue = _bidType;
                    _bidType = value;
                    FixupBidType(previousValue);
                }
            }
        }
        private BidType _bidType;
    
        public virtual ICollection<KeywordBidData> KeywordBidDatas
        {
            get
            {
                if (_keywordBidDatas == null)
                {
                    var newCollection = new FixupCollection<KeywordBidData>();
                    newCollection.CollectionChanged += FixupKeywordBidDatas;
                    _keywordBidDatas = newCollection;
                }
                return _keywordBidDatas;
            }
            set
            {
                if (!ReferenceEquals(_keywordBidDatas, value))
                {
                    var previousValue = _keywordBidDatas as FixupCollection<KeywordBidData>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupKeywordBidDatas;
                    }
                    _keywordBidDatas = value;
                    var newValue = value as FixupCollection<KeywordBidData>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupKeywordBidDatas;
                    }
                }
            }
        }
        private ICollection<KeywordBidData> _keywordBidDatas;
    
        public virtual ICollection<TrafficEstimator> TrafficEstimators
        {
            get
            {
                if (_trafficEstimators == null)
                {
                    var newCollection = new FixupCollection<TrafficEstimator>();
                    newCollection.CollectionChanged += FixupTrafficEstimators;
                    _trafficEstimators = newCollection;
                }
                return _trafficEstimators;
            }
            set
            {
                if (!ReferenceEquals(_trafficEstimators, value))
                {
                    var previousValue = _trafficEstimators as FixupCollection<TrafficEstimator>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTrafficEstimators;
                    }
                    _trafficEstimators = value;
                    var newValue = value as FixupCollection<TrafficEstimator>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTrafficEstimators;
                    }
                }
            }
        }
        private ICollection<TrafficEstimator> _trafficEstimators;
    
        public virtual PromotionKeywordAssociation PromotionKeywordAssociation
        {
            get { return _promotionKeywordAssociation; }
            set
            {
                if (!ReferenceEquals(_promotionKeywordAssociation, value))
                {
                    var previousValue = _promotionKeywordAssociation;
                    _promotionKeywordAssociation = value;
                    FixupPromotionKeywordAssociation(previousValue);
                }
            }
        }
        private PromotionKeywordAssociation _promotionKeywordAssociation;

        #endregion
        #region Association Fixup
    
        private void FixupAdvertisingEngine(AdvertisingEngine previousValue)
        {
            if (previousValue != null && previousValue.KeywordBids.Contains(this))
            {
                previousValue.KeywordBids.Remove(this);
            }
    
            if (AdvertisingEngine != null)
            {
                if (!AdvertisingEngine.KeywordBids.Contains(this))
                {
                    AdvertisingEngine.KeywordBids.Add(this);
                }
                if (AdvertisingEngineFK != AdvertisingEngine.AdvertisingEnginePK)
                {
                    AdvertisingEngineFK = AdvertisingEngine.AdvertisingEnginePK;
                }
            }
        }
    
        private void FixupBidType(BidType previousValue)
        {
            if (previousValue != null && previousValue.KeywordBids.Contains(this))
            {
                previousValue.KeywordBids.Remove(this);
            }
    
            if (BidType != null)
            {
                if (!BidType.KeywordBids.Contains(this))
                {
                    BidType.KeywordBids.Add(this);
                }
                if (BidTypeFK != BidType.BidTypePK)
                {
                    BidTypeFK = BidType.BidTypePK;
                }
            }
        }
    
        private void FixupPromotionKeywordAssociation(PromotionKeywordAssociation previousValue)
        {
            if (previousValue != null && previousValue.KeywordBids.Contains(this))
            {
                previousValue.KeywordBids.Remove(this);
            }
    
            if (PromotionKeywordAssociation != null)
            {
                if (!PromotionKeywordAssociation.KeywordBids.Contains(this))
                {
                    PromotionKeywordAssociation.KeywordBids.Add(this);
                }
                if (KeywordFK != PromotionKeywordAssociation.KeywordFK)
                {
                    KeywordFK = PromotionKeywordAssociation.KeywordFK;
                }
                if (PromotionFK != PromotionKeywordAssociation.PromotionFK)
                {
                    PromotionFK = PromotionKeywordAssociation.PromotionFK;
                }
            }
        }
    
        private void FixupAdvertisingEngineReportDatas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdvertisingEngineReportData item in e.NewItems)
                {
                    item.KeywordBid = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdvertisingEngineReportData item in e.OldItems)
                {
                    if (ReferenceEquals(item.KeywordBid, this))
                    {
                        item.KeywordBid = null;
                    }
                }
            }
        }
    
        private void FixupKeywordBidDatas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (KeywordBidData item in e.NewItems)
                {
                    item.KeywordBid = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KeywordBidData item in e.OldItems)
                {
                    if (ReferenceEquals(item.KeywordBid, this))
                    {
                        item.KeywordBid = null;
                    }
                }
            }
        }
    
        private void FixupTrafficEstimators(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TrafficEstimator item in e.NewItems)
                {
                    item.KeywordBid = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TrafficEstimator item in e.OldItems)
                {
                    if (ReferenceEquals(item.KeywordBid, this))
                    {
                        item.KeywordBid = null;
                    }
                }
            }
        }

        #endregion
    }
}
