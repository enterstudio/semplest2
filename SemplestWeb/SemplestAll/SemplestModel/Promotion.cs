//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class Promotion
    {
        #region Primitive Properties
    
        public virtual int PromotionPK
        {
            get;
            set;
        }
    
        public virtual int ProductGroupFK
        {
            get { return _productGroupFK; }
            set
            {
                if (_productGroupFK != value)
                {
                    if (ProductGroup != null && ProductGroup.ProductGroupPK != value)
                    {
                        ProductGroup = null;
                    }
                    _productGroupFK = value;
                }
            }
        }
        private int _productGroupFK;
    
        public virtual string PromotionName
        {
            get;
            set;
        }
    
        public virtual string PromotionDescription
        {
            get;
            set;
        }
    
        public virtual System.DateTime PromotionStartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> PromotionEndDate
        {
            get;
            set;
        }
    
        public virtual string LandingPageURL
        {
            get;
            set;
        }
    
        public virtual decimal PromotionBudgetAmount
        {
            get;
            set;
        }
    
        public virtual int BudgetCycleFK
        {
            get { return _budgetCycleFK; }
            set
            {
                if (_budgetCycleFK != value)
                {
                    if (BudgetCycle != null && BudgetCycle.BudgetCyclePK != value)
                    {
                        BudgetCycle = null;
                    }
                    _budgetCycleFK = value;
                }
            }
        }
        private int _budgetCycleFK;
    
        public virtual Nullable<System.DateTime> CycleStartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> CycleEndDate
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> StartBudgetInCycle
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> RemainingBudgetInCycle
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> BudgetToAddToNextCycle
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> BudgetToAddDate
        {
            get;
            set;
        }
    
        public virtual bool IsPaused
        {
            get;
            set;
        }
    
        public virtual bool IsCompleted
        {
            get;
            set;
        }
    
        public virtual bool IsLaunched
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> EditedDate
        {
            get;
            set;
        }
    
        public virtual bool IsDeleted
        {
            get;
            set;
        }
    
        public virtual string TargetCPCLevel
        {
            get;
            set;
        }
    
        public virtual string DisplayURL
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<AdvertisingEnginePromotion> AdvertisingEnginePromotions
        {
            get
            {
                if (_advertisingEnginePromotions == null)
                {
                    var newCollection = new FixupCollection<AdvertisingEnginePromotion>();
                    newCollection.CollectionChanged += FixupAdvertisingEnginePromotions;
                    _advertisingEnginePromotions = newCollection;
                }
                return _advertisingEnginePromotions;
            }
            set
            {
                if (!ReferenceEquals(_advertisingEnginePromotions, value))
                {
                    var previousValue = _advertisingEnginePromotions as FixupCollection<AdvertisingEnginePromotion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAdvertisingEnginePromotions;
                    }
                    _advertisingEnginePromotions = value;
                    var newValue = value as FixupCollection<AdvertisingEnginePromotion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAdvertisingEnginePromotions;
                    }
                }
            }
        }
        private ICollection<AdvertisingEnginePromotion> _advertisingEnginePromotions;
    
        public virtual BudgetCycle BudgetCycle
        {
            get { return _budgetCycle; }
            set
            {
                if (!ReferenceEquals(_budgetCycle, value))
                {
                    var previousValue = _budgetCycle;
                    _budgetCycle = value;
                    FixupBudgetCycle(previousValue);
                }
            }
        }
        private BudgetCycle _budgetCycle;
    
        public virtual ICollection<GeoTargeting> GeoTargetings
        {
            get
            {
                if (_geoTargetings == null)
                {
                    var newCollection = new FixupCollection<GeoTargeting>();
                    newCollection.CollectionChanged += FixupGeoTargetings;
                    _geoTargetings = newCollection;
                }
                return _geoTargetings;
            }
            set
            {
                if (!ReferenceEquals(_geoTargetings, value))
                {
                    var previousValue = _geoTargetings as FixupCollection<GeoTargeting>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupGeoTargetings;
                    }
                    _geoTargetings = value;
                    var newValue = value as FixupCollection<GeoTargeting>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupGeoTargetings;
                    }
                }
            }
        }
        private ICollection<GeoTargeting> _geoTargetings;
    
        public virtual ICollection<KeywordCategory> KeywordCategories
        {
            get
            {
                if (_keywordCategories == null)
                {
                    var newCollection = new FixupCollection<KeywordCategory>();
                    newCollection.CollectionChanged += FixupKeywordCategories;
                    _keywordCategories = newCollection;
                }
                return _keywordCategories;
            }
            set
            {
                if (!ReferenceEquals(_keywordCategories, value))
                {
                    var previousValue = _keywordCategories as FixupCollection<KeywordCategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupKeywordCategories;
                    }
                    _keywordCategories = value;
                    var newValue = value as FixupCollection<KeywordCategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupKeywordCategories;
                    }
                }
            }
        }
        private ICollection<KeywordCategory> _keywordCategories;
    
        public virtual ProductGroup ProductGroup
        {
            get { return _productGroup; }
            set
            {
                if (!ReferenceEquals(_productGroup, value))
                {
                    var previousValue = _productGroup;
                    _productGroup = value;
                    FixupProductGroup(previousValue);
                }
            }
        }
        private ProductGroup _productGroup;
    
        public virtual ICollection<PromotionAdEngineSelected> PromotionAdEngineSelecteds
        {
            get
            {
                if (_promotionAdEngineSelecteds == null)
                {
                    var newCollection = new FixupCollection<PromotionAdEngineSelected>();
                    newCollection.CollectionChanged += FixupPromotionAdEngineSelecteds;
                    _promotionAdEngineSelecteds = newCollection;
                }
                return _promotionAdEngineSelecteds;
            }
            set
            {
                if (!ReferenceEquals(_promotionAdEngineSelecteds, value))
                {
                    var previousValue = _promotionAdEngineSelecteds as FixupCollection<PromotionAdEngineSelected>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPromotionAdEngineSelecteds;
                    }
                    _promotionAdEngineSelecteds = value;
                    var newValue = value as FixupCollection<PromotionAdEngineSelected>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPromotionAdEngineSelecteds;
                    }
                }
            }
        }
        private ICollection<PromotionAdEngineSelected> _promotionAdEngineSelecteds;
    
        public virtual ICollection<PromotionAdengineStatu> PromotionAdengineStatus
        {
            get
            {
                if (_promotionAdengineStatus == null)
                {
                    var newCollection = new FixupCollection<PromotionAdengineStatu>();
                    newCollection.CollectionChanged += FixupPromotionAdengineStatus;
                    _promotionAdengineStatus = newCollection;
                }
                return _promotionAdengineStatus;
            }
            set
            {
                if (!ReferenceEquals(_promotionAdengineStatus, value))
                {
                    var previousValue = _promotionAdengineStatus as FixupCollection<PromotionAdengineStatu>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPromotionAdengineStatus;
                    }
                    _promotionAdengineStatus = value;
                    var newValue = value as FixupCollection<PromotionAdengineStatu>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPromotionAdengineStatus;
                    }
                }
            }
        }
        private ICollection<PromotionAdengineStatu> _promotionAdengineStatus;
    
        public virtual ICollection<PromotionAd> PromotionAds
        {
            get
            {
                if (_promotionAds == null)
                {
                    var newCollection = new FixupCollection<PromotionAd>();
                    newCollection.CollectionChanged += FixupPromotionAds;
                    _promotionAds = newCollection;
                }
                return _promotionAds;
            }
            set
            {
                if (!ReferenceEquals(_promotionAds, value))
                {
                    var previousValue = _promotionAds as FixupCollection<PromotionAd>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPromotionAds;
                    }
                    _promotionAds = value;
                    var newValue = value as FixupCollection<PromotionAd>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPromotionAds;
                    }
                }
            }
        }
        private ICollection<PromotionAd> _promotionAds;
    
        public virtual ICollection<PromotionKeywordAssociation> PromotionKeywordAssociations
        {
            get
            {
                if (_promotionKeywordAssociations == null)
                {
                    var newCollection = new FixupCollection<PromotionKeywordAssociation>();
                    newCollection.CollectionChanged += FixupPromotionKeywordAssociations;
                    _promotionKeywordAssociations = newCollection;
                }
                return _promotionKeywordAssociations;
            }
            set
            {
                if (!ReferenceEquals(_promotionKeywordAssociations, value))
                {
                    var previousValue = _promotionKeywordAssociations as FixupCollection<PromotionKeywordAssociation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPromotionKeywordAssociations;
                    }
                    _promotionKeywordAssociations = value;
                    var newValue = value as FixupCollection<PromotionKeywordAssociation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPromotionKeywordAssociations;
                    }
                }
            }
        }
        private ICollection<PromotionKeywordAssociation> _promotionKeywordAssociations;
    
        public virtual ICollection<PromotionPayment> PromotionPayments
        {
            get
            {
                if (_promotionPayments == null)
                {
                    var newCollection = new FixupCollection<PromotionPayment>();
                    newCollection.CollectionChanged += FixupPromotionPayments;
                    _promotionPayments = newCollection;
                }
                return _promotionPayments;
            }
            set
            {
                if (!ReferenceEquals(_promotionPayments, value))
                {
                    var previousValue = _promotionPayments as FixupCollection<PromotionPayment>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupPromotionPayments;
                    }
                    _promotionPayments = value;
                    var newValue = value as FixupCollection<PromotionPayment>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupPromotionPayments;
                    }
                }
            }
        }
        private ICollection<PromotionPayment> _promotionPayments;
    
        public virtual ICollection<Schedule> Schedules
        {
            get
            {
                if (_schedules == null)
                {
                    var newCollection = new FixupCollection<Schedule>();
                    newCollection.CollectionChanged += FixupSchedules;
                    _schedules = newCollection;
                }
                return _schedules;
            }
            set
            {
                if (!ReferenceEquals(_schedules, value))
                {
                    var previousValue = _schedules as FixupCollection<Schedule>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSchedules;
                    }
                    _schedules = value;
                    var newValue = value as FixupCollection<Schedule>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSchedules;
                    }
                }
            }
        }
        private ICollection<Schedule> _schedules;
    
        public virtual ICollection<SiteLink> SiteLinks
        {
            get
            {
                if (_siteLinks == null)
                {
                    var newCollection = new FixupCollection<SiteLink>();
                    newCollection.CollectionChanged += FixupSiteLinks;
                    _siteLinks = newCollection;
                }
                return _siteLinks;
            }
            set
            {
                if (!ReferenceEquals(_siteLinks, value))
                {
                    var previousValue = _siteLinks as FixupCollection<SiteLink>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSiteLinks;
                    }
                    _siteLinks = value;
                    var newValue = value as FixupCollection<SiteLink>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSiteLinks;
                    }
                }
            }
        }
        private ICollection<SiteLink> _siteLinks;
    
        public virtual ICollection<TargetedDailyBudget> TargetedDailyBudgets
        {
            get
            {
                if (_targetedDailyBudgets == null)
                {
                    var newCollection = new FixupCollection<TargetedDailyBudget>();
                    newCollection.CollectionChanged += FixupTargetedDailyBudgets;
                    _targetedDailyBudgets = newCollection;
                }
                return _targetedDailyBudgets;
            }
            set
            {
                if (!ReferenceEquals(_targetedDailyBudgets, value))
                {
                    var previousValue = _targetedDailyBudgets as FixupCollection<TargetedDailyBudget>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTargetedDailyBudgets;
                    }
                    _targetedDailyBudgets = value;
                    var newValue = value as FixupCollection<TargetedDailyBudget>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTargetedDailyBudgets;
                    }
                }
            }
        }
        private ICollection<TargetedDailyBudget> _targetedDailyBudgets;

        #endregion
        #region Association Fixup
    
        private void FixupBudgetCycle(BudgetCycle previousValue)
        {
            if (previousValue != null && previousValue.Promotions.Contains(this))
            {
                previousValue.Promotions.Remove(this);
            }
    
            if (BudgetCycle != null)
            {
                if (!BudgetCycle.Promotions.Contains(this))
                {
                    BudgetCycle.Promotions.Add(this);
                }
                if (BudgetCycleFK != BudgetCycle.BudgetCyclePK)
                {
                    BudgetCycleFK = BudgetCycle.BudgetCyclePK;
                }
            }
        }
    
        private void FixupProductGroup(ProductGroup previousValue)
        {
            if (previousValue != null && previousValue.Promotions.Contains(this))
            {
                previousValue.Promotions.Remove(this);
            }
    
            if (ProductGroup != null)
            {
                if (!ProductGroup.Promotions.Contains(this))
                {
                    ProductGroup.Promotions.Add(this);
                }
                if (ProductGroupFK != ProductGroup.ProductGroupPK)
                {
                    ProductGroupFK = ProductGroup.ProductGroupPK;
                }
            }
        }
    
        private void FixupAdvertisingEnginePromotions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AdvertisingEnginePromotion item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AdvertisingEnginePromotion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupGeoTargetings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (GeoTargeting item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (GeoTargeting item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupKeywordCategories(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (KeywordCategory item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KeywordCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupPromotionAdEngineSelecteds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PromotionAdEngineSelected item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PromotionAdEngineSelected item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupPromotionAdengineStatus(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PromotionAdengineStatu item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PromotionAdengineStatu item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupPromotionAds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PromotionAd item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PromotionAd item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupPromotionKeywordAssociations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PromotionKeywordAssociation item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PromotionKeywordAssociation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupPromotionPayments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (PromotionPayment item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PromotionPayment item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupSchedules(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Schedule item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Schedule item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupSiteLinks(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SiteLink item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SiteLink item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }
    
        private void FixupTargetedDailyBudgets(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TargetedDailyBudget item in e.NewItems)
                {
                    item.Promotion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TargetedDailyBudget item in e.OldItems)
                {
                    if (ReferenceEquals(item.Promotion, this))
                    {
                        item.Promotion = null;
                    }
                }
            }
        }

        #endregion
    }
}
