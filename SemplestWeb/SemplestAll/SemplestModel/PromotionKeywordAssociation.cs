//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class PromotionKeywordAssociation
    {
        #region Primitive Properties
    
        public virtual int KeywordFK
        {
            get { return _keywordFK; }
            set
            {
                if (_keywordFK != value)
                {
                    if (Keyword != null && Keyword.KeywordPK != value)
                    {
                        Keyword = null;
                    }
                    _keywordFK = value;
                }
            }
        }
        private int _keywordFK;
    
        public virtual int PromotionFK
        {
            get { return _promotionFK; }
            set
            {
                if (_promotionFK != value)
                {
                    if (Promotion != null && Promotion.PromotionPK != value)
                    {
                        Promotion = null;
                    }
                    _promotionFK = value;
                }
            }
        }
        private int _promotionFK;
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual bool IsActive
        {
            get;
            set;
        }
    
        public virtual bool IsDeleted
        {
            get;
            set;
        }
    
        public virtual bool IsNegative
        {
            get;
            set;
        }
    
        public virtual Nullable<double> SemplestProbability
        {
            get;
            set;
        }
    
        public virtual bool IsTargetMSN
        {
            get;
            set;
        }
    
        public virtual bool IsTargetGoogle
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Keyword Keyword
        {
            get { return _keyword; }
            set
            {
                if (!ReferenceEquals(_keyword, value))
                {
                    var previousValue = _keyword;
                    _keyword = value;
                    FixupKeyword(previousValue);
                }
            }
        }
        private Keyword _keyword;
    
        public virtual ICollection<KeywordBid> KeywordBids
        {
            get
            {
                if (_keywordBids == null)
                {
                    var newCollection = new FixupCollection<KeywordBid>();
                    newCollection.CollectionChanged += FixupKeywordBids;
                    _keywordBids = newCollection;
                }
                return _keywordBids;
            }
            set
            {
                if (!ReferenceEquals(_keywordBids, value))
                {
                    var previousValue = _keywordBids as FixupCollection<KeywordBid>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupKeywordBids;
                    }
                    _keywordBids = value;
                    var newValue = value as FixupCollection<KeywordBid>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupKeywordBids;
                    }
                }
            }
        }
        private ICollection<KeywordBid> _keywordBids;
    
        public virtual Promotion Promotion
        {
            get { return _promotion; }
            set
            {
                if (!ReferenceEquals(_promotion, value))
                {
                    var previousValue = _promotion;
                    _promotion = value;
                    FixupPromotion(previousValue);
                }
            }
        }
        private Promotion _promotion;

        #endregion
        #region Association Fixup
    
        private void FixupKeyword(Keyword previousValue)
        {
            if (previousValue != null && previousValue.PromotionKeywordAssociations.Contains(this))
            {
                previousValue.PromotionKeywordAssociations.Remove(this);
            }
    
            if (Keyword != null)
            {
                if (!Keyword.PromotionKeywordAssociations.Contains(this))
                {
                    Keyword.PromotionKeywordAssociations.Add(this);
                }
                if (KeywordFK != Keyword.KeywordPK)
                {
                    KeywordFK = Keyword.KeywordPK;
                }
            }
        }
    
        private void FixupPromotion(Promotion previousValue)
        {
            if (previousValue != null && previousValue.PromotionKeywordAssociations.Contains(this))
            {
                previousValue.PromotionKeywordAssociations.Remove(this);
            }
    
            if (Promotion != null)
            {
                if (!Promotion.PromotionKeywordAssociations.Contains(this))
                {
                    Promotion.PromotionKeywordAssociations.Add(this);
                }
                if (PromotionFK != Promotion.PromotionPK)
                {
                    PromotionFK = Promotion.PromotionPK;
                }
            }
        }
    
        private void FixupKeywordBids(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (KeywordBid item in e.NewItems)
                {
                    item.PromotionKeywordAssociation = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (KeywordBid item in e.OldItems)
                {
                    if (ReferenceEquals(item.PromotionKeywordAssociation, this))
                    {
                        item.PromotionKeywordAssociation = null;
                    }
                }
            }
        }

        #endregion
    }
}
