//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class Employee
    {
        #region Primitive Properties
    
        public virtual int EmployeePK
        {
            get;
            set;
        }
    
        public virtual int EmployeeTypeFK
        {
            get { return _employeeTypeFK; }
            set
            {
                if (_employeeTypeFK != value)
                {
                    if (EmployeeType != null && EmployeeType.EmployeeTypeID != value)
                    {
                        EmployeeType = null;
                    }
                    _employeeTypeFK = value;
                }
            }
        }
        private int _employeeTypeFK;
    
        public virtual int UsersFK
        {
            get { return _usersFK; }
            set
            {
                if (_usersFK != value)
                {
                    if (User != null && User.UserPK != value)
                    {
                        User = null;
                    }
                    _usersFK = value;
                }
            }
        }
        private int _usersFK;
    
        public virtual Nullable<int> ReportingTo
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> HireDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<EmployeeCustomerAssociation> EmployeeCustomerAssociations
        {
            get
            {
                if (_employeeCustomerAssociations == null)
                {
                    var newCollection = new FixupCollection<EmployeeCustomerAssociation>();
                    newCollection.CollectionChanged += FixupEmployeeCustomerAssociations;
                    _employeeCustomerAssociations = newCollection;
                }
                return _employeeCustomerAssociations;
            }
            set
            {
                if (!ReferenceEquals(_employeeCustomerAssociations, value))
                {
                    var previousValue = _employeeCustomerAssociations as FixupCollection<EmployeeCustomerAssociation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployeeCustomerAssociations;
                    }
                    _employeeCustomerAssociations = value;
                    var newValue = value as FixupCollection<EmployeeCustomerAssociation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployeeCustomerAssociations;
                    }
                }
            }
        }
        private ICollection<EmployeeCustomerAssociation> _employeeCustomerAssociations;
    
        public virtual ICollection<EmployeePhoneAssociation> EmployeePhoneAssociations
        {
            get
            {
                if (_employeePhoneAssociations == null)
                {
                    var newCollection = new FixupCollection<EmployeePhoneAssociation>();
                    newCollection.CollectionChanged += FixupEmployeePhoneAssociations;
                    _employeePhoneAssociations = newCollection;
                }
                return _employeePhoneAssociations;
            }
            set
            {
                if (!ReferenceEquals(_employeePhoneAssociations, value))
                {
                    var previousValue = _employeePhoneAssociations as FixupCollection<EmployeePhoneAssociation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployeePhoneAssociations;
                    }
                    _employeePhoneAssociations = value;
                    var newValue = value as FixupCollection<EmployeePhoneAssociation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployeePhoneAssociations;
                    }
                }
            }
        }
        private ICollection<EmployeePhoneAssociation> _employeePhoneAssociations;
    
        public virtual EmployeeType EmployeeType
        {
            get { return _employeeType; }
            set
            {
                if (!ReferenceEquals(_employeeType, value))
                {
                    var previousValue = _employeeType;
                    _employeeType = value;
                    FixupEmployeeType(previousValue);
                }
            }
        }
        private EmployeeType _employeeType;
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;

        #endregion
        #region Association Fixup
    
        private void FixupEmployeeType(EmployeeType previousValue)
        {
            if (previousValue != null && previousValue.Employees.Contains(this))
            {
                previousValue.Employees.Remove(this);
            }
    
            if (EmployeeType != null)
            {
                if (!EmployeeType.Employees.Contains(this))
                {
                    EmployeeType.Employees.Add(this);
                }
                if (EmployeeTypeFK != EmployeeType.EmployeeTypeID)
                {
                    EmployeeTypeFK = EmployeeType.EmployeeTypeID;
                }
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.Employees.Contains(this))
            {
                previousValue.Employees.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.Employees.Contains(this))
                {
                    User.Employees.Add(this);
                }
                if (UsersFK != User.UserPK)
                {
                    UsersFK = User.UserPK;
                }
            }
        }
    
        private void FixupEmployeeCustomerAssociations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmployeeCustomerAssociation item in e.NewItems)
                {
                    item.Employee = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmployeeCustomerAssociation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Employee, this))
                    {
                        item.Employee = null;
                    }
                }
            }
        }
    
        private void FixupEmployeePhoneAssociations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmployeePhoneAssociation item in e.NewItems)
                {
                    item.Employee = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmployeePhoneAssociation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Employee, this))
                    {
                        item.Employee = null;
                    }
                }
            }
        }

        #endregion
    }
}
