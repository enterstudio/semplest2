//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class CustomerNote
    {
        #region Primitive Properties
    
        public virtual int NotePK
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CustomerFK
        {
            get { return _customerFK; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_customerFK != value)
                    {
                        if (Customer != null && Customer.CustomerPK != value)
                        {
                            Customer = null;
                        }
                        _customerFK = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _customerFK;
    
        public virtual Nullable<System.DateTime> CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> EditedDate
        {
            get;
            set;
        }
    
        public virtual string Note
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Customer Customer
        {
            get { return _customer; }
            set
            {
                if (!ReferenceEquals(_customer, value))
                {
                    var previousValue = _customer;
                    _customer = value;
                    FixupCustomer(previousValue);
                }
            }
        }
        private Customer _customer;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCustomer(Customer previousValue)
        {
            if (previousValue != null && previousValue.CustomerNotes.Contains(this))
            {
                previousValue.CustomerNotes.Remove(this);
            }
    
            if (Customer != null)
            {
                if (!Customer.CustomerNotes.Contains(this))
                {
                    Customer.CustomerNotes.Add(this);
                }
                if (CustomerFK != Customer.CustomerPK)
                {
                    CustomerFK = Customer.CustomerPK;
                }
            }
            else if (!_settingFK)
            {
                CustomerFK = null;
            }
        }

        #endregion
    }
}
