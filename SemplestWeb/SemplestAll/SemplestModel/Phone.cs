//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SemplestModel
{
    public partial class Phone
    {
        #region Primitive Properties
    
        public virtual int PhonePK
        {
            get;
            set;
        }
    
        public virtual string Phone1
        {
            get;
            set;
        }
    
        public virtual string Extension
        {
            get;
            set;
        }
    
        public virtual int PhoneTypeFK
        {
            get { return _phoneTypeFK; }
            set
            {
                if (_phoneTypeFK != value)
                {
                    if (PhoneType != null && PhoneType.PhoneTypePK != value)
                    {
                        PhoneType = null;
                    }
                    _phoneTypeFK = value;
                }
            }
        }
        private int _phoneTypeFK;
    
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> EditedDate
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<CustomerPhoneAssociation> CustomerPhoneAssociations
        {
            get
            {
                if (_customerPhoneAssociations == null)
                {
                    var newCollection = new FixupCollection<CustomerPhoneAssociation>();
                    newCollection.CollectionChanged += FixupCustomerPhoneAssociations;
                    _customerPhoneAssociations = newCollection;
                }
                return _customerPhoneAssociations;
            }
            set
            {
                if (!ReferenceEquals(_customerPhoneAssociations, value))
                {
                    var previousValue = _customerPhoneAssociations as FixupCollection<CustomerPhoneAssociation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomerPhoneAssociations;
                    }
                    _customerPhoneAssociations = value;
                    var newValue = value as FixupCollection<CustomerPhoneAssociation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomerPhoneAssociations;
                    }
                }
            }
        }
        private ICollection<CustomerPhoneAssociation> _customerPhoneAssociations;
    
        public virtual ICollection<EmployeePhoneAssociation> EmployeePhoneAssociations
        {
            get
            {
                if (_employeePhoneAssociations == null)
                {
                    var newCollection = new FixupCollection<EmployeePhoneAssociation>();
                    newCollection.CollectionChanged += FixupEmployeePhoneAssociations;
                    _employeePhoneAssociations = newCollection;
                }
                return _employeePhoneAssociations;
            }
            set
            {
                if (!ReferenceEquals(_employeePhoneAssociations, value))
                {
                    var previousValue = _employeePhoneAssociations as FixupCollection<EmployeePhoneAssociation>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployeePhoneAssociations;
                    }
                    _employeePhoneAssociations = value;
                    var newValue = value as FixupCollection<EmployeePhoneAssociation>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployeePhoneAssociations;
                    }
                }
            }
        }
        private ICollection<EmployeePhoneAssociation> _employeePhoneAssociations;
    
        public virtual PhoneType PhoneType
        {
            get { return _phoneType; }
            set
            {
                if (!ReferenceEquals(_phoneType, value))
                {
                    var previousValue = _phoneType;
                    _phoneType = value;
                    FixupPhoneType(previousValue);
                }
            }
        }
        private PhoneType _phoneType;

        #endregion
        #region Association Fixup
    
        private void FixupPhoneType(PhoneType previousValue)
        {
            if (previousValue != null && previousValue.Phones.Contains(this))
            {
                previousValue.Phones.Remove(this);
            }
    
            if (PhoneType != null)
            {
                if (!PhoneType.Phones.Contains(this))
                {
                    PhoneType.Phones.Add(this);
                }
                if (PhoneTypeFK != PhoneType.PhoneTypePK)
                {
                    PhoneTypeFK = PhoneType.PhoneTypePK;
                }
            }
        }
    
        private void FixupCustomerPhoneAssociations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (CustomerPhoneAssociation item in e.NewItems)
                {
                    item.Phone = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CustomerPhoneAssociation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Phone, this))
                    {
                        item.Phone = null;
                    }
                }
            }
        }
    
        private void FixupEmployeePhoneAssociations(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmployeePhoneAssociation item in e.NewItems)
                {
                    item.Phone = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmployeePhoneAssociation item in e.OldItems)
                {
                    if (ReferenceEquals(item.Phone, this))
                    {
                        item.Phone = null;
                    }
                }
            }
        }

        #endregion
    }
}
