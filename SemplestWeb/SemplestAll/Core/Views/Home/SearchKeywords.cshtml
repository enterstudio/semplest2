@{
    ViewBag.Title = "SearchKeywords";
}
@section Title{
    Search Keywords
}
@section Links
{}

@model Semplest.Core.Models.SearchKeywordsModel

@section Navbar{
    <div id="panelbar-images">
    </div>
    <script>
        $("#panelbar-images").kendoPanelBar({
            dataSource: [
                {
                    text: "Home",
                    items: [
                        { text: "Quick Start Guide" },
                        { text: "FAQs" },
                        { text: "Contact Us" }
                    ]
                }
            ]
        });

    </script>
}
<div id="exampleTitleBg">
    <h1 id="exampleTitle">
        <span class="exampleIcon overviewIcon"></span>Search Keywords
    </h1>
</div>

<span unselectable="on" class="k-select"><span unselectable="on" class="k-icon k-icon-clock">
                                             select</span>
</span>

<div id="exampleWrap">
    <div id="example" class="k-content">
        @using (Html.BeginForm())
        {
            <div id="datasource-views" class="k-header" style="background-color: #f2f2f2; border-bottom-color: Black;">
                <h2>
                    Welcome!</h2>
                <div id="cap-view" class="k-header">
                    <div id="cap" class="black-cap">
                    </div>
                    <div id ="product" style="background-color: #f2f2f2">
                        <h3>Product Promotion</h3> 
                        @Html.TextBoxFor(m => m.Product, new {style = "width:250px"})
                        @Html.ValidationMessageFor(m => m.Product, null, new {@class = "error"})
                        <br />
                        <h3>Landing Page</h3> 
                        @Html.TextBoxFor(m => m.LandingPage, new {style = "width:250px"})
                        @Html.ValidationMessageFor(m => m.LandingPage, null, new {@class = "error"})
                        <br />
                        <h3>Description</h3> 
                        @Html.TextBoxFor(m => m.Description, new {style = "width:250px"})
                        @Html.ValidationMessageFor(m => m.Description, null, new {@class = "error"})

                        <br />
                        <h3>Ad Copy</h3> 
                        @Html.TextBoxFor(m => m.AdCopy, new {style = "width:250px"})
                        @Html.ValidationMessageFor(m => m.AdCopy, null, new {@class = "error"})

                        <br />
                        <br />
                        <button type="submit" class="k-button" id="getCategories" name="Command" value="GetCategories">Get Categories</button>
                        <br />
                        <br />
       
                        @if (Model != null)
                        {
                            //@Html.ListBox("SelectedCategories", new SelectList(Model.AllCategories.ToList()));
                            //    <div class="display-field">
                            //          @Html.DisplayFor(model => model.AllCategories)
                            //    </div>
                            //@Html.ListBoxFor(t => t.SelectedCategory, new SelectList(Model.AllCategories, "Name", "Name"))
                            //@Html.ListBox("CategoryList", new MultiSelectList(Model.AllCategories.ToList(), "Name", "Name"));
                            <div>
                                @Html.ListBoxFor(m => m.ItemIds, new MultiSelectList(Model.AllCategories, "Id", "Name", Model.ItemIds), new {Multiple = "multiple", style = "height:125px;width:700px;overflow-x:auto"});
                                @*                         @Html.LabelFor(m => m.StatusMessage);
*@                         </div>
                            //@Html.ListBoxFor(m => m.ItemIds, new MultiSelectList(Model.AllCategories, "Id", "Name", Model.ItemIds), new { Multiple = "multiple" });
                            //@Html.ListBoxFor(m => m.ItemIds, (IEnumerable<SelectListItem>)(new[] { new SelectListItem() { Value = "1", Text = "text1" }, new SelectListItem() { Value = "2", Text = "text2" } }));
                            //@Html.ListBoxFor(m => m.ItemIds, Model.CategoriesList, new { Multiple = "multiple" });


                            //@Html.ListBoxFor(m => m.SelectedCategories, Model.AllCategories.Select(f => new SelectListItem { Text = f.Name, Value = f.Name }), new { Multiple = "multiple" });
                        }
                        @*                    <div id="listView"></div>
*@
                        <br />
                        <br />
                        <button class="k-button" id="getKeywords" name="Command" value="GetKeywords">Get Keywords</button>
                        <br />
                        <br />

                        @if (Model != null)
                        {
                            @Html.ListBoxFor(m => m.ItemIds, new MultiSelectList(Model.AllKeywords, "Name", "Name", Model.ItemIds), new {Multiple = "multiple", style = "height:125px;width:700px;overflow-x:auto"})
                            ;
                        }

                    </div>
                </div>
            </div>
        }

        <script type="text/javascript">
            $(document).ready(function() {
                var LOADING = "k-loading";
                var arrow = $('<span unselectable="on" class="k-select"><span unselectable="on" class="k-icon k-icon-clock">select</span></span>');

                function hideBusy() {
                    var that = this;
                    clearTimeout(that._busy);
                    that._arrow.removeClass(LOADING);

                    function _showBusy() {
                        var that = this;

                        if (that._busy) {
                            return;
                        }

                        that._busy = setTimeout(function() {
                            arrow.addClass(LOADING);
                        }, 100);
                    }

                    ;
                    _showBusy();

//                $("#listView").kendoListView({
//                    pageable: true,
//                    selectable: true,
//                    navigatable: true,
//                    template: "<li>${FirstName}</li>",
//                    dataSource: {
//                        data: [
//                  {
//                      FirstName: "Joe",
//                      LastName: "Smith"
//                  },
//                  {
//                      FirstName: "Jane",
//                      LastName: "Smith"
//                  }]
//                    }
//                });

                })

                ;

                $('#getCategories').click(function() {
                    //alert("in getCategories func"); 
                });

                $('#getKeywords').click(function() {
                    $('#StatusMessage').val("Please wait while getting the Keywords");
                    //alert("in getKeywords func");
                });
                        

        </script>
        <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"> </script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"> </script>
        <style scoped>
            #datasource-views {
                border-bottom-color: Black;
                border-radius: 10px;
                border-style: solid;
                border-width: 2px;
                overflow: hidden;
                padding: 20px;
            }

            .error {
                color: red;
                font-size: .9em; /*Makes sure that the error div is smaller than input */
                margin-left: 5em; /*Moves div to the right */
                margin-top: -1.5em; /*Moves the div up to the same level as input */
                width: 13em; /* Ensures that the div won't exceed right padding of form */
            }
        </style>
    </div>
</div>